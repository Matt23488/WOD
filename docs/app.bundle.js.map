{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/Application.ts","src/ts/Character/Character.ts","src/ts/Character/Damage.ts","src/ts/Character/Equipment.ts","src/ts/Character/InventoryItem.ts","src/ts/Character/Merit.ts","src/ts/Character/Note.ts","src/ts/Character/Repository/ICharacterRepository.ts","src/ts/Character/Repository/LocalStorageCharacterRepository.ts","src/ts/Command/AttributeCommand.ts","src/ts/Command/BatchCommand.ts","src/ts/Command/ClearUsedCommand.ts","src/ts/Command/CollectionAddCommand.ts","src/ts/Command/CollectionMoveCommand.ts","src/ts/Command/CollectionRemoveCommand.ts","src/ts/Command/CommandStack.ts","src/ts/Command/TextInputCommand.ts","src/ts/Dice.ts","src/ts/Keyboard.ts","src/ts/main.ts","src/ts/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Character_1","Dice_1","CommandStack_1","ICharacterRepository_1","Keyboard_1","Application","prototype","toggleClock","this","showClock","goBack","mode","_previousSection","window","location","hash","newCharacter","newChar","default","locked","characters","push","selectCharacter","character","charIndex","indexOf","characterId","instance","reset","deleteCharacter","_this","swal","title","name","text","icon","buttons","dangerMode","then","willDelete","id","remove","saveCharacters","_characterRepo","realCharacters","timer","downloadCharacter","json","JSON","stringify","toJson","dl","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","uploadCharacter","ul","type","accept","addEventListener","file","files","reader","FileReader","onload","target","result","fromJson","parse","readAsText","toggleCharacterLock","switchMode","getElementById","undo","canUndo","redo","canRedo","getCharacterRepository","savedCharacters","loadCharacters","unshift","ghost","ko","observable","observableArray","computed","filter","dice","lockButtonClass","lockButtonIcon","currentTime","Date","currentTimeDisplay","time","hours","getHours","minutes","getMinutes","seconds","getSeconds","suffix","setInterval","registerKeyboardCommand","log","substring","$domElement","$","scrollTop","offset","top","Damage_1","Equipment_1","InventoryItem_1","Merit_1","Note_1","utils_1","CollectionAddCommand_1","CollectionRemoveCommand_1","CollectionMoveCommand_1","ClearUsedCommand_1","AttributeCommand_1","Character","firstNameLength","randomInteger","lastNameLength","firstName","lastName","newLetter","alphabet","charAt","toUpperCase","randomName","player","age","vice","virtue","origins","gender","concept","chronicle","intelligence","strength","presence","wits","dexterity","manipulation","resolve","stamina","composure","academics","robotics","crafts","investigation","medicine","occult","politics","science","athletics","brawl","drive","ranged","larceny","stealth","survival","weaponry","animalKen","empathy","expression","intimidation","persuasion","socialize","streetwise","subterfuge","merits","spells","flaws","size","armor","experience","morality","weapons","equipment","inventory","notes","onComponentClick","_","currentTarget","getElementsByTagName","focus","newItem","constructor","execute","createLockable","removeItem","item","moveItem","direction","index","newIndex","clearUsed","usedObservable","bashing","damage","lethal","aggravated","usedMagic","usedWillpower","map","m","value","s","w","description","quantity","extend","lockable","named","numeric","precision","min","max","speed","defense","Math","initiative","health","magic","subscribe","val","executeWithPrevious","willpower","BatchCommand_1","Damage","anyEmpty","totalHealth","addBashing","alert","addLethal","addAggravated","clearAll","totalHealthObservable","Equipment","InventoryItem","getDisplayText","displayText","Merit","Note","LocalStorageCharacterRepository_1","args","_i","arguments","LocalStorageCharacterRepository","localStorage","getItem","setItem","AttributeCommand","getType","toString","_observable","getName","_oldValue","_newValue","doesNothing","newValue","oldValue","BatchCommand","Object","defineProperty","_commands","getCommand","every","command","commands","ClearUsedCommand","CollectionAddCommand","_newItem","CollectionMoveCommand","splice","_oldIndex","_newIndex","_item","oldIndex","CollectionRemoveCommand","_itemIndex","CommandStack","_instance","_undoStack","_redoStack","getPreviousCommand","drillIntoBatch","previousCommand","undoLength","commandCount","removeAll","_currentlyExecuting","setTimeout","pop","console","redoLength","TextInputCommand","Dice","incrementDicePool","amount","newAmount","dicePool","rollDice","RollState","beginRoll","rollRounds","rollingInProgress","totalDiceSuccesses","reduce","total","d","totalDiceSuccessesDisplay","_diceObj","_currentRoundRolls","_currentRoundResults","_intervalHandle","nextRoll","_nextRoundRolls","diceContainer_1","getElementsByClassName","critMessage_1","classList","add","innerText","_currentDice","replace","_currentRound","clearInterval","critMessage","diceObj","_keyboardCommands","Map","key","callback","set","ctrlKey","_b","__values","entries","_c","next","done","_d","__read","preventDefault","Application_1","applyCustomKnockoutCode","constructors","app","toggleTooltips","enable","tooltip","applyBindings","outerWidth","TextInputCommand_1","randomFloat","minInclusive","maxExclusive","_a","random","floor","_observableNameMap","bindingHandlers","update","element","valueAccessor","divs","newRound","rolls","span","delay","animation","spans","j","roll","backgroundImage","innerHTML","damageDisplay","init","damageObj","attribute","dots","dot","dataset","toggle","forEach","canClear","clearDot","backgroundColor","borderColor","readOnlyAttribute","hideUnfilled","used","focusOnCreation","contextMenu","undoableTextInput","inputElement","extenders","pureComputed","read","write","notifySubscribers","notify","Infinity","current","roundingMultiplier","pow","newValueAsNum","isNaN","valueToWrite","round","subscribable","fn","get"],"mappings":"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","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Character from \"./Character/Character\";\r\nimport Dice from \"./Dice\";\r\n// import swal from \"sweetalert\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\nimport ICharacterRepository, { getCharacterRepository } from \"./Character/Repository/ICharacterRepository\";\r\nimport { registerKeyboardCommand } from \"./Keyboard\";\r\n\r\nexport default class Application {\r\n    private _characterRepo: ICharacterRepository;\r\n    public mode: KnockoutObservable<string>;\r\n    public characterId: KnockoutObservable<number>;\r\n    public characters: KnockoutObservableArray<Character>;\r\n    public realCharacters: KnockoutComputed<Array<Character>>;\r\n    public character: KnockoutComputed<Character>;\r\n    public dice: Dice;\r\n    public lockButtonClass: KnockoutComputed<string>;\r\n    public lockButtonIcon: KnockoutComputed<string>;\r\n    private _previousSection: string;\r\n    public showClock: KnockoutObservable<boolean>;\r\n    public currentTime: KnockoutObservable<Date>;\r\n    public currentTimeDisplay: KnockoutComputed<string>;\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n\r\n    public constructor() {\r\n        this._characterRepo = getCharacterRepository(\"LocalStorage\");\r\n\r\n        const savedCharacters = this._characterRepo.loadCharacters();\r\n        savedCharacters.unshift(Character.newCharacter());\r\n        savedCharacters[0].ghost = true;\r\n\r\n        this.mode = ko.observable(\"list\");\r\n        this.characterId = ko.observable(0);\r\n        this.characters = ko.observableArray(savedCharacters);\r\n        this.realCharacters = ko.computed(() => this.characters().filter(c => !c.ghost), this);\r\n        this.character = ko.computed(() => this.characters()[this.characterId()], this);\r\n        this.dice = new Dice();\r\n        this.lockButtonClass = ko.computed(() => this.character().locked() ? \"btn-danger\" : \"btn-outline-success\", this);\r\n        this.lockButtonIcon = ko.computed(() => this.character().locked() ? \"fas fa-lock\" : \"fas fa-lock-open\", this);\r\n        this._previousSection = null;\r\n        this.showClock = ko.observable(false);\r\n        this.currentTime = ko.observable(new Date());\r\n\r\n        this.currentTimeDisplay = ko.computed(() => {\r\n            const time = this.currentTime();\r\n            let hours = time.getHours();\r\n            const minutes = time.getMinutes();\r\n            const seconds = time.getSeconds();\r\n            const suffix = hours < 12 ? \"AM\" : \"PM\";\r\n            const minutePrefix = minutes < 10 ? \"0\" : \"\";\r\n            const secondPrefix = seconds < 10 ? \"0\" : \"\";\r\n            if (hours > 12) hours -= 12;\r\n            else if (hours === 0) hours = 12;\r\n            return `${hours}:${minutePrefix}${minutes}:${secondPrefix}${seconds} ${suffix}`;\r\n        }, this);\r\n\r\n        this.canUndo = ko.computed(() => CommandStack.instance.canUndo() && !this.character().locked(), this);\r\n        this.canRedo = ko.computed(() => CommandStack.instance.canRedo() && !this.character().locked(), this);\r\n\r\n        window.setInterval(() => {\r\n            this.currentTime(new Date());\r\n        }, 1000);\r\n\r\n        registerKeyboardCommand(\"s\", () => this.saveCharacters());\r\n        registerKeyboardCommand(\"z\", () => { \r\n            if (this.mode() === \"list\") return;\r\n            this.undo();\r\n        });\r\n        registerKeyboardCommand(\"Z\", () => {\r\n            if (this.mode() === \"list\") return;\r\n            this.redo();\r\n        });\r\n        registerKeyboardCommand(\"l\", () => {\r\n            if (this.mode() === \"list\") return;\r\n            this.toggleCharacterLock();\r\n        });\r\n        registerKeyboardCommand(\"o\", () => this.toggleClock());\r\n        registerKeyboardCommand(\"q\", () => CommandStack.instance.log());\r\n\r\n        window.addEventListener(\"hashchange\", e => {\r\n            const hash = window.location.hash.substring(1);\r\n            if (!hash) return;\r\n\r\n            var offset = 80; // TODO: Don't hardcode this maybe?\r\n            var $domElement = $(`#${hash}`);\r\n            $(window).scrollTop($domElement.offset().top - offset);\r\n        });\r\n    }\r\n\r\n    public toggleClock(): void {\r\n        this.showClock(!this.showClock());\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.mode() === \"sheet\") this.mode(\"list\");\r\n        else {\r\n            this.mode(\"sheet\");\r\n\r\n            if (this._previousSection) window.location.hash = this._previousSection;\r\n        }\r\n    }\r\n\r\n    public newCharacter(): void {\r\n        const newChar = Character.newCharacter();\r\n        newChar.locked(false);\r\n        this.characters.push(newChar);\r\n        this.selectCharacter(newChar);\r\n    }\r\n\r\n    public selectCharacter(character: Character): void {\r\n        const charIndex = this.characters.indexOf(character);\r\n        if (this.characterId() !== charIndex) {\r\n            this.characterId(charIndex);\r\n            CommandStack.instance.reset();\r\n        }\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public deleteCharacter(character: Character): void {\r\n        if (this.character().locked()) return;\r\n        swal({\r\n            title: `Delete ${this.character().name()}`,\r\n            text: \"Are you sure? (As long as you don't save, your character won't be gone.)\",\r\n            icon: \"warning\",\r\n            buttons: [\"Cancel\", \"Delete\"],\r\n            dangerMode: true\r\n        })\r\n        .then((willDelete: boolean) => {\r\n            if (willDelete) {\r\n                const id = this.characterId();\r\n                this.characterId(0);\r\n                this.characters.remove(this.characters()[id]);\r\n                this.mode(\"list\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public saveCharacters(): void {\r\n        this._characterRepo.saveCharacters(this.realCharacters());\r\n        swal(\"Characters saved successfully!\", {\r\n            buttons: {},\r\n            timer: 1000,\r\n            icon: \"success\"\r\n        });\r\n    }\r\n\r\n    public downloadCharacter(): void {\r\n        const json = JSON.stringify(this.character().toJson());\r\n\r\n        const dl = document.createElement(\"a\");\r\n        dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${encodeURIComponent(json)}`);\r\n        dl.setAttribute(\"download\", `${this.character().name()}.json`);\r\n\r\n        dl.style.display = \"none\";\r\n        document.body.appendChild(dl);\r\n\r\n        dl.click();\r\n\r\n        document.body.removeChild(dl);\r\n    }\r\n\r\n    public uploadCharacter(): void {\r\n        const ul = document.createElement(\"input\");\r\n        ul.type = \"file\";\r\n        ul.accept = \".json\";\r\n        ul.style.display = \"none\";\r\n\r\n        ul.addEventListener(\"change\", e => {\r\n            const file = ul.files[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const json = e.target.result;\r\n                this.characters.push(Character.fromJson(JSON.parse(json)));\r\n                this.characterId(this.characters().length - 1);\r\n                this.mode(\"sheet\");\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n\r\n        document.body.appendChild(ul);\r\n\r\n        ul.click();\r\n\r\n        document.body.removeChild(ul);\r\n    }\r\n\r\n    public toggleCharacterLock(): void {\r\n        const character = this.character();\r\n        character.locked(!character.locked());\r\n    }\r\n\r\n    public switchMode(mode: string): () => void {\r\n        return () => {\r\n            if (this.mode() !== \"list\" && document.getElementById(mode)) {\r\n                this._previousSection = mode;\r\n            }\r\n            else this._previousSection = null;\r\n\r\n            window.location.hash = \"\";\r\n            this.mode(mode);\r\n        }\r\n    }\r\n\r\n    public undo(): void {\r\n        if (!this.canUndo()) return;\r\n        CommandStack.instance.undo();\r\n    }\r\n\r\n    public redo(): void {\r\n        if (!this.canRedo()) return;\r\n        CommandStack.instance.redo();\r\n    }\r\n}","import Damage from \"./Damage\";\r\nimport Equipment from \"./Equipment\";\r\nimport InventoryItem from \"./InventoryItem\";\r\nimport Merit from \"./Merit\";\r\nimport Note from \"./Note\";\r\nimport { randomInteger } from \"../utils\";\r\nimport CommandStack from \"../Command/CommandStack\";\r\nimport CollectionAddCommand from \"../Command/CollectionAddCommand\";\r\nimport CollectionRemoveCommand from \"../Command/CollectionRemoveCommand\";\r\nimport CollectionMoveCommand from \"../Command/CollectionMoveCommand\";\r\nimport ClearUsedCommand from \"../Command/ClearUsedCommand\";\r\nimport AttributeCommand from \"../Command/AttributeCommand\";\r\n\r\nexport default class Character {\r\n    public ghost: boolean = false;\r\n    public locked: KnockoutObservable<boolean> = ko.observable(true);\r\n\r\n    public name: KnockoutObservable<string>;\r\n    public player: KnockoutObservable<string>;\r\n    public age: KnockoutObservable<number>;\r\n    public vice: KnockoutObservable<string>;\r\n    public virtue: KnockoutObservable<string>;\r\n    public origins: KnockoutObservable<string>;\r\n    public gender: KnockoutObservable<string>;\r\n    public concept: KnockoutObservable<string>;\r\n    public chronicle: KnockoutObservable<string>;\r\n\r\n    public intelligence: KnockoutObservable<number>;\r\n    public strength: KnockoutObservable<number>;\r\n    public presence: KnockoutObservable<number>;\r\n    public wits: KnockoutObservable<number>;\r\n    public dexterity: KnockoutObservable<number>;\r\n    public manipulation: KnockoutObservable<number>;\r\n    public resolve: KnockoutObservable<number>;\r\n    public stamina: KnockoutObservable<number>;\r\n    public composure: KnockoutObservable<number>;\r\n\r\n    public academics: KnockoutObservable<number>;\r\n    public robotics: KnockoutObservable<number>;\r\n    public crafts: KnockoutObservable<number>;\r\n    public investigation: KnockoutObservable<number>;\r\n    public medicine: KnockoutObservable<number>;\r\n    public occult: KnockoutObservable<number>;\r\n    public politics: KnockoutObservable<number>;\r\n    public science: KnockoutObservable<number>;\r\n    \r\n    public athletics: KnockoutObservable<number>;\r\n    public brawl: KnockoutObservable<number>;\r\n    public drive: KnockoutObservable<number>;\r\n    public ranged: KnockoutObservable<number>;\r\n    public larceny: KnockoutObservable<number>;\r\n    public stealth: KnockoutObservable<number>;\r\n    public survival: KnockoutObservable<number>;\r\n    public weaponry: KnockoutObservable<number>;\r\n\r\n    public animalKen: KnockoutObservable<number>;\r\n    public empathy: KnockoutObservable<number>;\r\n    public expression: KnockoutObservable<number>;\r\n    public intimidation: KnockoutObservable<number>;\r\n    public persuasion: KnockoutObservable<number>;\r\n    public socialize: KnockoutObservable<number>;\r\n    public streetwise: KnockoutObservable<number>;\r\n    public subterfuge: KnockoutObservable<number>;\r\n\r\n    public merits: KnockoutObservableArray<Merit>;\r\n    public spells: KnockoutObservableArray<Merit>;\r\n    public flaws: KnockoutObservableArray<Merit>;\r\n\r\n    public size: KnockoutObservable<number>;\r\n    public speed: KnockoutComputed<number>;\r\n    public defense: KnockoutComputed<number>;\r\n    public armor: KnockoutObservable<number>;\r\n    public initiative: KnockoutComputed<number>;\r\n    public experience: KnockoutObservable<number>;\r\n    public morality: KnockoutObservable<number>;\r\n\r\n    public weapons: KnockoutObservableArray<Equipment>;\r\n    public equipment: KnockoutObservableArray<Equipment>;\r\n    public inventory: KnockoutObservableArray<InventoryItem>;\r\n\r\n    public notes: KnockoutObservableArray<Note>;\r\n\r\n    public health: KnockoutComputed<number>;\r\n    public damage: Damage;\r\n\r\n    public magic: KnockoutComputed<number>;\r\n    public usedMagic: KnockoutObservable<number>;\r\n\r\n    public willpower: KnockoutComputed<number>;\r\n    public usedWillpower: KnockoutObservable<number>;\r\n\r\n    public constructor(json: CharacterJson) {\r\n        this.name = ko.observable(json.name).extend({ lockable: this.locked, named: \"Name\" });\r\n        this.player = ko.observable(json.player).extend({ lockable: this.locked });\r\n        this.age = ko.observable(json.age).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.vice = ko.observable(json.vice).extend({ lockable: this.locked });\r\n        this.virtue = ko.observable(json.virtue).extend({ lockable: this.locked });\r\n        this.origins = ko.observable(json.origins).extend({ lockable: this.locked });\r\n        this.gender = ko.observable(json.gender).extend({ lockable: this.locked });\r\n        this.concept = ko.observable(json.concept).extend({ lockable: this.locked });\r\n        this.chronicle = ko.observable(json.chronicle).extend({ lockable: this.locked });\r\n\r\n        this.intelligence = ko.observable(json.intelligence).extend({ lockable: this.locked, named: \"Intelligence\" });\r\n        this.strength = ko.observable(json.strength).extend({ lockable: this.locked });\r\n        this.presence = ko.observable(json.presence).extend({ lockable: this.locked });\r\n        this.wits = ko.observable(json.wits).extend({ lockable: this.locked });\r\n        this.dexterity = ko.observable(json.dexterity).extend({ lockable: this.locked });\r\n        this.manipulation = ko.observable(json.manipulation).extend({ lockable: this.locked });\r\n        this.resolve = ko.observable(json.resolve).extend({ lockable: this.locked });\r\n        this.stamina = ko.observable(json.stamina).extend({ lockable: this.locked });\r\n        this.composure = ko.observable(json.composure).extend({ lockable: this.locked });\r\n\r\n        this.academics = ko.observable(json.academics).extend({ lockable: this.locked });\r\n        this.robotics = ko.observable(json.robotics).extend({ lockable: this.locked });\r\n        this.crafts = ko.observable(json.crafts).extend({ lockable: this.locked });\r\n        this.investigation = ko.observable(json.investigation).extend({ lockable: this.locked });\r\n        this.medicine = ko.observable(json.medicine).extend({ lockable: this.locked });\r\n        this.occult = ko.observable(json.occult).extend({ lockable: this.locked });\r\n        this.politics = ko.observable(json.politics).extend({ lockable: this.locked });\r\n        this.science = ko.observable(json.science).extend({ lockable: this.locked });\r\n\r\n        this.athletics = ko.observable(json.athletics).extend({ lockable: this.locked });\r\n        this.brawl = ko.observable(json.brawl).extend({ lockable: this.locked });\r\n        this.drive = ko.observable(json.drive).extend({ lockable: this.locked });\r\n        this.ranged = ko.observable(json.ranged).extend({ lockable: this.locked });\r\n        this.larceny = ko.observable(json.larceny).extend({ lockable: this.locked });\r\n        this.stealth = ko.observable(json.stealth).extend({ lockable: this.locked });\r\n        this.survival = ko.observable(json.survival).extend({ lockable: this.locked });\r\n        this.weaponry = ko.observable(json.weaponry).extend({ lockable: this.locked });\r\n\r\n        this.animalKen = ko.observable(json.animalKen).extend({ lockable: this.locked });\r\n        this.empathy = ko.observable(json.empathy).extend({ lockable: this.locked });\r\n        this.expression = ko.observable(json.expression).extend({ lockable: this.locked });\r\n        this.intimidation = ko.observable(json.intimidation).extend({ lockable: this.locked });\r\n        this.persuasion = ko.observable(json.persuasion).extend({ lockable: this.locked });\r\n        this.socialize = ko.observable(json.socialize).extend({ lockable: this.locked });\r\n        this.streetwise = ko.observable(json.streetwise).extend({ lockable: this.locked });\r\n        this.subterfuge = ko.observable(json.subterfuge).extend({ lockable: this.locked });\r\n\r\n        this.merits = ko.observableArray(json.merits.map(m => new Merit(m.name, m.value, this.locked)));\r\n        this.spells = ko.observableArray(json.spells.map(s => new Merit(s.name, s.value, this.locked)));\r\n        this.flaws = ko.observableArray(json.flaws.map(f => new Merit(f.name, f.value, this.locked)));\r\n\r\n        this.size = ko.observable(json.size).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n        this.speed = ko.computed(() => this.strength() + this.dexterity() + 5, this);\r\n        this.defense = ko.computed(() => Math.min(this.dexterity(), this.wits()), this);\r\n        this.armor = ko.observable(json.armor).extend({ numeric: { precision: 0 } }).extend({ lockable: this.locked });\r\n        this.initiative = ko.computed(() => this.dexterity() + this.composure(), this);\r\n        this.experience = ko.observable(json.experience).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.morality = ko.observable(json.morality).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n\r\n        this.weapons = ko.observableArray(json.weapons.map(w => new Equipment(w.name, w.description, this.locked)));\r\n        this.equipment = ko.observableArray(json.equipment.map(e => new Equipment(e.name, e.description, this.locked)));\r\n        this.inventory = ko.observableArray(json.inventory.map(i => new InventoryItem(i.name, i.description, i.quantity, this.locked)));\r\n\r\n        this.notes = ko.observableArray(json.notes.map(n => new Note(n, this.locked)));\r\n\r\n        this.health = ko.computed(() => this.stamina() + this.size(), this);\r\n        this.damage = new Damage(this.health, json.bashing, json.lethal, json.aggravated, this.locked);\r\n\r\n        this.magic = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedMagic = ko.observable(json.usedMagic || 0).extend({ lockable: this.locked });\r\n        this.magic.subscribe(val => {\r\n            if (this.usedMagic() > val) CommandStack.instance.executeWithPrevious(new AttributeCommand(this.usedMagic, val, this.usedMagic()));\r\n        }, this);\r\n\r\n        this.willpower = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedWillpower = ko.observable(json.usedWillpower || 0).extend({ lockable: this.locked });\r\n        this.willpower.subscribe(val => {\r\n            if (this.usedWillpower() > val) CommandStack.instance.executeWithPrevious(new AttributeCommand(this.usedWillpower, val, this.usedWillpower()));\r\n        }, this);\r\n    }\r\n\r\n    public static newCharacter(): Character {\r\n        return new Character({\r\n            name: randomName(),\r\n            player: \"\",\r\n            age: 0,\r\n            vice: \"\",\r\n            virtue: \"\",\r\n            origins: \"\",\r\n            gender: \"\",\r\n            concept: \"\",\r\n            chronicle: \"\",\r\n\r\n            intelligence: 1,\r\n            strength: 1,\r\n            presence: 1,\r\n            wits: 1,\r\n            dexterity: 1,\r\n            manipulation: 1,\r\n            resolve: 1,\r\n            stamina: 1,\r\n            composure: 1,\r\n\r\n            academics: 0,\r\n            robotics: 0,\r\n            crafts: 0,\r\n            investigation: 0,\r\n            medicine: 0,\r\n            occult: 0,\r\n            politics: 0,\r\n            science: 0,\r\n\r\n            athletics: 0,\r\n            brawl: 0,\r\n            drive: 0,\r\n            ranged: 0,\r\n            larceny: 0,\r\n            stealth: 0,\r\n            survival: 0,\r\n            weaponry: 0,\r\n\r\n            animalKen: 0,\r\n            empathy: 0,\r\n            expression: 0,\r\n            intimidation: 0,\r\n            persuasion: 0,\r\n            socialize: 0,\r\n            streetwise: 0,\r\n            subterfuge: 0,\r\n\r\n            merits: [],\r\n            spells: [],\r\n            flaws: [],\r\n\r\n            size: 5,\r\n            armor: 0,\r\n            experience: 0,\r\n            morality: 7,\r\n\r\n            weapons: [],\r\n            equipment: [],\r\n            inventory: [],\r\n\r\n            notes: []\r\n        });\r\n    }\r\n\r\n    public static fromJson(json: CharacterJson): Character {\r\n        return new Character(json);\r\n    }\r\n\r\n    public onComponentClick(_: any, e: Event): void {\r\n        const element = <HTMLElement>e.currentTarget;\r\n        element.getElementsByTagName(\"input\")[0].focus();\r\n    }\r\n\r\n    public newItem<T>(observableArray: KnockoutObservableArray<T>, constructor: { createLockable(locked: KnockoutObservable<boolean>): T}): () => void {\r\n        return () => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionAddCommand(observableArray, constructor.createLockable(this.locked)));\r\n        };\r\n    }\r\n\r\n    public removeItem<T>(observableArray: KnockoutObservableArray<T>): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionRemoveCommand(observableArray, item));\r\n        };\r\n    }\r\n\r\n    public moveItem<T>(observableArray: KnockoutObservableArray<T>, direction: number): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            const index = observableArray.indexOf(item);\r\n            const newIndex = index + direction;\r\n\r\n            if (newIndex < 0 || newIndex >= observableArray().length) return;\r\n\r\n            CommandStack.instance.execute(new CollectionMoveCommand(observableArray, item, newIndex, index));\r\n        };\r\n    }\r\n\r\n    public clearUsed(usedObservable: KnockoutObservable<number>): () => void {\r\n        return () => {\r\n            CommandStack.instance.execute(new ClearUsedCommand(usedObservable));\r\n        };\r\n    }\r\n\r\n    public toJson(): CharacterJson {\r\n        return {\r\n            name: this.name(),\r\n            player: this.player(),\r\n            age: this.age(),\r\n            vice: this.vice(),\r\n            virtue: this.virtue(),\r\n            origins: this.origins(),\r\n            gender: this.gender(),\r\n            concept: this.concept(),\r\n            chronicle: this.chronicle(),\r\n\r\n            intelligence: this.intelligence(),\r\n            wits: this.wits(),\r\n            resolve: this.resolve(),\r\n            strength: this.strength(),\r\n            dexterity: this.dexterity(),\r\n            stamina: this.stamina(),\r\n            presence: this.presence(),\r\n            manipulation: this.manipulation(),\r\n            composure: this.composure(),\r\n\r\n            bashing: this.damage.bashing(),\r\n            lethal: this.damage.lethal(),\r\n            aggravated: this.damage.aggravated(),\r\n            usedMagic: this.usedMagic(),\r\n            usedWillpower: this.usedWillpower(),\r\n\r\n            academics: this.academics(),\r\n            robotics: this.robotics(),\r\n            crafts: this.crafts(),\r\n            investigation: this.investigation(),\r\n            medicine: this.medicine(),\r\n            occult: this.occult(),\r\n            politics: this.politics(),\r\n            science: this.science(),\r\n\r\n            athletics: this.athletics(),\r\n            brawl: this.brawl(),\r\n            drive: this.drive(),\r\n            ranged: this.ranged(),\r\n            larceny: this.larceny(),\r\n            stealth: this.stealth(),\r\n            survival: this.survival(),\r\n            weaponry: this.weaponry(),\r\n\r\n            animalKen: this.animalKen(),\r\n            empathy: this.empathy(),\r\n            expression: this.expression(),\r\n            intimidation: this.intimidation(),\r\n            persuasion: this.persuasion(),\r\n            socialize: this.socialize(),\r\n            streetwise: this.streetwise(),\r\n            subterfuge: this.subterfuge(),\r\n\r\n            merits: this.merits().map(m => { return { name: m.name(), value: m.value() }; }),\r\n            spells: this.spells().map(s => { return { name: s.name(), value: s.value() }; }),\r\n            flaws: this.flaws().map(f => { return { name: f.name(), value: f.value() }; }),\r\n\r\n            size: this.size(),\r\n            armor: this.armor(),\r\n            experience: this.experience(),\r\n            morality: this.morality(),\r\n\r\n            weapons: this.weapons().map(w => { return { name: w.name(), description: w.description() }; }),\r\n            equipment: this.equipment().map(e => { return { name: e.name(), description: e.description() }; }),\r\n            inventory: this.inventory().map(i => { return { name: i.name(), description: i.description(), quantity: i.quantity() }; }),\r\n\r\n            notes: this.notes().map(n => n.value())\r\n        };\r\n    }\r\n}\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\nfunction randomName() {\r\n    const firstNameLength = randomInteger(5, 12);\r\n    const lastNameLength = randomInteger(5, 12);\r\n    let firstName = \"\";\r\n    let lastName = \"\";\r\n\r\n    for (let i = 0; i < firstNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        firstName += newLetter;\r\n    }\r\n\r\n    for (let i = 0; i < lastNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        lastName += newLetter;\r\n    }\r\n\r\n    return `${firstName} ${lastName}`;\r\n}\r\n\r\ntype CharacterJson = {\r\n    name: string,\r\n    player: string,\r\n    age: number,\r\n    vice: string,\r\n    virtue: string,\r\n    origins: string,\r\n    gender: string,\r\n    concept: string,\r\n    chronicle: string,\r\n\r\n    intelligence: number,\r\n    strength: number,\r\n    presence: number,\r\n    wits: number,\r\n    dexterity: number,\r\n    manipulation: number,\r\n    resolve: number,\r\n    stamina: number,\r\n    composure: number,\r\n\r\n    academics: number,\r\n    robotics: number,\r\n    crafts: number,\r\n    investigation: number,\r\n    medicine: number,\r\n    occult: number,\r\n    politics: number,\r\n    science: number,\r\n\r\n    athletics: number,\r\n    brawl: number,\r\n    drive: number,\r\n    ranged: number,\r\n    larceny: number,\r\n    stealth: number,\r\n    survival: number,\r\n    weaponry: number,\r\n\r\n    animalKen: number,\r\n    empathy: number,\r\n    expression: number,\r\n    intimidation: number,\r\n    persuasion: number,\r\n    socialize: number,\r\n    streetwise: number,\r\n    subterfuge: number,\r\n\r\n    merits: Array<{ name: string, value: number }>,\r\n    spells: Array<{ name: string, value: number }>,\r\n    flaws: Array<{ name: string, value: number }>,\r\n\r\n    size: number,\r\n    armor: number,\r\n    experience: number,\r\n    morality: number,\r\n\r\n    weapons: Array<{ name: string, description: string }>,\r\n    equipment: Array<{ name: string, description: string }>,\r\n    inventory: Array<{ name: string, description: string, quantity: number }>,\r\n\r\n    notes: Array<string>,\r\n\r\n    bashing?: number,\r\n    lethal?: number,\r\n    aggravated?: number,\r\n\r\n    usedMagic?: number,\r\n    usedWillpower?: number\r\n};","import CommandStack from \"../Command/CommandStack\";\r\nimport AttributeCommand from \"../Command/AttributeCommand\";\r\nimport BatchCommand from \"../Command/BatchCommand\";\r\n\r\nexport default class Damage {\r\n    public totalHealth: KnockoutComputed<number>;\r\n    public bashing: KnockoutObservable<number>;\r\n    public lethal: KnockoutObservable<number>;\r\n    public aggravated: KnockoutObservable<number>;\r\n\r\n    public constructor(totalHealthObservable: KnockoutComputed<number>, bashing?: number, lethal?: number, aggravated?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.totalHealth = totalHealthObservable;\r\n        this.bashing = ko.observable(bashing || 0);\r\n        this.lethal = ko.observable(lethal || 0);\r\n        this.aggravated = ko.observable(aggravated || 0);\r\n\r\n        if (locked) {\r\n            this.bashing = this.bashing.extend({ lockable: locked });\r\n            this.lethal = this.lethal.extend({ lockable: locked });\r\n            this.aggravated = this.aggravated.extend({ lockable: locked });\r\n        }\r\n\r\n        totalHealthObservable.subscribe(val => {\r\n            let bashing = this.bashing();\r\n            let lethal = this.lethal();\r\n            let aggravated = this.aggravated();\r\n            while (bashing + lethal + aggravated > val) {\r\n                if (bashing > 0) {\r\n                    bashing--;\r\n                }\r\n                else if (lethal > 0) {\r\n                    lethal--;\r\n                }\r\n                else {\r\n                    aggravated--;\r\n                }\r\n            }\r\n            CommandStack.instance.executeWithPrevious(new BatchCommand(\r\n                new AttributeCommand(this.bashing, bashing, this.bashing()),\r\n                new AttributeCommand(this.lethal, lethal, this.lethal()),\r\n                new AttributeCommand(this.aggravated, aggravated, this.aggravated())\r\n            ));\r\n        }, this);\r\n    }\r\n\r\n    public anyEmpty(): boolean {\r\n        return this.bashing() + this.lethal() + this.aggravated() < this.totalHealth();\r\n    }\r\n\r\n    public addBashing(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.bashing, this.bashing() + 1, this.bashing()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addLethal(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addAggravated(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public clearAll(): void {\r\n        CommandStack.instance.execute(new BatchCommand(\r\n            new AttributeCommand(this.bashing, 0, this.bashing()),\r\n            new AttributeCommand(this.lethal, 0, this.lethal()),\r\n            new AttributeCommand(this.aggravated, 0, this.aggravated())\r\n        ));\r\n    }\r\n}","export default class Equipment {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n\r\n    public constructor(name?: string, description?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Equipment(null, null, locked);\r\n    }\r\n}","export default class InventoryItem {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n    public quantity: KnockoutObservable<number>;\r\n    public displayText: KnockoutComputed<string>;\r\n\r\n    public constructor(name?: string, description?: string, quantity?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n        this.quantity = ko.observable(quantity || 1);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n            this.quantity = this.quantity.extend({ lockable: locked });\r\n        }\r\n\r\n        this.displayText = ko.computed(this.getDisplayText, this);\r\n    }\r\n\r\n    public getDisplayText() : string {\r\n        return `${this.quantity()} ${this.name()}`;\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new InventoryItem(null, null, null, locked);\r\n    }\r\n}","export default class Merit {\r\n    public name: KnockoutObservable<string>;\r\n    public value: KnockoutObservable<number>;\r\n\r\n    public constructor(name?: string, value?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.value = ko.observable(value || 0);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Merit(null, null, locked);\r\n    }\r\n}","export default class Note {\r\n    public value: KnockoutObservable<string>;\r\n\r\n    public constructor(value?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.value = ko.observable(value || \"\");\r\n\r\n        if (locked) {\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Note(null, locked);\r\n    }\r\n}","import Character from \"../Character\";\r\nimport LocalStorageCharacterRepository from \"./LocalStorageCharacterRepository\";\r\n\r\nexport default interface ICharacterRepository {\r\n    loadCharacters(): Character[];\r\n    saveCharacters(characters: Character[]): boolean;\r\n}\r\n\r\nexport function getCharacterRepository(type: string, ...args: any[]): ICharacterRepository {\r\n    switch (type) {\r\n        case \"LocalStorage\": return new LocalStorageCharacterRepository();\r\n    }\r\n}","import ICharacterRepository from \"./ICharacterRepository\";\r\nimport Character from \"../Character\";\r\n\r\nconst storageKey = \"characters\";\r\nexport default class LocalStorageCharacterRepository implements ICharacterRepository {\r\n    public loadCharacters(): Character[] {\r\n        return (JSON.parse(window.localStorage.getItem(storageKey)) || []).map(Character.fromJson);\r\n    }\r\n\r\n    public saveCharacters(characters: Character[]): boolean {\r\n        window.localStorage.setItem(\"characters\", JSON.stringify(characters.map(c => c.toJson())));\r\n        return true;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class AttributeCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _newValue: number;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>, newValue: number, oldValue: number) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public getType(): string { return \"AttributeCommand\"; }\r\n    public toString(): string {\r\n        return `${this._observable.getName()}: ${this._oldValue} => ${this._newValue}`;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class BatchCommand implements ICommand {\r\n    private _commands: ICommand[];\r\n\r\n    public constructor(...commands: ICommand[]) {\r\n        this._commands = commands.filter(command => !command.doesNothing());\r\n    }\r\n\r\n    public get commandCount(): number { return this._commands.length; }\r\n\r\n    public getType(): string { return \"BatchCommand\"; }\r\n\r\n    public getCommand(index: number): ICommand | null {\r\n        if (index < 0 || index >= this._commands.length) return null;\r\n\r\n        return this._commands[index];\r\n    }\r\n\r\n    public execute(): void {\r\n        for (let i = 0; i < this._commands.length; i++) this._commands[i].execute();\r\n    }\r\n\r\n    public undo(): void {\r\n        for (let i = this._commands.length - 1; i >= 0; i--) this._commands[i].undo();\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._commands.every(command => command.doesNothing());\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class ClearUsedCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>) {\r\n        this._observable = observable;\r\n        this._oldValue = observable();\r\n    }\r\n\r\n    public getType(): string { return \"ClearUsedCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable(0);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._oldValue === 0;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionAddCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _newItem: T;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, newItem: T) {\r\n        this._observable = observable;\r\n        this._newItem = newItem;\r\n    }\r\n\r\n    public getType(): string { return \"CollectionAddCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable.push(this._newItem);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.remove(this._newItem);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionMoveCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _item: T;\r\n    private _newIndex: number;\r\n    private _oldIndex: number;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, item: T, newIndex: number, oldIndex: number) {\r\n        this._observable = observable;\r\n        this._item = item;\r\n        this._newIndex = newIndex;\r\n        this._oldIndex = oldIndex;\r\n    }\r\n\r\n    public getType(): string { return \"CollectionMoveCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable.splice(this._oldIndex, 1);\r\n        this._observable.splice(this._newIndex, 0, this._item);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.splice(this._newIndex, 1);\r\n        this._observable.splice(this._oldIndex, 0, this._item);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newIndex === this._oldIndex;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionRemoveCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _item: T;\r\n    private _itemIndex: number;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, item: T) {\r\n        this._observable = observable;\r\n        this._item = item;\r\n        this._itemIndex = this._observable.indexOf(this._item);\r\n    }\r\n\r\n    public getType(): string { return \"CollectionRemoveCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable.remove(this._item);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.splice(this._itemIndex, 0, this._item);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\nimport BatchCommand from \"./BatchCommand\";\r\n\r\nexport default class CommandStack {\r\n    private static _instance: CommandStack;\r\n    \r\n    private _undoStack: KnockoutObservableArray<ICommand>;\r\n    private _redoStack: KnockoutObservableArray<ICommand>;\r\n    private _currentlyExecuting: boolean;\r\n\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n\r\n    private constructor() {\r\n        this._undoStack = ko.observableArray([]);\r\n        this._redoStack = ko.observableArray([]);\r\n        this._currentlyExecuting = false;\r\n\r\n        this.canUndo = ko.computed(() => this.undoLength > 0, this);\r\n        this.canRedo = ko.computed(() => this.redoLength > 0, this);\r\n    }\r\n\r\n    public static get instance(): CommandStack {\r\n        if (!CommandStack._instance) CommandStack._instance = new CommandStack();\r\n\r\n        return CommandStack._instance;\r\n    }\r\n\r\n    public get undoLength(): number { return this._undoStack().length; }\r\n    public get redoLength(): number { return this._redoStack().length; }\r\n\r\n    public getPreviousCommand(drillIntoBatch: boolean = false): ICommand {\r\n        let previousCommand = this._undoStack()[this.undoLength - 1];\r\n\r\n        if (!drillIntoBatch) return previousCommand;\r\n\r\n        while (previousCommand instanceof BatchCommand) {\r\n            previousCommand = previousCommand.getCommand(previousCommand.commandCount - 1);\r\n        }\r\n\r\n        return previousCommand;\r\n    }\r\n\r\n    // TODO: Maybe don't have this as singleton...\r\n    // Could have an instance for each character\r\n    // to preserve the stack across character selection\r\n    public reset(): void {\r\n        this._undoStack.removeAll();\r\n        this._redoStack.removeAll();\r\n    }\r\n\r\n    public execute(command: ICommand): void {\r\n        if (command.doesNothing()) return;\r\n\r\n        if (this._currentlyExecuting) {\r\n            window.setTimeout(() => this.execute(command), 1);\r\n            return;\r\n        }\r\n\r\n        this._currentlyExecuting = true;\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n        this._redoStack.removeAll();\r\n        this._currentlyExecuting = false;\r\n    }\r\n\r\n    public executeWithPrevious(command: ICommand): void {\r\n        if (command.doesNothing()) return;\r\n\r\n        if (this._currentlyExecuting) {\r\n            window.setTimeout(() => this.executeWithPrevious(command), 1);\r\n            return;\r\n        }\r\n\r\n        this._currentlyExecuting = true;\r\n        command.execute();\r\n        let previousCommand = this._undoStack.pop();\r\n        this._undoStack.push(new BatchCommand(previousCommand, command));\r\n        this._redoStack.removeAll();\r\n        this._currentlyExecuting = false;\r\n    }\r\n\r\n    public undo(): void {\r\n        if (this._undoStack().length === 0) return;\r\n        \r\n        const command = this._undoStack.pop();\r\n\r\n        command.undo();\r\n        this._redoStack.push(command);\r\n    }\r\n\r\n    public redo(): void {\r\n        if (this._redoStack().length === 0) return;\r\n\r\n        const command = this._redoStack.pop();\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n    }\r\n\r\n    public log(): void {\r\n        console.log(\"UNDO STACK:\");\r\n        console.log(this._undoStack());\r\n        console.log(\"REDO STACK:\");\r\n        console.log(this._redoStack());\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class TextInputCommand implements ICommand {\r\n    private _observable: KnockoutObservable<string>;\r\n    private _newValue: string;\r\n    private _oldValue: string;\r\n\r\n    public constructor(observable: KnockoutObservable<string>, newValue: string, oldValue: string) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public getType(): string { return \"TextInputCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void  {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import { randomFloat, randomInteger } from \"./utils\";\r\n\r\nexport default class Dice {\r\n    public dicePool: KnockoutObservable<number>;\r\n    public rollRounds: KnockoutObservableArray<Array<number>>;\r\n    public rollingInProgress: KnockoutObservable<boolean>;\r\n    public totalDiceSuccesses: KnockoutComputed<number>;\r\n    public totalDiceSuccessesDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        this.dicePool = ko.observable(1);\r\n        this.rollRounds = ko.observableArray([]);\r\n        this.rollingInProgress = ko.observable(false);\r\n        this.totalDiceSuccesses = ko.computed(() => {\r\n            if (this.rollingInProgress() || this.rollRounds().length === 0) return -1;\r\n\r\n            return this.rollRounds().reduce((total: number, r: Array<number>) => {\r\n                return total + r.reduce((total: number, d: number) => total + (d > 7 ? 1 : 0), 0);\r\n            }, 0);\r\n        }, this);\r\n        this.totalDiceSuccessesDisplay = ko.computed(() => {\r\n            return this.totalDiceSuccesses() >= 0 ? \"\" + this.totalDiceSuccesses() : \"???\";\r\n        }, this);\r\n    }\r\n\r\n    public incrementDicePool(amount: number): () => void {\r\n        return () => {\r\n            let newAmount = this.dicePool() + amount;\r\n            if (newAmount < 1) newAmount = 1;\r\n            this.dicePool(newAmount);\r\n        };\r\n    }\r\n\r\n    public rollDice(): void {\r\n        const roller = new RollState(this);\r\n        roller.beginRoll();\r\n    }\r\n}\r\n\r\nclass RollState {\r\n    private _diceObj: Dice;\r\n    private _currentRound: number;\r\n    private _currentDice: number;\r\n    private _currentRoundRolls: number;\r\n    private _currentRoundResults: Array<number>;\r\n    private _nextRoundRolls: number;\r\n    private _intervalHandle: number;\r\n\r\n    public constructor(diceObj: Dice) {\r\n        this._diceObj = diceObj;\r\n        this._currentRound = 0;\r\n        this._currentDice = 0;\r\n        this._currentRoundRolls = diceObj.dicePool();\r\n        this._currentRoundResults = [];\r\n        this._nextRoundRolls = 0;\r\n        this._intervalHandle = null;\r\n    }\r\n\r\n    public beginRoll(): void {\r\n        this._diceObj.rollingInProgress(true);\r\n        this._diceObj.rollRounds.removeAll();\r\n        for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n        this._diceObj.rollRounds.push(this._currentRoundResults);\r\n\r\n        this._intervalHandle = window.setInterval(() => {\r\n            const nextRoll = randomInteger(1, 11);\r\n            if (nextRoll === 10) {\r\n                this._nextRoundRolls++;\r\n                const diceContainer = document.getElementsByClassName(\"diceContainer\")[0];\r\n                const critMessage = document.createElement(\"div\");\r\n                critMessage.classList.add(\"crit-message\");\r\n                critMessage.innerText = \"Crit!\";\r\n                critMessage.id = \"critMessage\";\r\n                diceContainer.appendChild(critMessage);\r\n                window.setTimeout(() => diceContainer.removeChild(critMessage), 1010);\r\n            }\r\n            this._currentRoundResults[this._currentDice] = nextRoll;\r\n            this._diceObj.rollRounds.replace(this._diceObj.rollRounds()[this._currentRound], this._currentRoundResults);\r\n            this._currentDice++;\r\n\r\n            if (this._currentDice === this._currentRoundRolls) {\r\n                if (this._nextRoundRolls === 0) {\r\n                    window.clearInterval(this._intervalHandle);\r\n                    this._diceObj.rollingInProgress(false);\r\n                    const critMessage = document.getElementById(\"critMessage\");\r\n                    if (critMessage) {\r\n                        critMessage.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                else {\r\n                    this._currentRound++;\r\n                    this._currentRoundRolls = this._nextRoundRolls;\r\n                    this._nextRoundRolls = 0;\r\n                    this._currentDice = 0;\r\n                    this._currentRoundResults = [];\r\n                    for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n                    this._diceObj.rollRounds.push(this._currentRoundResults);\r\n                }\r\n            }\r\n        }, 100);\r\n    }\r\n}","const _keyboardCommands = new Map<string, () => void>();\r\nexport function registerKeyboardCommand(key: string, callback: () => void): void {\r\n    _keyboardCommands.set(key, callback);\r\n}\r\n\r\nwindow.addEventListener(\"keydown\", e => {\r\n    if (e.ctrlKey !== true) return;\r\n\r\n    for (let [key, callback] of _keyboardCommands.entries()) {\r\n        if (e.key === key) {\r\n            e.preventDefault();\r\n            callback();\r\n            return;\r\n        }\r\n    }\r\n});","import Application from \"./Application\";\r\nimport Equipment from \"./Character/Equipment\";\r\nimport InventoryItem from \"./Character/InventoryItem\";\r\nimport Merit from \"./Character/Merit\";\r\nimport Note from \"./Character/Note\";\r\nimport { applyCustomKnockoutCode } from \"./utils\";\r\n\r\napplyCustomKnockoutCode();\r\n\r\nconst constructors = {\r\n    Equipment: Equipment,\r\n    InventoryItem: InventoryItem,\r\n    Merit: Merit,\r\n    Note: Note\r\n};\r\nObject.defineProperty(window, \"constructors\", { value: constructors });\r\n\r\nconst app = new Application();\r\nko.applyBindings(app);\r\n\r\n// Exposing the view model to the global state in case manual changes need to be applied\r\nObject.defineProperty(window, \"app\", { value: app });\r\n\r\nfunction toggleTooltips(enable: boolean): void {\r\n    if (enable) $(\"[data-toggle='tooltip']\").tooltip();\r\n    else $(\"[data-toggle='tooltip']\").tooltip(\"dispose\");\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    toggleTooltips(window.outerWidth >= 992);\r\n});\r\ntoggleTooltips(window.outerWidth >= 992);","import Damage from \"./Character/Damage\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\nimport AttributeCommand from \"./Command/AttributeCommand\";\r\nimport TextInputCommand from \"./Command/TextInputCommand\";\r\n\r\nexport function randomInteger(minInclusive = 0, maxExclusive = 10): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function randomFloat(minInclusive = 0, maxExclusive = 1): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.random() * (maxExclusive - minInclusive) + minInclusive;\r\n}\r\n\r\nconst _observableNameMap = new Map<KnockoutObservable<any>, string>();\r\nexport function applyCustomKnockoutCode() {\r\n    applyKnockoutBindings();\r\n    applyKnockoutExtenders();\r\n    applyKnockoutCustomFunctions();\r\n}\r\n\r\nfunction applyKnockoutBindings() {\r\n    ko.bindingHandlers.dice = {\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservableArray<Array<number>>) => {\r\n            const rollRounds = valueAccessor()();\r\n            if (rollRounds.length === 0) {\r\n                element.innerHTML = \"\";\r\n                return;\r\n            }\r\n    \r\n            let divs = element.getElementsByClassName(\"dice-round\");\r\n            if (divs.length !== rollRounds.length) {\r\n                const newRound = document.createElement(\"div\");\r\n                newRound.classList.add(\"dice-round\");\r\n                const rolls = rollRounds[rollRounds.length - 1];\r\n                for (let i = 0; i < rolls.length; i++) {\r\n                    const span = document.createElement(\"span\");\r\n                    const delay = randomFloat(0, 0.5);\r\n                    span.style.animation = `rollingDice 0.5s linear -${delay}s infinite alternate`;\r\n                    span.classList.add(\"dice\");\r\n                    newRound.appendChild(span);\r\n                }\r\n                element.appendChild(newRound);\r\n                divs = element.getElementsByClassName(\"dice-round\");\r\n            }\r\n    \r\n            for (let i = 0; i < rollRounds.length; i++) {\r\n                const rolls = rollRounds[i];\r\n                const spans = divs[i].getElementsByClassName(\"dice\");\r\n                for (let j = 0; j < rolls.length; j++) {\r\n                    const roll = rolls[j];\r\n                    const span = <HTMLSpanElement>spans[j];\r\n    \r\n                    if (roll !== -1) {\r\n                        span.style.animation = null;\r\n                        span.style.backgroundImage = `url('images/dice-${roll}.png')`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.damageDisplay = {\r\n        init: (element: HTMLElement) => {\r\n            for (let i = 0; i < 15; i++) {\r\n                const span = document.createElement(\"span\");\r\n                span.classList.add(\"damage\");\r\n                span.classList.add(\"none\");\r\n                element.appendChild(span);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => Damage) => {\r\n            const damageObj = valueAccessor();\r\n            const spans = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < spans.length; i++) {\r\n                if (i < damageObj.aggravated()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.add(\"aggravated\");\r\n                }\r\n                else if (i - damageObj.aggravated() < damageObj.lethal()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"lethal\");\r\n                }\r\n                else if (i - damageObj.aggravated() - damageObj.lethal() < damageObj.bashing()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"bashing\");\r\n                }\r\n                else {\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"none\");\r\n                }\r\n    \r\n                if (i < damageObj.totalHealth()) {\r\n                    spans[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else {\r\n                    spans[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.attribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, canClear?: boolean }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                dot.classList.add(\"pointer\");\r\n                dot.dataset.toggle = \"tooltip\";\r\n                dot.title = \"\" + (i + 1);\r\n                $(dot).tooltip();\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n    \r\n            const canClear = valueAccessor().canClear;\r\n            if (canClear === true || typeof canClear === \"undefined\") {\r\n                const clearDot = document.createElement(\"div\");\r\n                clearDot.classList.add(\"clear-dot\");\r\n                clearDot.innerHTML = \"&times;\";\r\n                clearDot.dataset.toggle = \"tooltip\";\r\n                clearDot.title = \"Clear\";\r\n                clearDot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, 0, valueAccessor().value()));\r\n                });\r\n                element.appendChild(clearDot);\r\n                $(clearDot).tooltip();\r\n            }\r\n    \r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                element.appendChild(dot);\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByClassName(\"attribute-dot\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                const dot = <HTMLSpanElement>dots[i];\r\n                dot.style.backgroundColor = null;\r\n                dot.style.borderColor = null;\r\n                if (i < value) {\r\n                    dot.style.backgroundColor = \"var(--body-color)\";\r\n                    dot.style.borderColor = \"var(--body-color)\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.readOnlyAttribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, hideUnfilled?: boolean }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                dots[i].classList.remove(\"filled\");\r\n                if (i < value) {\r\n                    dots[i].classList.add(\"filled\");\r\n                    dots[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else if (valueAccessor().hideUnfilled) {\r\n                    dots[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.used = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < 12; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const used = valueAccessor().value();\r\n            const total = valueAccessor().total();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                if (i < used) dots[i].classList.add(\"filled-red\");\r\n                else dots[i].classList.remove(\"filled-red\");\r\n    \r\n                if (i < total) dots[i].classList.remove(\"HIDDEN\");\r\n                else dots[i].classList.add(\"HIDDEN\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.focusOnCreation = {\r\n        init: (element: HTMLInputElement | HTMLTextAreaElement) => {\r\n            window.setTimeout(() => {\r\n                if (element.value) return;\r\n                element.focus();\r\n            }, 1);\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.contextMenu = {\r\n        init: (element: HTMLElement, valueAccessor: () => () => void) => {\r\n            element.addEventListener(\"contextmenu\", e => {\r\n                e.preventDefault();\r\n                valueAccessor()();\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.undoableTextInput = {\r\n        init: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            const inputElement = <HTMLInputElement>element;\r\n            inputElement.addEventListener(\"change\", () => {\r\n                const oldValue = valueAccessor()();\r\n                const newValue = inputElement.value;\r\n                if (oldValue === newValue) return;\r\n\r\n                valueAccessor()(newValue);\r\n                if (valueAccessor()() === oldValue) return;\r\n                valueAccessor()(oldValue);\r\n\r\n                CommandStack.instance.execute(new TextInputCommand(valueAccessor(), newValue, oldValue));\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            (<HTMLInputElement>element).value = valueAccessor()();\r\n        }\r\n    };\r\n}\r\nfunction applyKnockoutExtenders() {\r\n    ko.extenders.named = <T>(target: KnockoutObservable<T>, name: string) => {\r\n        // TODO: This requires that the `named` extension be the last one listed.\r\n        // It's messy and also inefficient because there will be multiple instances\r\n        // of the same observable property on a character equal to the number of\r\n        // characters the user has. I will need to come up with a different way,\r\n        // but for now this works as a proof of concept.\r\n        _observableNameMap.set(target, name);\r\n        return target;\r\n    };\r\n\r\n    ko.extenders.lockable = <T>(target: KnockoutObservable<T>, locked: KnockoutObservable<boolean>) => {\r\n        const result = ko.pureComputed({\r\n            read: target,\r\n            write: (newValue: T) => {\r\n                if (locked()) {\r\n                    target.notifySubscribers(target());\r\n                }\r\n                else {\r\n                    target(newValue);\r\n                    target.notifySubscribers(newValue);\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        return result;\r\n    };\r\n    \r\n    ko.extenders.numeric = (target: KnockoutObservable<number>, args: { precision?: number, min?: number, max?: number }) => {\r\n        const precision = args.precision || 0;\r\n        const min = args.min || -Infinity;\r\n        const max = args.max || Infinity;\r\n    \r\n        // Create a writeable computed observable to intercept writes to our observable\r\n        const result = ko.pureComputed({\r\n            read: target, // Always return the original observable's value\r\n            write: (newValue: number) => {\r\n                const current = target();\r\n                const roundingMultiplier = Math.pow(10, precision);\r\n                const newValueAsNum = isNaN(newValue) ? 0 : +newValue;\r\n                let valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\r\n                if (valueToWrite < min) valueToWrite = min;\r\n                else if (valueToWrite > max) valueToWrite = max;\r\n    \r\n                // Only write if it changed\r\n                if (valueToWrite !== current) {\r\n                    target(valueToWrite);\r\n                }\r\n                else {\r\n                    // If the rounded value is the same, but a different value was written,\r\n                    // force a notification for the current field\r\n                    if (newValue !== current) {\r\n                        target.notifySubscribers(valueToWrite);\r\n                    }\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        // Initialize with current value to make sure it is rounded appropriately\r\n        result(target());\r\n    \r\n        // Return the new computed observable\r\n        return result;\r\n    };\r\n}\r\nfunction applyKnockoutCustomFunctions() {\r\n    ko.subscribable.fn.getName = function () {\r\n        return _observableNameMap.get(this);\r\n    };\r\n}"]}