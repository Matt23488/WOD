{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/client/Application.ts","src/client/Character/Character.ts","src/client/Character/Damage.ts","src/client/Character/Equipment.ts","src/client/Character/InventoryItem.ts","src/client/Character/Merit.ts","src/client/Character/Note.ts","src/client/Character/Repository/CookieCharacterRepository.ts","src/client/Character/Repository/DummyCharacterRepository.ts","src/client/Character/Repository/ICharacterRepository.ts","src/client/Character/Repository/LocalStorageCharacterRepository.ts","src/client/Command/AttributeCommand.ts","src/client/Command/BatchCommand.ts","src/client/Command/ClearUsedCommand.ts","src/client/Command/CollectionAddCommand.ts","src/client/Command/CollectionMoveCommand.ts","src/client/Command/CollectionRemoveCommand.ts","src/client/Command/CommandStack.ts","src/client/Command/TextInputCommand.ts","src/client/Connection.ts","src/client/Dice.ts","src/client/Keyboard.ts","src/client/main.ts","src/client/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Character_1","Dice_1","CommandStack_1","ICharacterRepository_1","Keyboard_1","Application","prototype","toggleClock","this","showClock","goBack","mode","_previousSection","window","location","hash","newCharacter","newChar","default","locked","characters","push","selectCharacter","character","charIndex","indexOf","characterId","instance","reset","deleteCharacter","_this","swal","title","name","text","icon","buttons","dangerMode","then","willDelete","id","remove","saveCharacters","_characterRepo","realCharacters","timer","downloadCharacter","json","JSON","stringify","toJson","dl","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","uploadCharacter","ul","type","accept","addEventListener","file","files","reader","FileReader","onload","target","result","fromJson","parse","readAsText","toggleCharacterLock","switchMode","getElementById","undo","canUndo","redo","canRedo","getCharacterRepository","savedCharacters","loadCharacters","unshift","ghost","ko","observable","observableArray","computed","filter","dice","lockButtonClass","lockButtonIcon","currentTime","Date","currentTimeDisplay","time","hours","getHours","minutes","getMinutes","seconds","getSeconds","suffix","setInterval","registerKeyboardCommand","log","connection","connect","message","prompt","sendMessage","disconnect","substring","offset","parseInt","$","css","$domElement","scrollTop","top","Damage_1","Equipment_1","InventoryItem_1","Merit_1","Note_1","utils_1","CollectionAddCommand_1","CollectionRemoveCommand_1","CollectionMoveCommand_1","ClearUsedCommand_1","AttributeCommand_1","Connection_1","Character","firstNameLength","randomInteger","lastNameLength","firstName","lastName","newLetter","alphabet","charAt","toUpperCase","randomName","player","age","vice","virtue","origins","gender","concept","chronicle","intelligence","strength","presence","wits","dexterity","manipulation","resolve","stamina","composure","academics","robotics","crafts","investigation","medicine","occult","politics","science","athletics","brawl","drive","ranged","larceny","stealth","survival","weaponry","animalKen","empathy","expression","intimidation","persuasion","socialize","streetwise","subterfuge","merits","spells","flaws","size","armor","experience","morality","weapons","equipment","inventory","notes","serverAddress","onComponentClick","_","currentTarget","getElementsByTagName","focus","newItem","constructor","execute","createLockable","removeItem","item","moveItem","direction","index","newIndex","clearUsed","usedObservable","bashing","damage","lethal","aggravated","usedMagic","usedWillpower","map","m","value","s","w","description","quantity","extend","lockable","named","numeric","precision","min","max","speed","defense","Math","initiative","health","magic","subscribe","val","executeWithPrevious","willpower","BatchCommand_1","Damage","anyEmpty","totalHealth","addBashing","alert","addLethal","addAggravated","clearAll","totalHealthObservable","Equipment","InventoryItem","getDisplayText","displayText","Merit","Note","cookie","characterCookiePrefix","characterListCookieKey","CookieCharacterRepository","_characterIds","_b","__values","_c","next","done","key","oldId","removeCookie","DummyCharacterRepository","LocalStorageCharacterRepository_1","DummyCharacterRepository_1","CookieCharacterRepository_1","args","_i","arguments","IsSupported","button","LocalStorageCharacterRepository","localStorage","getItem","setItem","Object","defineProperty","test","AttributeCommand","getType","toString","_observable","getName","_oldValue","_newValue","doesNothing","newValue","oldValue","BatchCommand","_commands","getCommand","every","command","commands","ClearUsedCommand","CollectionAddCommand","_newItem","CollectionMoveCommand","splice","_oldIndex","_newIndex","_item","oldIndex","CollectionRemoveCommand","_itemIndex","CommandStack","_instance","_undoStack","_redoStack","getPreviousCommand","drillIntoBatch","previousCommand","undoLength","commandCount","removeAll","_currentlyExecuting","setTimeout","pop","console","redoLength","TextInputCommand","Connection","connected","_connection","WebSocket","send","_character","utc42069","UTC","error","json_1","data","window_1","rooms","some","messages","SimpleMessage","messageText","_d","chatWindows","_e","_clientId","users","apply","__spread","ChatWindow","_f","_g","window_2","roomId","UserMessage","getUserScreenName","timestamp","oldUser","close","info","connectButtonClick","screenName","connectButtonText","WebsocketSetup","Setup","_setupCompleted","MozWebSocket","_id","domID","domHref","domClass","domText","Message","_super","__extends","formatTimestamp","hoursPrefix","floor","minutesPrefix","Dice","incrementDicePool","amount","newAmount","dicePool","rollDice","RollState","beginRoll","rollRounds","rollingInProgress","totalDiceSuccesses","reduce","total","d","totalDiceSuccessesDisplay","_diceObj","_currentRoundRolls","_currentRoundResults","_intervalHandle","nextRoll","_nextRoundRolls","diceContainer_1","getElementsByClassName","critMessage_1","classList","add","innerText","_currentDice","replace","_currentRound","clearInterval","critMessage","diceObj","_keyboardCommands","Map","callback","set","ctrlKey","entries","__read","preventDefault","Application_1","applyCustomKnockoutCode","constructors","app","toggleTooltips","enable","tooltip","applyBindings","outerWidth","TextInputCommand_1","randomFloat","minInclusive","maxExclusive","_a","random","_observableNameMap","bindingHandlers","update","element","valueAccessor","divs","newRound","rolls","span","delay","animation","spans","j","roll","backgroundImage","innerHTML","damageDisplay","init","damageObj","attribute","dots","dot","dataset","toggle","forEach","canClear","clearDot","backgroundColor","borderColor","readOnlyAttribute","hideUnfilled","used","focusOnCreation","contextMenu","undoableTextInput","inputElement","extenders","pureComputed","read","write","notifySubscribers","notify","Infinity","current","roundingMultiplier","pow","newValueAsNum","isNaN","valueToWrite","round","subscribable","fn","get"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,iECAA,IAAAK,EAAAX,EAAA,yBACAY,EAAAZ,EAAA,UAEAa,EAAAb,EAAA,0BACAc,EAAAd,EAAA,+CACAe,EAAAf,EAAA,cAGAgB,GA8GWA,EAAAC,UAAAC,YAAP,WACIC,KAAKC,WAAWD,KAAKC,cAGlBJ,EAAAC,UAAAI,OAAP,WACwB,UAAhBF,KAAKG,OAAoBH,KAAKG,KAAK,SAEnCH,KAAKG,KAAK,SAENH,KAAKI,mBAAkBC,OAAOC,SAASC,KAAOP,KAAKI,oBAIxDP,EAAAC,UAAAU,aAAP,WACI,IAAMC,EAAUjB,EAAAkB,QAAUF,eAC1BC,EAAQE,QAAO,GACfX,KAAKY,WAAWC,KAAKJ,GAErBT,KAAKc,gBAAgBL,IAGlBZ,EAAAC,UAAAgB,gBAAP,SAAuBC,GACnB,IAAMC,EAAYhB,KAAKY,WAAWK,QAAQF,GACtCf,KAAKkB,gBAAkBF,IACvBhB,KAAKkB,YAAYF,GACjBtB,EAAAgB,QAAaS,SAASC,SAE1BpB,KAAKG,KAAK,UAGPN,EAAAC,UAAAuB,gBAAP,SAAuBN,GAAvB,IAAAO,EAAAtB,KACQA,KAAKe,YAAYJ,UACrBY,KAAK,CACDC,MAAO,UAAUxB,KAAKe,YAAYU,OAClCC,KAAM,2EACNC,KAAM,UACNC,QAAS,CAAC,SAAU,UACpBC,YAAY,IAEfC,KAAK,SAACC,GACH,GAAIA,EAAY,CACZ,IAAMC,EAAKV,EAAKJ,cAChBI,EAAKJ,YAAY,GACjBI,EAAKV,WAAWqB,OAAOX,EAAKV,aAAaoB,IACzCV,EAAKnB,KAAK,YAKfN,EAAAC,UAAAoC,eAAP,WACIlC,KAAKmC,eAAeD,eAAelC,KAAKoC,kBACxCb,KAAK,iCAAkC,CACnCK,QAAS,GACTS,MAAO,IACPV,KAAM,aAIP9B,EAAAC,UAAAwC,kBAAP,WACI,IAAMC,EAAOC,KAAKC,UAAUzC,KAAKe,YAAY2B,UAEvCC,EAAKC,SAASC,cAAc,KAClCF,EAAGG,aAAa,OAAQ,iCAAiCC,mBAAmBR,IAC5EI,EAAGG,aAAa,WAAe9C,KAAKe,YAAYU,OAAM,SAEtDkB,EAAGK,MAAMC,QAAU,OACnBL,SAASM,KAAKC,YAAYR,GAE1BA,EAAGS,QAEHR,SAASM,KAAKG,YAAYV,IAGvB9C,EAAAC,UAAAwD,gBAAP,WAAA,IAAAhC,EAAAtB,KACUuD,EAAKX,SAASC,cAAc,SAClCU,EAAGC,KAAO,OACVD,EAAGE,OAAS,QACZF,EAAGP,MAAMC,QAAU,OAEnBM,EAAGG,iBAAiB,SAAU,SAAApF,GAC1B,IAAMqF,EAAOJ,EAAGK,MAAM,GACtB,GAAKD,EAAL,CAEA,IAAME,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACzF,GACb,IAAMiE,EAAOjE,EAAE0F,OAAOC,OACtB3C,EAAKV,WAAWC,KAAKrB,EAAAkB,QAAUwD,SAAS1B,KAAK2B,MAAM5B,KACnDjB,EAAKJ,YAAYI,EAAKV,aAAavB,OAAS,GAC5CiC,EAAKnB,KAAK,UAEd0D,EAAOO,WAAWT,MAGtBf,SAASM,KAAKC,YAAYI,GAE1BA,EAAGH,QAEHR,SAASM,KAAKG,YAAYE,IAGvB1D,EAAAC,UAAAuE,oBAAP,WACI,IAAMtD,EAAYf,KAAKe,YACvBA,EAAUJ,QAAQI,EAAUJ,WAGzBd,EAAAC,UAAAwE,WAAP,SAAkBnE,GAAlB,IAAAmB,EAAAtB,KACI,OAAO,WACiB,SAAhBsB,EAAKnB,QAAqByC,SAAS2B,eAAepE,GAClDmB,EAAKlB,iBAAmBD,EAEvBmB,EAAKlB,iBAAmB,KAE7BC,OAAOC,SAASC,KAAO,GACvBe,EAAKnB,KAAKA,KAIXN,EAAAC,UAAA0E,KAAP,WACSxE,KAAKyE,WACV/E,EAAAgB,QAAaS,SAASqD,QAGnB3E,EAAAC,UAAA4E,KAAP,WACS1E,KAAK2E,WACVjF,EAAAgB,QAAaS,SAASuD,QAE9B7E,GAxNI,SAAAA,IAAA,IAAAyB,EAAAtB,KACIA,KAAKmC,eAAiBxC,EAAAiF,uBAAuB,gBAE7C,IAAMC,EAAkB7E,KAAKmC,eAAe2C,iBAC5CD,EAAgBE,QAAQvF,EAAAkB,QAAUF,gBAClCqE,EAAgB,GAAGG,OAAQ,EAE3BhF,KAAKG,KAAO8E,GAAGC,WAAW,QAC1BlF,KAAKkB,YAAc+D,GAAGC,WAAW,GACjClF,KAAKY,WAAaqE,GAAGE,gBAAgBN,GACrC7E,KAAKoC,eAAiB6C,GAAGG,SAAS,WAAM,OAAA9D,EAAKV,aAAayE,OAAO,SAAAzG,GAAK,OAACA,EAAEoG,SAAQhF,MACjFA,KAAKe,UAAYkE,GAAGG,SAAS,WAAM,OAAA9D,EAAKV,aAAaU,EAAKJ,gBAAgBlB,MAC1EA,KAAKsF,KAAO,IAAI7F,EAAAiB,QAChBV,KAAKuF,gBAAkBN,GAAGG,SAAS,WAAM,OAAA9D,EAAKP,YAAYJ,SAAW,aAAe,uBAAuBX,MAC3GA,KAAKwF,eAAiBP,GAAGG,SAAS,WAAM,OAAA9D,EAAKP,YAAYJ,SAAW,cAAgB,oBAAoBX,MACxGA,KAAKI,iBAAmB,KACxBJ,KAAKC,UAAYgF,GAAGC,YAAW,GAC/BlF,KAAKyF,YAAcR,GAAGC,WAAW,IAAIQ,MAErC1F,KAAK2F,mBAAqBV,GAAGG,SAAS,WAClC,IAAMQ,EAAOtE,EAAKmE,cACdI,EAAQD,EAAKE,WACXC,EAAUH,EAAKI,aACfC,EAAUL,EAAKM,aACfC,EAASN,EAAQ,GAAK,KAAO,KAKnC,OAFY,GAARA,EAAYA,GAAS,GACN,IAAVA,IAAaA,EAAQ,IACpBA,EAAK,KAJME,EAAU,GAAK,IAAM,IAIRA,EAAO,KAHpBE,EAAU,GAAK,IAAM,IAGkBA,EAAO,IAAIE,GACxEnG,MAEHA,KAAKyE,QAAUQ,GAAGG,SAAS,WAAM,OAAA1F,EAAAgB,QAAaS,SAASsD,YAAcnD,EAAKP,YAAYJ,UAAUX,MAChGA,KAAK2E,QAAUM,GAAGG,SAAS,WAAM,OAAA1F,EAAAgB,QAAaS,SAASwD,YAAcrD,EAAKP,YAAYJ,UAAUX,MAEhGK,OAAO+F,YAAY,WACf9E,EAAKmE,YAAY,IAAIC,OACtB,KAEH9F,EAAAyG,wBAAwB,IAAK,WAAM,OAAA/E,EAAKY,mBACxCtC,EAAAyG,wBAAwB,IAAK,WACL,SAAhB/E,EAAKnB,QACTmB,EAAKkD,SAET5E,EAAAyG,wBAAwB,IAAK,WACL,SAAhB/E,EAAKnB,QACTmB,EAAKoD,SAET9E,EAAAyG,wBAAwB,IAAK,WACL,SAAhB/E,EAAKnB,QACTmB,EAAK+C,wBAETzE,EAAAyG,wBAAwB,IAAK,WAAM,OAAA/E,EAAKvB,gBACxCH,EAAAyG,wBAAwB,IAAK,WAAM,OAAA3G,EAAAgB,QAAaS,SAASmF,QAEzD1G,EAAAyG,wBAAwB,IAAK,WACzB/E,EAAKP,YAAYwF,WAAWC,YAGhC5G,EAAAyG,wBAAwB,IAAK,WACzB,IAAMI,EAAUC,OAAO,YACvBpF,EAAKP,YAAYwF,WAAWI,YAAYF,KAG5C7G,EAAAyG,wBAAwB,IAAK,WACzB/E,EAAKP,YAAYwF,WAAWK,eAGhCvG,OAAOqD,iBAAiB,aAAc,SAAApF,GAClC,IAAMiC,EAAOF,OAAOC,SAASC,KAAKsG,UAAU,GAC5C,GAAKtG,EAAL,CAEA,IAAMuG,EAASC,SAASC,EAAE,iBAAiBC,IAAI,QACzCC,EAAcF,EAAE,IAAIzG,GAC1ByG,EAAE3G,QAAQ8G,UAAUD,EAAYJ,SAASM,IAAMN,0OCtG3D,IAAAO,EAAAxI,EAAA,YACAyI,EAAAzI,EAAA,eACA0I,EAAA1I,EAAA,mBACA2I,EAAA3I,EAAA,WACA4I,EAAA5I,EAAA,UACA6I,EAAA7I,EAAA,YACAa,EAAAb,EAAA,2BACA8I,EAAA9I,EAAA,mCACA+I,EAAA/I,EAAA,sCACAgJ,EAAAhJ,EAAA,oCACAiJ,EAAAjJ,EAAA,+BACAkJ,EAAAlJ,EAAA,+BACAmJ,EAAAnJ,EAAA,iBAEAoJ,GAoKkBA,EAAAzH,aAAd,WACI,OAAO,IAAIyH,EAAU,CACjBxG,KAuLZ,WAMI,IALA,IAAMyG,EAAkBR,EAAAS,cAAc,EAAG,IACnCC,EAAiBV,EAAAS,cAAc,EAAG,IACpCE,EAAY,GACZC,EAAW,GAEN5J,EAAI,EAAGA,EAAIwJ,EAAiBxJ,IAAK,CACtC,IAAI6J,EAAYC,EAASC,OAAOf,EAAAS,cAAc,EAAGK,EAASnJ,SAChD,IAANX,IAAS6J,EAAYA,EAAUG,eAEnCL,GAAaE,EAGjB,IAAS7J,EAAI,EAAGA,EAAI0J,EAAgB1J,IAC5B6J,EAAYC,EAASC,OAAOf,EAAAS,cAAc,EAAGK,EAASnJ,SAChD,IAANX,IAAS6J,EAAYA,EAAUG,eAEnCJ,GAAYC,EAGhB,OAAUF,EAAS,IAAIC,EA3MTK,GACNC,OAAQ,GACRC,IAAK,EACLC,KAAM,GACNC,OAAQ,GACRC,QAAS,GACTC,OAAQ,GACRC,QAAS,GACTC,UAAW,GAEXC,aAAc,EACdC,SAAU,EACVC,SAAU,EACVC,KAAM,EACNC,UAAW,EACXC,aAAc,EACdC,QAAS,EACTC,QAAS,EACTC,UAAW,EAEXC,UAAW,EACXC,SAAU,EACVC,OAAQ,EACRC,cAAe,EACfC,SAAU,EACVC,OAAQ,EACRC,SAAU,EACVC,QAAS,EAETC,UAAW,EACXC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,SAAU,EAEVC,UAAW,EACXC,QAAS,EACTC,WAAY,EACZC,aAAc,EACdC,WAAY,EACZC,UAAW,EACXC,WAAY,EACZC,WAAY,EAEZC,OAAQ,GACRC,OAAQ,GACRC,MAAO,GAEPC,KAAM,EACNC,MAAO,EACPC,WAAY,EACZC,SAAU,EAEVC,QAAS,GACTC,UAAW,GACXC,UAAW,GAEXC,MAAO,GAEPC,cAAe,MAIT/D,EAAA/D,SAAd,SAAuB3B,GACnB,OAAO,IAAI0F,EAAU1F,IAGlB0F,EAAAnI,UAAAmM,iBAAP,SAAwBC,EAAQ5N,GACCA,EAAE6N,cACvBC,qBAAqB,SAAS,GAAGC,SAGtCpE,EAAAnI,UAAAwM,QAAP,SAAkBnH,EAA6CoH,GAA/D,IAAAjL,EAAAtB,KACI,OAAO,WACCsB,EAAKX,UACTjB,EAAAgB,QAAaS,SAASqL,QAAQ,IAAI7E,EAAAjH,QAAqByE,EAAiBoH,EAAYE,eAAenL,EAAKX,YAIzGsH,EAAAnI,UAAA4M,WAAP,SAAqBvH,GAArB,IAAA7D,EAAAtB,KACI,OAAO,SAAC2M,GACArL,EAAKX,UACTjB,EAAAgB,QAAaS,SAASqL,QAAQ,IAAI5E,EAAAlH,QAAwByE,EAAiBwH,MAI5E1E,EAAAnI,UAAA8M,SAAP,SAAmBzH,EAA6C0H,GAAhE,IAAAvL,EAAAtB,KACI,OAAO,SAAC2M,GACJ,IAAIrL,EAAKX,SAAT,CACA,IAAMmM,EAAQ3H,EAAgBlE,QAAQ0L,GAChCI,EAAWD,EAAQD,EAErBE,EAAW,GAAKA,GAAY5H,IAAkB9F,QAElDK,EAAAgB,QAAaS,SAASqL,QAAQ,IAAI3E,EAAAnH,QAAsByE,EAAiBwH,EAAMI,EAAUD,OAI1F7E,EAAAnI,UAAAkN,UAAP,SAAiBC,GACb,OAAO,WACHvN,EAAAgB,QAAaS,SAASqL,QAAQ,IAAI1E,EAAApH,QAAiBuM,MAIpDhF,EAAAnI,UAAA4C,OAAP,WACI,MAAO,CACHjB,KAAMzB,KAAKyB,OACXmH,OAAQ5I,KAAK4I,SACbC,IAAK7I,KAAK6I,MACVC,KAAM9I,KAAK8I,OACXC,OAAQ/I,KAAK+I,SACbC,QAAShJ,KAAKgJ,UACdC,OAAQjJ,KAAKiJ,SACbC,QAASlJ,KAAKkJ,UACdC,UAAWnJ,KAAKmJ,YAEhBC,aAAcpJ,KAAKoJ,eACnBG,KAAMvJ,KAAKuJ,OACXG,QAAS1J,KAAK0J,UACdL,SAAUrJ,KAAKqJ,WACfG,UAAWxJ,KAAKwJ,YAChBG,QAAS3J,KAAK2J,UACdL,SAAUtJ,KAAKsJ,WACfG,aAAczJ,KAAKyJ,eACnBG,UAAW5J,KAAK4J,YAEhBsD,QAASlN,KAAKmN,OAAOD,UACrBE,OAAQpN,KAAKmN,OAAOC,SACpBC,WAAYrN,KAAKmN,OAAOE,aACxBC,UAAWtN,KAAKsN,YAChBC,cAAevN,KAAKuN,gBAEpB1D,UAAW7J,KAAK6J,YAChBC,SAAU9J,KAAK8J,WACfC,OAAQ/J,KAAK+J,SACbC,cAAehK,KAAKgK,gBACpBC,SAAUjK,KAAKiK,WACfC,OAAQlK,KAAKkK,SACbC,SAAUnK,KAAKmK,WACfC,QAASpK,KAAKoK,UAEdC,UAAWrK,KAAKqK,YAChBC,MAAOtK,KAAKsK,QACZC,MAAOvK,KAAKuK,QACZC,OAAQxK,KAAKwK,SACbC,QAASzK,KAAKyK,UACdC,QAAS1K,KAAK0K,UACdC,SAAU3K,KAAK2K,WACfC,SAAU5K,KAAK4K,WAEfC,UAAW7K,KAAK6K,YAChBC,QAAS9K,KAAK8K,UACdC,WAAY/K,KAAK+K,aACjBC,aAAchL,KAAKgL,eACnBC,WAAYjL,KAAKiL,aACjBC,UAAWlL,KAAKkL,YAChBC,WAAYnL,KAAKmL,aACjBC,WAAYpL,KAAKoL,aAEjBC,OAAQrL,KAAKqL,SAASmC,IAAI,SAAAC,GAAO,MAAO,CAAEhM,KAAMgM,EAAEhM,OAAQiM,MAAOD,EAAEC,WACnEpC,OAAQtL,KAAKsL,SAASkC,IAAI,SAAAG,GAAO,MAAO,CAAElM,KAAMkM,EAAElM,OAAQiM,MAAOC,EAAED,WACnEnC,MAAOvL,KAAKuL,QAAQiC,IAAI,SAAA7O,GAAO,MAAO,CAAE8C,KAAM9C,EAAE8C,OAAQiM,MAAO/O,EAAE+O,WAEjElC,KAAMxL,KAAKwL,OACXC,MAAOzL,KAAKyL,QACZC,WAAY1L,KAAK0L,aACjBC,SAAU3L,KAAK2L,WAEfC,QAAS5L,KAAK4L,UAAU4B,IAAI,SAAAI,GAAO,MAAO,CAAEnM,KAAMmM,EAAEnM,OAAQoM,YAAaD,EAAEC,iBAC3EhC,UAAW7L,KAAK6L,YAAY2B,IAAI,SAAAlP,GAAO,MAAO,CAAEmD,KAAMnD,EAAEmD,OAAQoM,YAAavP,EAAEuP,iBAC/E/B,UAAW9L,KAAK8L,YAAY0B,IAAI,SAAA9O,GAAO,MAAO,CAAE+C,KAAM/C,EAAE+C,OAAQoM,YAAanP,EAAEmP,cAAeC,SAAUpP,EAAEoP,cAE1G/B,MAAO/L,KAAK+L,QAAQyB,IAAI,SAAAjP,GAAK,OAAAA,EAAEmP,UAE/B1B,cAAehM,KAAKuG,WAAWyF,kBAG3C/D,GA1QI,SAAAA,EAAmB1F,GAAnB,IAAAjB,EAAAtB,KA/EOA,KAAAgF,OAAiB,EACjBhF,KAAAW,OAAsCsE,GAAGC,YAAW,GA+EvDlF,KAAKyB,KAAOwD,GAAGC,WAAW3C,EAAKd,MAAMsM,OAAO,CAAEC,SAAUhO,KAAKW,OAAQsN,MAAO,SAC5EjO,KAAK4I,OAAS3D,GAAGC,WAAW3C,EAAKqG,QAAQmF,OAAO,CAAEC,SAAUhO,KAAKW,SACjEX,KAAK6I,IAAM5D,GAAGC,WAAW3C,EAAKsG,KAAKkF,OAAO,CAAEG,QAAS,CAAEC,UAAW,GAAKH,SAAUhO,KAAKW,SACtFX,KAAK8I,KAAO7D,GAAGC,WAAW3C,EAAKuG,MAAMiF,OAAO,CAAEC,SAAUhO,KAAKW,SAC7DX,KAAK+I,OAAS9D,GAAGC,WAAW3C,EAAKwG,QAAQgF,OAAO,CAAEC,SAAUhO,KAAKW,SACjEX,KAAKgJ,QAAU/D,GAAGC,WAAW3C,EAAKyG,SAAS+E,OAAO,CAAEC,SAAUhO,KAAKW,SACnEX,KAAKiJ,OAAShE,GAAGC,WAAW3C,EAAK0G,QAAQ8E,OAAO,CAAEC,SAAUhO,KAAKW,SACjEX,KAAKkJ,QAAUjE,GAAGC,WAAW3C,EAAK2G,SAAS6E,OAAO,CAAEC,SAAUhO,KAAKW,SACnEX,KAAKmJ,UAAYlE,GAAGC,WAAW3C,EAAK4G,WAAW4E,OAAO,CAAEC,SAAUhO,KAAKW,SAEvEX,KAAKoJ,aAAenE,GAAGC,WAAW3C,EAAK6G,cAAc2E,OAAO,CAAEC,SAAUhO,KAAKW,OAAQsN,MAAO,iBAC5FjO,KAAKqJ,SAAWpE,GAAGC,WAAW3C,EAAK8G,UAAU0E,OAAO,CAAEC,SAAUhO,KAAKW,SACrEX,KAAKsJ,SAAWrE,GAAGC,WAAW3C,EAAK+G,UAAUyE,OAAO,CAAEC,SAAUhO,KAAKW,SACrEX,KAAKuJ,KAAOtE,GAAGC,WAAW3C,EAAKgH,MAAMwE,OAAO,CAAEC,SAAUhO,KAAKW,SAC7DX,KAAKwJ,UAAYvE,GAAGC,WAAW3C,EAAKiH,WAAWuE,OAAO,CAAEC,SAAUhO,KAAKW,SACvEX,KAAKyJ,aAAexE,GAAGC,WAAW3C,EAAKkH,cAAcsE,OAAO,CAAEC,SAAUhO,KAAKW,SAC7EX,KAAK0J,QAAUzE,GAAGC,WAAW3C,EAAKmH,SAASqE,OAAO,CAAEC,SAAUhO,KAAKW,SACnEX,KAAK2J,QAAU1E,GAAGC,WAAW3C,EAAKoH,SAASoE,OAAO,CAAEC,SAAUhO,KAAKW,SACnEX,KAAK4J,UAAY3E,GAAGC,WAAW3C,EAAKqH,WAAWmE,OAAO,CAAEC,SAAUhO,KAAKW,SAEvEX,KAAK6J,UAAY5E,GAAGC,WAAW3C,EAAKsH,WAAWkE,OAAO,CAAEC,SAAUhO,KAAKW,SACvEX,KAAK8J,SAAW7E,GAAGC,WAAW3C,EAAKuH,UAAUiE,OAAO,CAAEC,SAAUhO,KAAKW,SACrEX,KAAK+J,OAAS9E,GAAGC,WAAW3C,EAAKwH,QAAQgE,OAAO,CAAEC,SAAUhO,KAAKW,SACjEX,KAAKgK,cAAgB/E,GAAGC,WAAW3C,EAAKyH,eAAe+D,OAAO,CAAEC,SAAUhO,KAAKW,SAC/EX,KAAKiK,SAAWhF,GAAGC,WAAW3C,EAAK0H,UAAU8D,OAAO,CAAEC,SAAUhO,KAAKW,SACrEX,KAAKkK,OAASjF,GAAGC,WAAW3C,EAAK2H,QAAQ6D,OAAO,CAAEC,SAAUhO,KAAKW,SACjEX,KAAKmK,SAAWlF,GAAGC,WAAW3C,EAAK4H,UAAU4D,OAAO,CAAEC,SAAUhO,KAAKW,SACrEX,KAAKoK,QAAUnF,GAAGC,WAAW3C,EAAK6H,SAAS2D,OAAO,CAAEC,SAAUhO,KAAKW,SAEnEX,KAAKqK,UAAYpF,GAAGC,WAAW3C,EAAK8H,WAAW0D,OAAO,CAAEC,SAAUhO,KAAKW,SACvEX,KAAKsK,MAAQrF,GAAGC,WAAW3C,EAAK+H,OAAOyD,OAAO,CAAEC,SAAUhO,KAAKW,SAC/DX,KAAKuK,MAAQtF,GAAGC,WAAW3C,EAAKgI,OAAOwD,OAAO,CAAEC,SAAUhO,KAAKW,SAC/DX,KAAKwK,OAASvF,GAAGC,WAAW3C,EAAKiI,QAAQuD,OAAO,CAAEC,SAAUhO,KAAKW,SACjEX,KAAKyK,QAAUxF,GAAGC,WAAW3C,EAAKkI,SAASsD,OAAO,CAAEC,SAAUhO,KAAKW,SACnEX,KAAK0K,QAAUzF,GAAGC,WAAW3C,EAAKmI,SAASqD,OAAO,CAAEC,SAAUhO,KAAKW,SACnEX,KAAK2K,SAAW1F,GAAGC,WAAW3C,EAAKoI,UAAUoD,OAAO,CAAEC,SAAUhO,KAAKW,SACrEX,KAAK4K,SAAW3F,GAAGC,WAAW3C,EAAKqI,UAAUmD,OAAO,CAAEC,SAAUhO,KAAKW,SAErEX,KAAK6K,UAAY5F,GAAGC,WAAW3C,EAAKsI,WAAWkD,OAAO,CAAEC,SAAUhO,KAAKW,SACvEX,KAAK8K,QAAU7F,GAAGC,WAAW3C,EAAKuI,SAASiD,OAAO,CAAEC,SAAUhO,KAAKW,SACnEX,KAAK+K,WAAa9F,GAAGC,WAAW3C,EAAKwI,YAAYgD,OAAO,CAAEC,SAAUhO,KAAKW,SACzEX,KAAKgL,aAAe/F,GAAGC,WAAW3C,EAAKyI,cAAc+C,OAAO,CAAEC,SAAUhO,KAAKW,SAC7EX,KAAKiL,WAAahG,GAAGC,WAAW3C,EAAK0I,YAAY8C,OAAO,CAAEC,SAAUhO,KAAKW,SACzEX,KAAKkL,UAAYjG,GAAGC,WAAW3C,EAAK2I,WAAW6C,OAAO,CAAEC,SAAUhO,KAAKW,SACvEX,KAAKmL,WAAalG,GAAGC,WAAW3C,EAAK4I,YAAY4C,OAAO,CAAEC,SAAUhO,KAAKW,SACzEX,KAAKoL,WAAanG,GAAGC,WAAW3C,EAAK6I,YAAY2C,OAAO,CAAEC,SAAUhO,KAAKW,SAEzEX,KAAKqL,OAASpG,GAAGE,gBAAgB5C,EAAK8I,OAAOmC,IAAI,SAAAC,GAAK,OAAA,IAAIjG,EAAA9G,QAAM+M,EAAEhM,KAAMgM,EAAEC,MAAOpM,EAAKX,WACtFX,KAAKsL,OAASrG,GAAGE,gBAAgB5C,EAAK+I,OAAOkC,IAAI,SAAAG,GAAK,OAAA,IAAInG,EAAA9G,QAAMiN,EAAElM,KAAMkM,EAAED,MAAOpM,EAAKX,WACtFX,KAAKuL,MAAQtG,GAAGE,gBAAgB5C,EAAKgJ,MAAMiC,IAAI,SAAA7O,GAAK,OAAA,IAAI6I,EAAA9G,QAAM/B,EAAE8C,KAAM9C,EAAE+O,MAAOpM,EAAKX,WAEpFX,KAAKwL,KAAOvG,GAAGC,WAAW3C,EAAKiJ,MAAMuC,OAAO,CAAEG,QAAS,CAAEC,UAAW,EAAGC,IAAK,EAAGC,IAAK,IAAML,SAAUhO,KAAKW,SACzGX,KAAKsO,MAAQrJ,GAAGG,SAAS,WAAM,OAAA9D,EAAK+H,WAAa/H,EAAKkI,YAAc,GAAGxJ,MACvEA,KAAKuO,QAAUtJ,GAAGG,SAAS,WAAM,OAAAoJ,KAAKJ,IAAI9M,EAAKkI,YAAalI,EAAKiI,SAASvJ,MAC1EA,KAAKyL,MAAQxG,GAAGC,WAAW3C,EAAKkJ,OAAOsC,OAAO,CAAEG,QAAS,CAAEC,UAAW,KAAOJ,OAAO,CAAEC,SAAUhO,KAAKW,SACrGX,KAAKyO,WAAaxJ,GAAGG,SAAS,WAAM,OAAA9D,EAAKkI,YAAclI,EAAKsI,aAAa5J,MACzEA,KAAK0L,WAAazG,GAAGC,WAAW3C,EAAKmJ,YAAYqC,OAAO,CAAEG,QAAS,CAAEC,UAAW,GAAKH,SAAUhO,KAAKW,SACpGX,KAAK2L,SAAW1G,GAAGC,WAAW3C,EAAKoJ,UAAUoC,OAAO,CAAEG,QAAS,CAAEC,UAAW,EAAGC,IAAK,EAAGC,IAAK,IAAML,SAAUhO,KAAKW,SAEjHX,KAAK4L,QAAU3G,GAAGE,gBAAgB5C,EAAKqJ,QAAQ4B,IAAI,SAAAI,GAAK,OAAA,IAAItG,EAAA5G,QAAUkN,EAAEnM,KAAMmM,EAAEC,YAAavM,EAAKX,WAClGX,KAAK6L,UAAY5G,GAAGE,gBAAgB5C,EAAKsJ,UAAU2B,IAAI,SAAAlP,GAAK,OAAA,IAAIgJ,EAAA5G,QAAUpC,EAAEmD,KAAMnD,EAAEuP,YAAavM,EAAKX,WACtGX,KAAK8L,UAAY7G,GAAGE,gBAAgB5C,EAAKuJ,UAAU0B,IAAI,SAAA9O,GAAK,OAAA,IAAI6I,EAAA7G,QAAchC,EAAE+C,KAAM/C,EAAEmP,YAAanP,EAAEoP,SAAUxM,EAAKX,WAEtHX,KAAK+L,MAAQ9G,GAAGE,gBAAgB5C,EAAKwJ,MAAMyB,IAAI,SAAAjP,GAAK,OAAA,IAAIkJ,EAAA/G,QAAKnC,EAAG+C,EAAKX,WAErEX,KAAK0O,OAASzJ,GAAGG,SAAS,WAAM,OAAA9D,EAAKqI,UAAYrI,EAAKkK,QAAQxL,MAC9DA,KAAKmN,OAAS,IAAI9F,EAAA3G,QAAOV,KAAK0O,OAAQnM,EAAK2K,QAAS3K,EAAK6K,OAAQ7K,EAAK8K,WAAYrN,KAAKW,QAEvFX,KAAK2O,MAAQ1J,GAAGG,SAAS,WAAM,OAAA9D,EAAKoI,UAAYpI,EAAKsI,aAAa5J,MAClEA,KAAKsN,UAAYrI,GAAGC,WAAW3C,EAAK+K,WAAa,GAAGS,OAAO,CAAEC,SAAUhO,KAAKW,SAC5EX,KAAK2O,MAAMC,UAAU,SAAAC,GACbvN,EAAKgM,YAAcuB,GAAKnP,EAAAgB,QAAaS,SAAS2N,oBAAoB,IAAI/G,EAAArH,QAAiBY,EAAKgM,UAAWuB,EAAKvN,EAAKgM,eACtHtN,MAEHA,KAAK+O,UAAY9J,GAAGG,SAAS,WAAM,OAAA9D,EAAKoI,UAAYpI,EAAKsI,aAAa5J,MACtEA,KAAKuN,cAAgBtI,GAAGC,WAAW3C,EAAKgL,eAAiB,GAAGQ,OAAO,CAAEC,SAAUhO,KAAKW,SACpFX,KAAK+O,UAAUH,UAAU,SAAAC,GACjBvN,EAAKiM,gBAAkBsB,GAAKnP,EAAAgB,QAAaS,SAAS2N,oBAAoB,IAAI/G,EAAArH,QAAiBY,EAAKiM,cAAesB,EAAKvN,EAAKiM,mBAC9HvN,MAEHA,KAAKuG,WAAa,IAAIyB,EAAAtH,QAAWV,KAAMuC,EAAKyJ,2BA2LpD,IAAMxD,EAAW,6aC1WjB,IAAA9I,EAAAb,EAAA,2BACAkJ,EAAAlJ,EAAA,+BACAmQ,EAAAnQ,EAAA,2BAEAoQ,GAyCWA,EAAAnP,UAAAoP,SAAP,WACI,OAAOlP,KAAKkN,UAAYlN,KAAKoN,SAAWpN,KAAKqN,aAAerN,KAAKmP,eAG9DF,EAAAnP,UAAAsP,WAAP,WACQpP,KAAKkP,WACLxP,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIzE,EAAArH,QAAiBV,KAAKkN,QAASlN,KAAKkN,UAAY,EAAGlN,KAAKkN,YAEpE,EAAjBlN,KAAKkN,UACVxN,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIwC,EAAAtO,QAC9B,IAAIqH,EAAArH,QAAiBV,KAAKkN,QAASlN,KAAKkN,UAAY,EAAGlN,KAAKkN,WAC5D,IAAInF,EAAArH,QAAiBV,KAAKoN,OAAQpN,KAAKoN,SAAW,EAAGpN,KAAKoN,YAGzC,EAAhBpN,KAAKoN,SACV1N,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIwC,EAAAtO,QAC9B,IAAIqH,EAAArH,QAAiBV,KAAKoN,OAAQpN,KAAKoN,SAAW,EAAGpN,KAAKoN,UAC1D,IAAIrF,EAAArH,QAAiBV,KAAKqN,WAAYrN,KAAKqN,aAAe,EAAGrN,KAAKqN,gBAItEgC,MAAM,YAIPJ,EAAAnP,UAAAwP,UAAP,WACQtP,KAAKkP,WACLxP,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIzE,EAAArH,QAAiBV,KAAKoN,OAAQpN,KAAKoN,SAAW,EAAGpN,KAAKoN,WAElE,EAAjBpN,KAAKkN,UACVxN,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIwC,EAAAtO,QAC9B,IAAIqH,EAAArH,QAAiBV,KAAKkN,QAASlN,KAAKkN,UAAY,EAAGlN,KAAKkN,WAC5D,IAAInF,EAAArH,QAAiBV,KAAKoN,OAAQpN,KAAKoN,SAAW,EAAGpN,KAAKoN,YAGzC,EAAhBpN,KAAKoN,SACV1N,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIwC,EAAAtO,QAC9B,IAAIqH,EAAArH,QAAiBV,KAAKoN,OAAQpN,KAAKoN,SAAW,EAAGpN,KAAKoN,UAC1D,IAAIrF,EAAArH,QAAiBV,KAAKqN,WAAYrN,KAAKqN,aAAe,EAAGrN,KAAKqN,gBAItEgC,MAAM,YAIPJ,EAAAnP,UAAAyP,cAAP,WACQvP,KAAKkP,WACLxP,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIzE,EAAArH,QAAiBV,KAAKqN,WAAYrN,KAAKqN,aAAe,EAAGrN,KAAKqN,eAE1E,EAAjBrN,KAAKkN,UACVxN,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIwC,EAAAtO,QAC9B,IAAIqH,EAAArH,QAAiBV,KAAKkN,QAASlN,KAAKkN,UAAY,EAAGlN,KAAKkN,WAC5D,IAAInF,EAAArH,QAAiBV,KAAKqN,WAAYrN,KAAKqN,aAAe,EAAGrN,KAAKqN,gBAGjD,EAAhBrN,KAAKoN,SACV1N,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIwC,EAAAtO,QAC9B,IAAIqH,EAAArH,QAAiBV,KAAKoN,OAAQpN,KAAKoN,SAAW,EAAGpN,KAAKoN,UAC1D,IAAIrF,EAAArH,QAAiBV,KAAKqN,WAAYrN,KAAKqN,aAAe,EAAGrN,KAAKqN,gBAItEgC,MAAM,YAIPJ,EAAAnP,UAAA0P,SAAP,WACI9P,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIwC,EAAAtO,QAC9B,IAAIqH,EAAArH,QAAiBV,KAAKkN,QAAS,EAAGlN,KAAKkN,WAC3C,IAAInF,EAAArH,QAAiBV,KAAKoN,OAAQ,EAAGpN,KAAKoN,UAC1C,IAAIrF,EAAArH,QAAiBV,KAAKqN,WAAY,EAAGrN,KAAKqN,iBAG1D4B,GA7GI,SAAAA,EAAmBQ,EAAiDvC,EAAkBE,EAAiBC,EAAqB1M,GAA5H,IAAAW,EAAAtB,KACIA,KAAKmP,YAAcM,EACnBzP,KAAKkN,QAAUjI,GAAGC,WAAWgI,GAAW,GACxClN,KAAKoN,OAASnI,GAAGC,WAAWkI,GAAU,GACtCpN,KAAKqN,WAAapI,GAAGC,WAAWmI,GAAc,GAE1C1M,IACAX,KAAKkN,QAAUlN,KAAKkN,QAAQa,OAAO,CAAEC,SAAUrN,IAC/CX,KAAKoN,OAASpN,KAAKoN,OAAOW,OAAO,CAAEC,SAAUrN,IAC7CX,KAAKqN,WAAarN,KAAKqN,WAAWU,OAAO,CAAEC,SAAUrN,KAGzD8O,EAAsBb,UAAU,SAAAC,GAI5B,IAHA,IAAI3B,EAAU5L,EAAK4L,UACfE,EAAS9L,EAAK8L,SACdC,EAAa/L,EAAK+L,aACiBwB,EAAhC3B,EAAUE,EAASC,GACR,EAAVH,EACAA,IAEc,EAATE,EACLA,IAGAC,IAGR3N,EAAAgB,QAAaS,SAAS2N,oBAAoB,IAAIE,EAAAtO,QAC1C,IAAIqH,EAAArH,QAAiBY,EAAK4L,QAASA,EAAS5L,EAAK4L,WACjD,IAAInF,EAAArH,QAAiBY,EAAK8L,OAAQA,EAAQ9L,EAAK8L,UAC/C,IAAIrF,EAAArH,QAAiBY,EAAK+L,WAAYA,EAAY/L,EAAK+L,iBAE5DrN,kMC1CX,IAAA0P,GAckBA,EAAAjD,eAAd,SAA6B9L,GACzB,OAAO,IAAI+O,EAAU,KAAM,KAAM/O,IAEzC+O,GAbI,SAAAA,EAAmBjO,EAAeoM,EAAsBlN,GACpDX,KAAKyB,KAAOwD,GAAGC,WAAWzD,GAAQ,IAClCzB,KAAK6N,YAAc5I,GAAGC,WAAW2I,GAAe,IAE5ClN,IACAX,KAAKyB,KAAOzB,KAAKyB,KAAKsM,OAAO,CAAEC,SAAUrN,IACzCX,KAAK6N,YAAc7N,KAAK6N,YAAYE,OAAO,CAAEC,SAAUrN,uGCVnE,IAAAgP,GAoBWA,EAAA7P,UAAA8P,eAAP,WACI,OAAU5P,KAAK8N,WAAU,IAAI9N,KAAKyB,QAGxBkO,EAAAlD,eAAd,SAA6B9L,GACzB,OAAO,IAAIgP,EAAc,KAAM,KAAM,KAAMhP,IAEnDgP,GArBI,SAAAA,EAAmBlO,EAAeoM,EAAsBC,EAAmBnN,GACvEX,KAAKyB,KAAOwD,GAAGC,WAAWzD,GAAQ,IAClCzB,KAAK6N,YAAc5I,GAAGC,WAAW2I,GAAe,IAChD7N,KAAK8N,SAAW7I,GAAGC,WAAW4I,GAAY,GAEtCnN,IACAX,KAAKyB,KAAOzB,KAAKyB,KAAKsM,OAAO,CAAEC,SAAUrN,IACzCX,KAAK6N,YAAc7N,KAAK6N,YAAYE,OAAO,CAAEC,SAAUrN,IACvDX,KAAK8N,SAAW9N,KAAK8N,SAASC,OAAO,CAAEC,SAAUrN,KAGrDX,KAAK6P,YAAc5K,GAAGG,SAASpF,KAAK4P,eAAgB5P,wGCjB5D,IAAA8P,GAckBA,EAAArD,eAAd,SAA6B9L,GACzB,OAAO,IAAImP,EAAM,KAAM,KAAMnP,IAErCmP,GAbI,SAAAA,EAAmBrO,EAAeiM,EAAgB/M,GAC9CX,KAAKyB,KAAOwD,GAAGC,WAAWzD,GAAQ,IAClCzB,KAAK0N,MAAQzI,GAAGC,WAAWwI,GAAS,GAEhC/M,IACAX,KAAKyB,KAAOzB,KAAKyB,KAAKsM,OAAO,CAAEC,SAAUrN,IACzCX,KAAK0N,MAAQ1N,KAAK0N,MAAMK,OAAO,CAAEC,SAAUrN,uGCVvD,IAAAoP,GAWkBA,EAAAtD,eAAd,SAA6B9L,GACzB,OAAO,IAAIoP,EAAK,KAAMpP,IAE9BoP,GAXI,SAAAA,EAAmBrC,EAAgB/M,GAC/BX,KAAK0N,MAAQzI,GAAGC,WAAWwI,GAAS,IAEhC/M,IACAX,KAAK0N,MAAQ1N,KAAK0N,MAAMK,OAAO,CAAEC,SAAUrN,ySCNvD,IAAAnB,EAAAX,EAAA,gBAEAmI,EAAEgJ,OAAOzN,MAAO,EAChB,IAAM0N,EAAwB,cACxBC,EAAyB,cAC/BC,GAOWA,EAAArQ,UAAAgF,eAAP,mBACUlE,EAA8B,GAEpCZ,KAAKoQ,cAAgBpJ,EAAEgJ,OAAOE,GACzBlQ,KAAKoQ,gBAAepQ,KAAKoQ,cAAgB,QAE9C,IAAwB,IAAAC,EAAAC,EAAAtQ,KAAKoQ,eAAaG,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAE,CAAvC,IAAItP,EAAWqP,EAAA7C,MACVgD,EAAST,EAAwB/O,EACvCN,EAAWC,KAAKmG,EAAEgJ,OAAOU,sGAG7B,OAAO9P,EAAW4M,IAAIhO,EAAAkB,QAAUwD,WAG7BiM,EAAArQ,UAAAoC,eAAP,SAAsBtB,eAClB,IAAkB,IAAAyP,EAAAC,EAAAtQ,KAAKoQ,eAAaG,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAE,CAAjC,IAAIG,EAAKJ,EAAA7C,MACV1G,EAAE4J,aAAgBX,EAAwBU,qGAE9C3Q,KAAKoQ,cAAgB,GAErB,IAAK,IAAI1R,EAAI,EAAGA,EAAIkC,EAAWvB,OAAQX,IACnCsB,KAAKoQ,cAAcvP,KAAKnC,GACxBsI,EAAEgJ,OAAUC,EAAwBvR,EAAKkC,EAAWlC,GAAGgE,UAK3D,OAFAsE,EAAEgJ,OAAOE,EAAwBlQ,KAAKoQ,gBAE/B,GAEfD,GAjCI,SAAAA,IACInQ,KAAKoQ,cAAgB,qHCN7B,IAAAS,GACWA,EAAA/Q,UAAAgF,eAAP,WAAuC,MAAO,IACvC+L,EAAA/Q,UAAAoC,eAAP,SAAsBtB,GAAoC,OAAO,GACrEiQ,GAHA,SAAAA,wGCHA,IAAAC,EAAAjS,EAAA,qCACAkS,EAAAlS,EAAA,8BACAmS,EAAAnS,EAAA,+BAOAM,EAAAyF,uBAAA,SAAuCpB,OAAc,IAAAyN,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAA9R,OAAA6R,IAAAD,EAAAC,EAAA,GAAAC,UAAAD,GACjD,OAAQ1N,GACJ,IAAK,QAAS,OAAO,IAAIuN,EAAArQ,QACzB,IAAK,eACD,GAAIoQ,EAAApQ,QAAgC0Q,YAAa,OAAO,IAAIN,EAAApQ,QAExDa,KAAK,CACDC,MAAO,8BACPE,KAAM,kSACNC,KAAM,UACN0P,OAAQ,KACRxP,YAAY,IAGpB,MAEJ,IAAK,SAAU,OAAO,IAAImP,EAAAtQ,QAG9B,OAAO,IAAIsQ,EAAAtQ,qMC5Bf,IAAAlB,EAAAX,EAAA,gBAGAyS,GACWA,EAAAxR,UAAAgF,eAAP,WACI,OAAQtC,KAAK2B,MAAM9D,OAAOkR,aAAaC,QAH5B,gBAGoD,IAAIhE,IAAIhO,EAAAkB,QAAUwD,WAG9EoN,EAAAxR,UAAAoC,eAAP,SAAsBtB,GAElB,OADAP,OAAOkR,aAAaE,QAAQ,aAAcjP,KAAKC,UAAU7B,EAAW4M,IAAI,SAAA5O,GAAK,OAAAA,EAAE8D,cACxE,GAGXgP,OAAAC,eAAkBL,EAAA,cAAW,KAA7B,WACI,IAAMM,EAAO,OACb,IAGI,OAFAvR,OAAOkR,aAAaE,QAAQG,EAAMA,GAClCvR,OAAOkR,aAAa7E,WAAWkF,IACxB,EAEX,MAAOtT,GACH,OAAO,oCAGnBgT,GArBA,SAAAA,wHCFA,IAAAO,GAWWA,EAAA/R,UAAAgS,QAAP,WAA2B,MAAO,oBAC3BD,EAAA/R,UAAAiS,SAAP,WACI,OAAU/R,KAAKgS,YAAYC,UAAS,KAAKjS,KAAKkS,UAAS,OAAOlS,KAAKmS,WAGhEN,EAAA/R,UAAA0M,QAAP,WACIxM,KAAKgS,YAAYhS,KAAKmS,YAGnBN,EAAA/R,UAAA0E,KAAP,WACIxE,KAAKgS,YAAYhS,KAAKkS,YAGnBL,EAAA/R,UAAAsS,YAAP,WACI,OAAOpS,KAAKmS,YAAcnS,KAAKkS,WAEvCL,GAtBI,SAAAA,EAAmB3M,EAAwCmN,EAAkBC,GACzEtS,KAAKgS,YAAc9M,EACnBlF,KAAKmS,UAAYE,EACjBrS,KAAKkS,UAAYI,qGCRzB,IAAAC,GAOIb,OAAAC,eAAWY,EAAAzS,UAAA,eAAY,KAAvB,WAAoC,OAAOE,KAAKwS,UAAUnT,wCAEnDkT,EAAAzS,UAAAgS,QAAP,WAA2B,MAAO,gBAE3BS,EAAAzS,UAAA2S,WAAP,SAAkB3F,GACd,OAAIA,EAAQ,GAAKA,GAAS9M,KAAKwS,UAAUnT,OAAe,KAEjDW,KAAKwS,UAAU1F,IAGnByF,EAAAzS,UAAA0M,QAAP,WACI,IAAK,IAAI9N,EAAI,EAAGA,EAAIsB,KAAKwS,UAAUnT,OAAQX,IAAKsB,KAAKwS,UAAU9T,GAAG8N,WAG/D+F,EAAAzS,UAAA0E,KAAP,WACI,IAAK,IAAI9F,EAAIsB,KAAKwS,UAAUnT,OAAS,EAAQ,GAALX,EAAQA,IAAKsB,KAAKwS,UAAU9T,GAAG8F,QAGpE+N,EAAAzS,UAAAsS,YAAP,WACI,OAAOpS,KAAKwS,UAAUE,MAAM,SAAAC,GAAW,OAAAA,EAAQP,iBAEvDG,GAzBI,SAAAA,QAAmB,IAAAK,EAAA,GAAA1B,EAAA,EAAAA,EAAAC,UAAA9R,OAAA6R,IAAA0B,EAAA1B,GAAAC,UAAAD,GACflR,KAAKwS,UAAYI,EAASvN,OAAO,SAAAsN,GAAW,OAACA,EAAQP,mHCJ7D,IAAAS,GASWA,EAAA/S,UAAAgS,QAAP,WAA2B,MAAO,oBAE3Be,EAAA/S,UAAA0M,QAAP,WACIxM,KAAKgS,YAAY,IAGda,EAAA/S,UAAA0E,KAAP,WACIxE,KAAKgS,YAAYhS,KAAKkS,YAGnBW,EAAA/S,UAAAsS,YAAP,WACI,OAA0B,IAAnBpS,KAAKkS,WAEpBW,GAlBI,SAAAA,EAAmB3N,GACflF,KAAKgS,YAAc9M,EACnBlF,KAAKkS,UAAYhN,uGCNzB,IAAA4N,GASWA,EAAAhT,UAAAgS,QAAP,WAA2B,MAAO,wBAE3BgB,EAAAhT,UAAA0M,QAAP,WACIxM,KAAKgS,YAAYnR,KAAKb,KAAK+S,WAGxBD,EAAAhT,UAAA0E,KAAP,WACIxE,KAAKgS,YAAY/P,OAAOjC,KAAK+S,WAG1BD,EAAAhT,UAAAsS,YAAP,WACI,OAAO,GAEfU,GAlBI,SAAAA,EAAmB5N,EAAwCoH,GACvDtM,KAAKgS,YAAc9M,EACnBlF,KAAK+S,SAAWzG,qGCNxB,IAAA0G,GAaWA,EAAAlT,UAAAgS,QAAP,WAA2B,MAAO,yBAE3BkB,EAAAlT,UAAA0M,QAAP,WACIxM,KAAKgS,YAAYiB,OAAOjT,KAAKkT,UAAW,GACxClT,KAAKgS,YAAYiB,OAAOjT,KAAKmT,UAAW,EAAGnT,KAAKoT,QAG7CJ,EAAAlT,UAAA0E,KAAP,WACIxE,KAAKgS,YAAYiB,OAAOjT,KAAKmT,UAAW,GACxCnT,KAAKgS,YAAYiB,OAAOjT,KAAKkT,UAAW,EAAGlT,KAAKoT,QAG7CJ,EAAAlT,UAAAsS,YAAP,WACI,OAAOpS,KAAKmT,YAAcnT,KAAKkT,WAEvCF,GAtBI,SAAAA,EAAmB9N,EAAwCyH,EAASI,EAAkBsG,GAClFrT,KAAKgS,YAAc9M,EACnBlF,KAAKoT,MAAQzG,EACb3M,KAAKmT,UAAYpG,EACjB/M,KAAKkT,UAAYG,qGCVzB,IAAAC,GAWWA,EAAAxT,UAAAgS,QAAP,WAA2B,MAAO,2BAE3BwB,EAAAxT,UAAA0M,QAAP,WACIxM,KAAKgS,YAAY/P,OAAOjC,KAAKoT,QAG1BE,EAAAxT,UAAA0E,KAAP,WACIxE,KAAKgS,YAAYiB,OAAOjT,KAAKuT,WAAY,EAAGvT,KAAKoT,QAG9CE,EAAAxT,UAAAsS,YAAP,WACI,OAAO,GAEfkB,GAnBI,SAAAA,EAAmBpO,EAAwCyH,GACvD3M,KAAKgS,YAAc9M,EACnBlF,KAAKoT,MAAQzG,EACb3M,KAAKuT,WAAavT,KAAKgS,YAAY/Q,QAAQjB,KAAKoT,0GCTxD,IAAApE,EAAAnQ,EAAA,kBAEA2U,GAmBI9B,OAAAC,eAAkB6B,EAAA,WAAQ,KAA1B,WAGI,OAFKA,EAAaC,YAAWD,EAAaC,UAAY,IAAID,GAEnDA,EAAaC,2CAGxB/B,OAAAC,eAAW6B,EAAA1T,UAAA,aAAU,KAArB,WAAkC,OAAOE,KAAK0T,aAAarU,wCAC3DqS,OAAAC,eAAW6B,EAAA1T,UAAA,aAAU,KAArB,WAAkC,OAAOE,KAAK2T,aAAatU,wCAEpDmU,EAAA1T,UAAA8T,mBAAP,SAA0BC,QAAA,IAAAA,IAAAA,GAAA,GACtB,IAAIC,EAAkB9T,KAAK0T,aAAa1T,KAAK+T,WAAa,GAE1D,IAAKF,EAAgB,OAAOC,EAE5B,KAAOA,aAA2B9E,EAAAtO,SAC9BoT,EAAkBA,EAAgBrB,WAAWqB,EAAgBE,aAAe,GAGhF,OAAOF,GAMJN,EAAA1T,UAAAsB,MAAP,WACIpB,KAAK0T,WAAWO,YAChBjU,KAAK2T,WAAWM,aAGbT,EAAA1T,UAAA0M,QAAP,SAAemG,GAAf,IAAArR,EAAAtB,KACQ2S,EAAQP,gBAERpS,KAAKkU,oBACL7T,OAAO8T,WAAW,WAAM,OAAA7S,EAAKkL,QAAQmG,IAAU,IAInD3S,KAAKkU,qBAAsB,EAC3BvB,EAAQnG,UACRxM,KAAK0T,WAAW7S,KAAK8R,GACrB3S,KAAK2T,WAAWM,YAChBjU,KAAKkU,qBAAsB,KAGxBV,EAAA1T,UAAAgP,oBAAP,SAA2B6D,GAA3B,IAAArR,EAAAtB,KACI,IAAI2S,EAAQP,cAEZ,GAAIpS,KAAKkU,oBACL7T,OAAO8T,WAAW,WAAM,OAAA7S,EAAKwN,oBAAoB6D,IAAU,OAD/D,CAKA3S,KAAKkU,qBAAsB,EAC3BvB,EAAQnG,UACR,IAAIsH,EAAkB9T,KAAK0T,WAAWU,MACtCpU,KAAK0T,WAAW7S,KAAK,IAAImO,EAAAtO,QAAaoT,EAAiBnB,IACvD3S,KAAK2T,WAAWM,YAChBjU,KAAKkU,qBAAsB,IAGxBV,EAAA1T,UAAA0E,KAAP,WACI,GAAiC,IAA7BxE,KAAK0T,aAAarU,OAAtB,CAEA,IAAMsT,EAAU3S,KAAK0T,WAAWU,MAEhCzB,EAAQnO,OACRxE,KAAK2T,WAAW9S,KAAK8R,KAGlBa,EAAA1T,UAAA4E,KAAP,WACI,GAAiC,IAA7B1E,KAAK2T,aAAatU,OAAtB,CAEA,IAAMsT,EAAU3S,KAAK2T,WAAWS,MAChCzB,EAAQnG,UACRxM,KAAK0T,WAAW7S,KAAK8R,KAGlBa,EAAA1T,UAAAwG,IAAP,WACI+N,QAAQ/N,IAAI,eACZ+N,QAAQ/N,IAAItG,KAAK0T,cACjBW,QAAQ/N,IAAI,eACZ+N,QAAQ/N,IAAItG,KAAK2T,eAEzBH,GA5FI,SAAAA,IAAA,IAAAlS,EAAAtB,KACIA,KAAK0T,WAAazO,GAAGE,gBAAgB,IACrCnF,KAAK2T,WAAa1O,GAAGE,gBAAgB,IACrCnF,KAAKkU,qBAAsB,EAE3BlU,KAAKyE,QAAUQ,GAAGG,SAAS,WAAM,OAAkB,EAAlB9D,EAAKyS,YAAgB/T,MACtDA,KAAK2E,QAAUM,GAAGG,SAAS,WAAM,OAAkB,EAAlB9D,EAAKgT,YAAgBtU,4HCjB9D,IAAAuU,GAWWA,EAAAzU,UAAAgS,QAAP,WAA2B,MAAO,oBAE3ByC,EAAAzU,UAAA0M,QAAP,WACIxM,KAAKgS,YAAYhS,KAAKmS,YAGnBoC,EAAAzU,UAAA0E,KAAP,WACIxE,KAAKgS,YAAYhS,KAAKkS,YAGnBqC,EAAAzU,UAAAsS,YAAP,WACI,OAAOpS,KAAKmS,YAAcnS,KAAKkS,WAEvCqC,GAnBI,SAAAA,EAAmBrP,EAAwCmN,EAAkBC,GACzEtS,KAAKgS,YAAc9M,EACnBlF,KAAKmS,UAAYE,EACjBrS,KAAKkS,UAAYI,+gCCRzB,IAAAkC,GAuBWA,EAAA1U,UAAA0G,QAAP,WAAA,IAAAlF,EAAAtB,KACQA,KAAKyU,cACTzU,KAAK0U,YAAc,IAAIC,UAAU,QAAQ3U,KAAKgM,gBAAe,SAE7DhM,KAAK0U,YAAYhR,iBAAiB,OAAQ,WACtCpC,EAAKmT,WAAU,GACfnT,EAAKoT,YAAYE,KAAKpS,KAAKC,UAAU,CACjCe,KAAM,OACNkK,MAAO,CACHjM,KAAMH,EAAKuT,WAAWpT,OACtBqT,SAAUpP,KAAKqP,IAAI,GAAI,EAAG,UAKtC/U,KAAK0U,YAAYhR,iBAAiB,QAAS,SAAAsR,GAEvCX,QAAQW,MAAM,2CAGlBhV,KAAK0U,YAAYhR,iBAAiB,UAAW,SAAA+C,iBACzC,IACI,IAAMwO,EAAOzS,KAAK2B,MAAMsC,EAAQyO,MAChC,GAAkB,SAAdD,EAAKzR,KAAiB,gBACb2R,GACL,IAAKF,EAAKxO,QAAQ2O,MAAMC,KAAK,SAAChX,GAAc,OAAAA,IAAM8W,EAAOnT,sBACzDmT,EAAOG,SAASzU,KAAK,IAAI0U,EAAcN,EAAKxO,QAAQ+O,mBAFxD,IAAmB,IAAAC,EAAAnF,EAAAhP,EAAKoU,eAAaC,EAAAF,EAAAjF,QAAAmF,EAAAlF,KAAAkF,EAAAF,EAAAjF,SAAtBmF,EAAAjI,8GAKd,GAAkB,SAAduH,EAAKzR,KACVlC,EAAKsU,UAAYX,EAAKxO,QAAQzE,IAC9BqO,EAAA/O,EAAKuU,OAAMhV,KAAIiV,MAAAzF,EAAA0F,EAAId,EAAKxO,QAAQoP,QAChCvU,EAAKoU,YAAY7U,KAAK,IAAImV,EAAWf,EAAKxO,QAAQ2O,MAAM,UAEvD,GAAkB,YAAdH,EAAKzR,KACVlC,EAAKuU,MAAMhV,KAAKoU,EAAKxO,cAEpB,GAAkB,YAAdwO,EAAKzR,SACV,IAAmB,IAAAyS,EAAA3F,EAAAhP,EAAKoU,eAAaQ,EAAAD,EAAAzF,QAAA0F,EAAAzF,KAAAyF,EAAAD,EAAAzF,OAAE,CAAlC,IAAI2F,EAAMD,EAAAxI,MACPyI,EAAOnU,KAAOiT,EAAKxO,QAAQ2P,QAC/BD,EAAOb,SAASzU,KAAK,IAAIwV,EAAY/U,EAAKgV,kBAAkBrB,EAAKxO,QAAQzE,IAAKiT,EAAKxO,QAAQ+O,YAAaP,EAAKsB,mHAGhH,GAAkB,eAAdtB,EAAKzR,KAAuB,CACjC,IAAMgT,EAAUlV,EAAKuU,QAAQxQ,OAAO,SAAAvG,GAAK,OAAAA,EAAEkD,KAAOiT,EAAKxO,UAAS,GAChEnF,EAAKuU,MAAM5T,OAAOuU,OAEC,UAAdvB,EAAKzR,MACV6Q,QAAQ/N,IAAI2O,EAAKxO,SAGzB,MAAOnI,GACH+V,QAAQW,MAAM,8BAA8BvO,EAAQyO,WAKzDV,EAAA1U,UAAA8G,WAAP,WACS5G,KAAKyU,cAEVzU,KAAK0U,YAAY+B,QACjBzW,KAAKyU,WAAU,GACfzU,KAAK0U,YAAc,KACnB1U,KAAK6V,MAAM5B,YACXjU,KAAK0V,YAAYzB,YACjBI,QAAQqC,KAAK,oCAGVlC,EAAA1U,UAAA6G,YAAP,SAAmBF,GACVzG,KAAKyU,aAGVzU,KAAK0U,YAAYE,KAAKpS,KAAKC,UAAU,CAAEe,KAAM,UAAWkK,MAAOjH,EAAS2P,OAAQ,MAG7E5B,EAAA1U,UAAA6W,mBAAP,WACQ3W,KAAKyU,YAAazU,KAAK4G,aACtB5G,KAAKwG,WAGNgO,EAAA1U,UAAAwW,kBAAR,SAA0BtU,GAEtB,OADahC,KAAK6V,QAAQxQ,OAAO,SAAAvG,GAAK,OAAAA,EAAEkD,KAAOA,IAAI,GACvC4U,YAEpBpC,GAhGI,SAAAA,EAAmBzT,EAAsBiL,GAAzC,IAAA1K,EAAAtB,KACIA,KAAK6U,WAAa9T,EAElBf,KAAKgM,cAAgB/G,GAAGC,WAAW8G,GACnChM,KAAKyU,UAAYxP,GAAGC,YAAW,GAC/BlF,KAAK6V,MAAQ5Q,GAAGE,gBAAgB,IAChCnF,KAAK0V,YAAczQ,GAAGE,gBAAgB,IACtCnF,KAAK6W,kBAAoB5R,GAAGG,SAAS,WAAM,OAAA9D,EAAKmT,YAAc,aAAe,WAAWzU,MAExF8W,EAAeC,oBAyFvB,IAAAD,GAKkBA,EAAAC,MAAd,WACQD,EAAeE,kBACnB3W,OAAOsU,UAAYtU,OAAOsU,WAAatU,OAAO4W,aAC9CH,EAAeE,iBAAkB,IAPtBF,EAAAE,iBAAkB,EASrCF,GAPI,SAAAA,KASJ,IAAAd,GAkBItE,OAAAC,eAAWqE,EAAAlW,UAAA,KAAE,KAAb,WAA0B,OAAOE,KAAKkX,qCAC1ClB,GAVI,SAAAA,EAAmBhU,GAAnB,IAAAV,EAAAtB,KACIA,KAAKkX,IAAMlV,EACXhC,KAAKsV,SAAWrQ,GAAGE,gBAAgB,IACnCnF,KAAKmX,MAAQlS,GAAGC,WAAW,OAAOlD,GAClChC,KAAKoX,QAAUnS,GAAGG,SAAS,WAAM,MAAA,IAAI9D,EAAK6V,SAAWnX,MACrDA,KAAKqX,SAAWpS,GAAGC,WAAW,IAC9BlF,KAAKsX,QAAUrS,GAAGC,WAAW,QAWrC,SAAAqS,KAAA,IAIAC,EAAAjC,GAA4BkC,EAAAlC,EAA5BiC,EAA4BD,GAQ5BhC,GALI,SAAAA,EAAmB7T,GAAnB,IAAAJ,EACIkW,EAAApY,KAAAY,OAAOA,YAEPsB,EAAKkU,YAAcvQ,GAAGC,WAAWxD,KAIzC,IAAA8V,EAAAnB,GAA0BoB,EAAApB,EAA1BmB,EAA0BD,GASdlB,EAAAvW,UAAA4X,gBAAR,SAAwBnB,GACpB,IAAM/X,EAAI,IAAIkH,KAAK6Q,GAEf1Q,EAAQrH,EAAEsH,WACV6R,EAAc,GAEN,GAAR9R,IAAYA,GAAS,IACX,IAAVA,IAAaA,EAAQ,IACM,IAA3B2I,KAAKoJ,MAAM/R,EAAQ,MAAW8R,EAAc,KAEhD,IAAI5R,EAAUvH,EAAEwH,aACZ6R,EAAgB,GAGpB,OAFiC,IAA7BrJ,KAAKoJ,MAAM7R,EAAU,MAAW8R,EAAgB,KAE7C,IAAIF,EAAc9R,EAAK,IAAIgS,EAAgB9R,EAAO,KAEjEsQ,GAtBI,SAAAA,EAAmBO,EAAoBlV,EAAc6U,GAArD,IAAAjV,EACIkW,EAAApY,KAAAY,OAAOA,YAEPsB,EAAKkU,YAAcvQ,GAAGC,WAAc5D,EAAKoW,gBAAgBnB,GAAU,IAAIK,EAAU,KAAKlV,6FCzK9F,IAAAgG,EAAA7I,EAAA,WAEAiZ,GAuBWA,EAAAhY,UAAAiY,kBAAP,SAAyBC,GAAzB,IAAA1W,EAAAtB,KACI,OAAO,WACH,IAAIiY,EAAY3W,EAAK4W,WAAaF,EAC9BC,EAAY,IAAGA,EAAY,GAC/B3W,EAAK4W,SAASD,KAIfH,EAAAhY,UAAAqY,SAAP,WACmB,IAAIC,EAAUpY,MACtBqY,aAEfP,GA5BI,SAAAA,IAAA,IAAAxW,EAAAtB,KACIA,KAAKkY,SAAWjT,GAAGC,WAAW,GAC9BlF,KAAKsY,WAAarT,GAAGE,gBAAgB,IACrCnF,KAAKuY,kBAAoBtT,GAAGC,YAAW,GACvClF,KAAKwY,mBAAqBvT,GAAGG,SAAS,WAClC,OAAI9D,EAAKiX,qBAAoD,IAA7BjX,EAAKgX,aAAajZ,QAAsB,EAEjEiC,EAAKgX,aAAaG,OAAO,SAACC,EAAera,GAC5C,OAAOqa,EAAQra,EAAEoa,OAAO,SAACC,EAAeC,GAAc,OAAAD,GAAa,EAAJC,EAAQ,EAAI,IAAI,IAChF,IACJ3Y,MACHA,KAAK4Y,0BAA4B3T,GAAGG,SAAS,WACzC,OAAoC,GAA7B9D,EAAKkX,qBAA4B,GAAKlX,EAAKkX,qBAAuB,OAC1ExY,kBAiBX,IAAAoY,GAmBWA,EAAAtY,UAAAuY,UAAP,WAAA,IAAA/W,EAAAtB,KACIA,KAAK6Y,SAASN,mBAAkB,GAChCvY,KAAK6Y,SAASP,WAAWrE,YACzB,IAAK,IAAIvV,EAAI,EAAGA,EAAIsB,KAAK8Y,mBAAoBpa,IAAKsB,KAAK+Y,qBAAqBlY,MAAM,GAClFb,KAAK6Y,SAASP,WAAWzX,KAAKb,KAAK+Y,sBAEnC/Y,KAAKgZ,gBAAkB3Y,OAAO+F,YAAY,WACtC,IAAM6S,EAAWvR,EAAAS,cAAc,EAAG,IAClC,GAAiB,KAAb8Q,EAAiB,CACjB3X,EAAK4X,kBACL,IAAMC,EAAgBvW,SAASwW,uBAAuB,iBAAiB,GACjEC,EAAczW,SAASC,cAAc,OAC3CwW,EAAYC,UAAUC,IAAI,gBAC1BF,EAAYG,UAAY,QACxBH,EAAYrX,GAAK,cACjBmX,EAAchW,YAAYkW,GAC1BhZ,OAAO8T,WAAW,WAAM,OAAAgF,EAAc9V,YAAYgW,IAAc,MAMpE,GAJA/X,EAAKyX,qBAAqBzX,EAAKmY,cAAgBR,EAC/C3X,EAAKuX,SAASP,WAAWoB,QAAQpY,EAAKuX,SAASP,aAAahX,EAAKqY,eAAgBrY,EAAKyX,sBACtFzX,EAAKmY,eAEDnY,EAAKmY,eAAiBnY,EAAKwX,mBAAoB,CAC/C,GAA6B,IAAzBxX,EAAK4X,gBAAuB,CAC5B7Y,OAAOuZ,cAActY,EAAK0X,iBAC1B1X,EAAKuX,SAASN,mBAAkB,GAChC,IAAMsB,EAAcjX,SAAS2B,eAAe,eAI5C,YAHIsV,GACAA,EAAY5X,UAKhBX,EAAKqY,gBACLrY,EAAKwX,mBAAqBxX,EAAK4X,gBAC/B5X,EAAK4X,gBAAkB,EACvB5X,EAAKmY,aAAe,EACpBnY,EAAKyX,qBAAuB,GAC5B,IAAK,IAAIra,EAAI,EAAGA,EAAI4C,EAAKwX,mBAAoBpa,IAAK4C,EAAKyX,qBAAqBlY,MAAM,GAClFS,EAAKuX,SAASP,WAAWzX,KAAKS,EAAKyX,wBAG5C,MAEXX,GAtDI,SAAAA,EAAmB0B,GACf9Z,KAAK6Y,SAAWiB,EAChB9Z,KAAK2Z,cAAgB,EACrB3Z,KAAKyZ,aAAe,EACpBzZ,KAAK8Y,mBAAqBgB,EAAQ5B,WAClClY,KAAK+Y,qBAAuB,GAC5B/Y,KAAKkZ,gBAAkB,EACvBlZ,KAAKgZ,gBAAkB,ulBCvD/B,IAAMe,EAAoB,IAAIC,IAC9B7a,EAAAkH,wBAAA,SAAwCqK,EAAauJ,GACjDF,EAAkBG,IAAIxJ,EAAKuJ,IAG/B5Z,OAAOqD,iBAAiB,UAAW,SAAApF,WAC/B,IAAkB,IAAdA,EAAE6b,YAEN,IAA4B,IAAA9J,EAAAC,EAAAyJ,EAAkBK,WAAS7J,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAE,CAAhD,IAAAiF,EAAA4E,EAAA9J,EAAA7C,MAAA,GAACgD,EAAA+E,EAAA,GAAKwE,EAAAxE,EAAA,GACX,GAAInX,EAAEoS,MAAQA,EAGV,OAFApS,EAAEgc,sBACFL,gMCXZ,IAAAM,EAAA1b,EAAA,iBACAyI,EAAAzI,EAAA,yBACA0I,EAAA1I,EAAA,6BACA2I,EAAA3I,EAAA,qBACA4I,EAAA5I,EAAA,oBACAA,EAAA,WAEA2b,0BAEA,IAAMC,EAAe,CACjB/K,UAAWpI,EAAA5G,QACXiP,cAAepI,EAAA7G,QACfoP,MAAOtI,EAAA9G,QACPqP,KAAMtI,EAAA/G,SAEVgR,OAAOC,eAAetR,OAAQ,eAAgB,CAAEqN,MAAO+M,IAEvD,IAAMC,EAAM,IAAIH,EAAA7Z,QAMhB,SAASia,EAAeC,GAChBA,EAAQ5T,EAAE,2BAA2B6T,UACpC7T,EAAE,2BAA2B6T,QAAQ,WAP9C5V,GAAG6V,cAAcJ,GAGjBhJ,OAAOC,eAAetR,OAAQ,MAAO,CAAEqN,MAAOgN,IAO9Cra,OAAOqD,iBAAiB,SAAU,WAC9BiX,EAAoC,KAArBta,OAAO0a,cAE1BJ,EAAoC,KAArBta,OAAO0a,ohBC9BtB,IAAArb,EAAAb,EAAA,0BACAkJ,EAAAlJ,EAAA,8BACAmc,EAAAnc,EAAA,8BAWA,SAAgBoc,EAAYC,EAAkBC,SAK1C,YALwB,IAAAD,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,GACtCA,EAAeD,IACdA,GAADE,EAAAf,EAAA,CAAAc,EAAAD,GAAA,IAAC,GAAcC,EAAAC,EAAA,IAGZ5M,KAAK6M,UAAYF,EAAeD,GAAgBA,EAb3D/b,EAAAgJ,cAAA,SAA8B+S,EAAkBC,SAK5C,YAL0B,IAAAD,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,IACxCA,EAAeD,IACdA,GAADE,EAAAf,EAAA,CAAAc,EAAAD,GAAA,IAAC,GAAcC,EAAAC,EAAA,IAGZ5M,KAAKoJ,MAAMpJ,KAAK6M,UAAYF,EAAeD,IAAiBA,GAGvE/b,EAAA8b,YAAAA,EAQA,IAAMK,EAAqB,IAAItB,IAC/B7a,EAAAqb,wBAAA,WAqDIvV,GAAGsW,gBAAgBjW,KAAO,CACtBkW,OAAQ,SAACC,EAAsBC,GAC3B,IAAMpD,EAAaoD,GAAAA,GACnB,GAA0B,IAAtBpD,EAAWjZ,OAAf,CAKA,IAAIsc,EAAOF,EAAQrC,uBAAuB,cAC1C,GAAIuC,EAAKtc,SAAWiZ,EAAWjZ,OAAQ,CACnC,IAAMuc,EAAWhZ,SAASC,cAAc,OACxC+Y,EAAStC,UAAUC,IAAI,cAEvB,IADA,IAAMsC,EAAQvD,EAAWA,EAAWjZ,OAAS,GACpCX,EAAI,EAAGA,EAAImd,EAAMxc,OAAQX,IAAK,CACnC,IAAMod,EAAOlZ,SAASC,cAAc,QAC9BkZ,EAAQd,EAAY,EAAG,IAC7Ba,EAAK9Y,MAAMgZ,UAAY,4BAA4BD,EAAK,uBACxDD,EAAKxC,UAAUC,IAAI,QACnBqC,EAASzY,YAAY2Y,GAEzBL,EAAQtY,YAAYyY,GACpBD,EAAOF,EAAQrC,uBAAuB,cAG1C,IAAS1a,EAAI,EAAGA,EAAI4Z,EAAWjZ,OAAQX,IACnC,CAAMmd,EAAQvD,EAAW5Z,GAEzB,IAFA,IACMud,EAAQN,EAAKjd,GAAG0a,uBAAuB,QACpC8C,EAAI,EAAGA,EAAIL,EAAMxc,OAAQ6c,IAAK,CACnC,IAAMC,EAAON,EAAMK,GACbJ,EAAwBG,EAAMC,IAEtB,IAAVC,IACAL,EAAK9Y,MAAMgZ,UAAY,KACvBF,EAAK9Y,MAAMoZ,gBAAkB,oBAAoBD,EAAI,iBA7B7DV,EAAQY,UAAY,KAoChCpX,GAAGsW,gBAAgBe,cAAgB,CAC/BC,KAAM,SAACd,GACH,IAAK,IAAI/c,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAMod,EAAOlZ,SAASC,cAAc,QACpCiZ,EAAKxC,UAAUC,IAAI,UACnBuC,EAAKxC,UAAUC,IAAI,QACnBkC,EAAQtY,YAAY2Y,KAG5BN,OAAQ,SAACC,EAAsBC,GAG3B,IAFA,IAAMc,EAAYd,IACZO,EAAQR,EAAQrP,qBAAqB,QAClC1N,EAAI,EAAGA,EAAIud,EAAM5c,OAAQX,IAC1BA,EAAI8d,EAAUnP,cACd4O,EAAMvd,GAAG4a,UAAUrX,OAAO,QAC1Bga,EAAMvd,GAAG4a,UAAUrX,OAAO,WAC1Bga,EAAMvd,GAAG4a,UAAUrX,OAAO,UAC1Bga,EAAMvd,GAAG4a,UAAUC,IAAI,eAElB7a,EAAI8d,EAAUnP,aAAemP,EAAUpP,UAC5C6O,EAAMvd,GAAG4a,UAAUrX,OAAO,QAC1Bga,EAAMvd,GAAG4a,UAAUrX,OAAO,WAC1Bga,EAAMvd,GAAG4a,UAAUrX,OAAO,cAC1Bga,EAAMvd,GAAG4a,UAAUC,IAAI,WAElB7a,EAAI8d,EAAUnP,aAAemP,EAAUpP,SAAWoP,EAAUtP,WACjE+O,EAAMvd,GAAG4a,UAAUrX,OAAO,QAC1Bga,EAAMvd,GAAG4a,UAAUrX,OAAO,UAC1Bga,EAAMvd,GAAG4a,UAAUrX,OAAO,cAC1Bga,EAAMvd,GAAG4a,UAAUC,IAAI,aAGvB0C,EAAMvd,GAAG4a,UAAUrX,OAAO,WAC1Bga,EAAMvd,GAAG4a,UAAUrX,OAAO,UAC1Bga,EAAMvd,GAAG4a,UAAUrX,OAAO,cAC1Bga,EAAMvd,GAAG4a,UAAUC,IAAI,SAGvB7a,EAAI8d,EAAUrN,cACd8M,EAAMvd,GAAG4a,UAAUrX,OAAO,UAG1Bga,EAAMvd,GAAG4a,UAAUC,IAAI,YAMvCtU,GAAGsW,gBAAgBkB,UAAY,CAC3BF,KAAM,SAACd,EAAsBC,GAEzB,IADA,IAAMgB,EAA+B,cAC5Bhe,GACL,IAAMie,EAAM/Z,SAASC,cAAc,QACnC8Z,EAAIrD,UAAUC,IAAI,iBAClBoD,EAAIrD,UAAUC,IAAI,WAClBoD,EAAIC,QAAQC,OAAS,UACrBF,EAAInb,MAAQ,IAAM9C,EAAI,GACtBsI,EAAE2V,GAAK9B,UAEP6B,EAAK7b,KAAK8b,GAEVA,EAAIjZ,iBAAiB,eAAgB,WACjCgZ,EAAKI,QAAQ,SAACH,EAAsB7P,GAC5BA,GAASpO,GAAGie,EAAIrD,UAAUC,IAAI,mBAG1CoD,EAAIjZ,iBAAiB,eAAgB,WACjCgZ,EAAKI,QAAQ,SAACH,GACVA,EAAIrD,UAAUrX,OAAO,oBAjBxBvD,EAAI,EAAGA,EAAIgd,IAAgBrN,IAAK3P,MAAhCA,GAsBT,IAAMqe,EAAWrB,IAAgBqB,SACjC,IAAiB,IAAbA,QAAyC,IAAbA,EAA0B,CACtD,IAAMC,EAAWpa,SAASC,cAAc,OACxCma,EAAS1D,UAAUC,IAAI,aACvByD,EAASX,UAAY,UACrBW,EAASJ,QAAQC,OAAS,UAC1BG,EAASxb,MAAQ,QACjBwb,EAAStZ,iBAAiB,QAAS,WAC/BhE,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIzE,EAAArH,QAAiBgb,IAAgBhO,MAAO,EAAGgO,IAAgBhO,YAEjG+N,EAAQtY,YAAY6Z,GACpBhW,EAAEgW,GAAUnC,UAGhB6B,EAAKI,QAAQ,SAACH,EAAsB7P,GAChC2O,EAAQtY,YAAYwZ,GACpBA,EAAIjZ,iBAAiB,QAAS,WAC1BhE,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIzE,EAAArH,QAAiBgb,IAAgBhO,MAAOZ,EAAQ,EAAG4O,IAAgBhO,eAIjH8N,OAAQ,SAACC,EAAsBC,GAG3B,IAFA,IAAMhO,EAAQgO,IAAgBhO,QACxBgP,EAAOjB,EAAQrC,uBAAuB,iBACnC1a,EAAI,EAAGA,EAAIge,EAAKrd,OAAQX,IAAK,CAClC,IAAMie,EAAuBD,EAAKhe,GAClCie,EAAI3Z,MAAMia,gBAAkB,KAC5BN,EAAI3Z,MAAMka,YAAc,KACpBxe,EAAIgP,IACJiP,EAAI3Z,MAAMia,gBAAkB,oBAC5BN,EAAI3Z,MAAMka,YAAc,wBAMxCjY,GAAGsW,gBAAgB4B,kBAAoB,CACnCZ,KAAM,SAACd,EAAsBC,GACzB,IAAK,IAAIhd,EAAI,EAAGA,EAAIgd,IAAgBrN,IAAK3P,IAAK,CAC1C,IAAMie,EAAM/Z,SAASC,cAAc,QACnC8Z,EAAIrD,UAAUC,IAAI,iBAClBkC,EAAQtY,YAAYwZ,KAG5BnB,OAAQ,SAACC,EAAsBC,GAG3B,IAFA,IAAMhO,EAAQgO,IAAgBhO,QACxBgP,EAAOjB,EAAQrP,qBAAqB,QACjC1N,EAAI,EAAGA,EAAIge,EAAKrd,OAAQX,IAC7Bge,EAAKhe,GAAG4a,UAAUrX,OAAO,UACrBvD,EAAIgP,GACJgP,EAAKhe,GAAG4a,UAAUC,IAAI,UACtBmD,EAAKhe,GAAG4a,UAAUrX,OAAO,WAEpByZ,IAAgB0B,cACrBV,EAAKhe,GAAG4a,UAAUC,IAAI,YAMtCtU,GAAGsW,gBAAgB8B,KAAO,CACtBd,KAAM,SAACd,EAAsBC,GAEzB,IADA,IAAMgB,EAA+B,cAC5Bhe,GACL,IAAMie,EAAM/Z,SAASC,cAAc,QACnC8Z,EAAIrD,UAAUC,IAAI,iBAClBkC,EAAQtY,YAAYwZ,GAEpBD,EAAK7b,KAAK8b,GAEVA,EAAIjZ,iBAAiB,eAAgB,WACjCgZ,EAAKI,QAAQ,SAACH,EAAsB7P,GAC5BA,GAASpO,GAAGie,EAAIrD,UAAUC,IAAI,mBAG1CoD,EAAIjZ,iBAAiB,eAAgB,WACjCgZ,EAAKI,QAAQ,SAACH,GACVA,EAAIrD,UAAUrX,OAAO,oBAdxBvD,EAAI,EAAGA,EAAI,GAAIA,MAAfA,GAkBTge,EAAKI,QAAQ,SAACH,EAAsB7P,GAChC6P,EAAIjZ,iBAAiB,QAAS,WAC1BhE,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIzE,EAAArH,QAAiBgb,IAAgBhO,MAAOZ,EAAQ,EAAG4O,IAAgBhO,eAIjH8N,OAAQ,SAACC,EAAsBC,GAI3B,IAHA,IAAM2B,EAAO3B,IAAgBhO,QACvBgL,EAAQgD,IAAgBhD,QACxBgE,EAAOjB,EAAQrP,qBAAqB,QACjC1N,EAAI,EAAGA,EAAIge,EAAKrd,OAAQX,IACzBA,EAAI2e,EAAMX,EAAKhe,GAAG4a,UAAUC,IAAI,cAC/BmD,EAAKhe,GAAG4a,UAAUrX,OAAO,cAE1BvD,EAAIga,EAAOgE,EAAKhe,GAAG4a,UAAUrX,OAAO,UACnCya,EAAKhe,GAAG4a,UAAUC,IAAI,YAKvCtU,GAAGsW,gBAAgB+B,gBAAkB,CACjCf,KAAM,SAACd,GACHpb,OAAO8T,WAAW,WACVsH,EAAQ/N,OACZ+N,EAAQpP,SACT,KAIXpH,GAAGsW,gBAAgBgC,YAAc,CAC7BhB,KAAM,SAACd,EAAsBC,GACzBD,EAAQ/X,iBAAiB,cAAe,SAAApF,GACpCA,EAAEgc,iBACFoB,GAAAA,OAKZzW,GAAGsW,gBAAgBiC,kBAAoB,CACnCjB,KAAM,SAACd,EAAsBC,GACzB,IAAM+B,EAAiChC,EACvCgC,EAAa/Z,iBAAiB,SAAU,WACpC,IAAM4O,EAAWoJ,GAAAA,GACXrJ,EAAWoL,EAAa/P,MAC1B4E,IAAaD,IAEjBqJ,GAAAA,CAAgBrJ,GACZqJ,GAAAA,KAAsBpJ,IAC1BoJ,GAAAA,CAAgBpJ,GAEhB5S,EAAAgB,QAAaS,SAASqL,QAAQ,IAAIwO,EAAAta,QAAiBgb,IAAiBrJ,EAAUC,SAGtFkJ,OAAQ,SAACC,EAAsBC,GACRD,EAAS/N,MAAQgO,GAAAA,KAK5CzW,GAAGyY,UAAUzP,MAAQ,SAAIjK,EAA+BvC,GAOpD,OADA6Z,EAAmBpB,IAAIlW,EAAQvC,GACxBuC,GAGXiB,GAAGyY,UAAU1P,SAAW,SAAIhK,EAA+BrD,GAcvD,OAbesE,GAAG0Y,aAAa,CAC3BC,KAAM5Z,EACN6Z,MAAO,SAACxL,GACA1R,IACAqD,EAAO8Z,kBAAkB9Z,MAGzBA,EAAOqO,GACPrO,EAAO8Z,kBAAkBzL,OAGlCtE,OAAO,CAAEgQ,OAAQ,YAKxB9Y,GAAGyY,UAAUxP,QAAU,SAAClK,EAAoCiN,GACxD,IAAM9C,EAAY8C,EAAK9C,WAAa,EAC9BC,EAAM6C,EAAK7C,MAAO,EAAA,EAClBC,EAAM4C,EAAK5C,KAAO2P,EAAAA,EAGlB/Z,EAASgB,GAAG0Y,aAAa,CAC3BC,KAAM5Z,EACN6Z,MAAO,SAACxL,GACJ,IAAM4L,EAAUja,IACVka,EAAqB1P,KAAK2P,IAAI,GAAIhQ,GAClCiQ,EAAgBC,MAAMhM,GAAY,GAAKA,EACzCiM,EAAe9P,KAAK+P,MAAMH,EAAgBF,GAAsBA,EAChEI,EAAelQ,EAAKkQ,EAAelQ,EACfC,EAAfiQ,IAAoBA,EAAejQ,GAGxCiQ,IAAiBL,EACjBja,EAAOsa,GAKHjM,IAAa4L,GACbja,EAAO8Z,kBAAkBQ,MAItCvQ,OAAO,CAAEgQ,OAAQ,WAMpB,OAHA9Z,EAAOD,KAGAC,GAIXgB,GAAGuZ,aAAaC,GAAGxM,QAAU,WACzB,OAAOqJ,EAAmBoD,IAAI1e","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Character from \"./Character/Character\";\r\nimport Dice from \"./Dice\";\r\n// import swal from \"sweetalert\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\nimport ICharacterRepository, { getCharacterRepository } from \"./Character/Repository/ICharacterRepository\";\r\nimport { registerKeyboardCommand } from \"./Keyboard\";\r\nimport MenuBar from \"./MenuBar\";\r\n\r\nexport default class Application {\r\n    private _characterRepo: ICharacterRepository;\r\n    private _previousSection: string;\r\n\r\n    public mode: KnockoutObservable<string>;\r\n    public characterId: KnockoutObservable<number>;\r\n    public characters: KnockoutObservableArray<Character>;\r\n    public realCharacters: KnockoutComputed<Array<Character>>;\r\n    public character: KnockoutComputed<Character>;\r\n    public dice: Dice;\r\n    public lockButtonClass: KnockoutComputed<string>;\r\n    public lockButtonIcon: KnockoutComputed<string>;\r\n    public showClock: KnockoutObservable<boolean>;\r\n    public currentTime: KnockoutObservable<Date>;\r\n    public currentTimeDisplay: KnockoutComputed<string>;\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n    // public menuBar: KnockoutObservable<MenuBar>;\r\n    public menuBar: MenuBar;\r\n\r\n    public constructor() {\r\n        this._characterRepo = getCharacterRepository(\"LocalStorage\");\r\n\r\n        const savedCharacters = this._characterRepo.loadCharacters();\r\n        savedCharacters.unshift(Character.newCharacter());\r\n        savedCharacters[0].ghost = true;\r\n\r\n        this.mode = ko.observable(\"list\");\r\n        this.characterId = ko.observable(0);\r\n        this.characters = ko.observableArray(savedCharacters);\r\n        this.realCharacters = ko.computed(() => this.characters().filter(c => !c.ghost), this);\r\n        this.character = ko.computed(() => this.characters()[this.characterId()], this);\r\n        this.dice = new Dice();\r\n        this.lockButtonClass = ko.computed(() => this.character().locked() ? \"btn-danger\" : \"btn-outline-success\", this);\r\n        this.lockButtonIcon = ko.computed(() => this.character().locked() ? \"fas fa-lock\" : \"fas fa-lock-open\", this);\r\n        this._previousSection = null;\r\n        this.showClock = ko.observable(false);\r\n        this.currentTime = ko.observable(new Date());\r\n\r\n        this.currentTimeDisplay = ko.computed(() => {\r\n            const time = this.currentTime();\r\n            let hours = time.getHours();\r\n            const minutes = time.getMinutes();\r\n            const seconds = time.getSeconds();\r\n            const suffix = hours < 12 ? \"AM\" : \"PM\";\r\n            const minutePrefix = minutes < 10 ? \"0\" : \"\";\r\n            const secondPrefix = seconds < 10 ? \"0\" : \"\";\r\n            if (hours > 12) hours -= 12;\r\n            else if (hours === 0) hours = 12;\r\n            return `${hours}:${minutePrefix}${minutes}:${secondPrefix}${seconds} ${suffix}`;\r\n        }, this);\r\n\r\n        this.canUndo = ko.computed(() => CommandStack.instance.canUndo() && !this.character().locked(), this);\r\n        this.canRedo = ko.computed(() => CommandStack.instance.canRedo() && !this.character().locked(), this);\r\n\r\n        window.setInterval(() => {\r\n            this.currentTime(new Date());\r\n        }, 1000);\r\n\r\n        registerKeyboardCommand(\"s\", () => this.saveCharacters());\r\n        registerKeyboardCommand(\"z\", () => { \r\n            if (this.mode() === \"list\") return;\r\n            this.undo();\r\n        });\r\n        registerKeyboardCommand(\"Z\", () => {\r\n            if (this.mode() === \"list\") return;\r\n            this.redo();\r\n        });\r\n        registerKeyboardCommand(\"l\", () => {\r\n            if (this.mode() === \"list\") return;\r\n            this.toggleCharacterLock();\r\n        });\r\n        registerKeyboardCommand(\"o\", () => this.toggleClock());\r\n        registerKeyboardCommand(\"q\", () => CommandStack.instance.log());\r\n\r\n        registerKeyboardCommand(\"j\", () => {\r\n            this.character().connection.connect();\r\n        });\r\n\r\n        registerKeyboardCommand(\"m\", () => {\r\n            const message = prompt(\"Message?\");\r\n            this.character().connection.sendMessage(message);\r\n        });\r\n\r\n        registerKeyboardCommand(\"J\", () => {\r\n            this.character().connection.disconnect();\r\n        });\r\n\r\n        window.addEventListener(\"hashchange\", e => {\r\n            const hash = window.location.hash.substring(1);\r\n            if (!hash) return;\r\n\r\n            const offset = parseInt($(\".body-content\").css(\"top\"));\r\n            const $domElement = $(`#${hash}`);\r\n            $(window).scrollTop($domElement.offset().top - offset);\r\n        });\r\n\r\n        // const menuBar = new MenuBar();\r\n        // // File menu\r\n        // const fileMenu = menuBar.addMenu(\"File\");\r\n        // fileMenu.addMenuOption(\"Back\", ko.computed(() => this.mode() !== \"list\", this), () => this.goBack());\r\n        // fileMenu.addMenuOption(\"Test\", ko.computed(() => true), () => alert(\"test\"));\r\n\r\n        // const editMenu = menuBar.addMenu(\"Edit\");\r\n        // editMenu.addMenuOption(\"Undo\", ko.computed(() => this.mode() !== \"list\" && this.canUndo(), this), () => this.undo(), \"z\");\r\n        // editMenu.addMenuOption(\"Redo\", ko.computed(() => this.mode() !== \"list\" && this.canRedo(), this), () => this.redo(), \"Z\");\r\n\r\n        // this.menuBar = menuBar;\r\n    }\r\n\r\n    public toggleClock(): void {\r\n        this.showClock(!this.showClock());\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.mode() === \"sheet\") this.mode(\"list\");\r\n        else {\r\n            this.mode(\"sheet\");\r\n\r\n            if (this._previousSection) window.location.hash = this._previousSection;\r\n        }\r\n    }\r\n\r\n    public newCharacter(): void {\r\n        const newChar = Character.newCharacter();\r\n        newChar.locked(false);\r\n        this.characters.push(newChar);\r\n\r\n        this.selectCharacter(newChar);\r\n    }\r\n\r\n    public selectCharacter(character: Character): void {\r\n        const charIndex = this.characters.indexOf(character);\r\n        if (this.characterId() !== charIndex) {\r\n            this.characterId(charIndex);\r\n            CommandStack.instance.reset();\r\n        }\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public deleteCharacter(character: Character): void {\r\n        if (this.character().locked()) return;\r\n        swal({\r\n            title: `Delete ${this.character().name()}`,\r\n            text: \"Are you sure? (As long as you don't save, your character won't be gone.)\",\r\n            icon: \"warning\",\r\n            buttons: [\"Cancel\", \"Delete\"],\r\n            dangerMode: true\r\n        })\r\n        .then((willDelete: boolean) => {\r\n            if (willDelete) {\r\n                const id = this.characterId();\r\n                this.characterId(0);\r\n                this.characters.remove(this.characters()[id]);\r\n                this.mode(\"list\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public saveCharacters(): void {\r\n        this._characterRepo.saveCharacters(this.realCharacters());\r\n        swal(\"Characters saved successfully!\", {\r\n            buttons: {},\r\n            timer: 1000,\r\n            icon: \"success\"\r\n        });\r\n    }\r\n\r\n    public downloadCharacter(): void {\r\n        const json = JSON.stringify(this.character().toJson());\r\n\r\n        const dl = document.createElement(\"a\");\r\n        dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${encodeURIComponent(json)}`);\r\n        dl.setAttribute(\"download\", `${this.character().name()}.json`);\r\n\r\n        dl.style.display = \"none\";\r\n        document.body.appendChild(dl);\r\n\r\n        dl.click();\r\n\r\n        document.body.removeChild(dl);\r\n    }\r\n\r\n    public uploadCharacter(): void {\r\n        const ul = document.createElement(\"input\");\r\n        ul.type = \"file\";\r\n        ul.accept = \".json\";\r\n        ul.style.display = \"none\";\r\n\r\n        ul.addEventListener(\"change\", e => {\r\n            const file = ul.files[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const json = e.target.result;\r\n                this.characters.push(Character.fromJson(JSON.parse(json)));\r\n                this.characterId(this.characters().length - 1);\r\n                this.mode(\"sheet\");\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n\r\n        document.body.appendChild(ul);\r\n\r\n        ul.click();\r\n\r\n        document.body.removeChild(ul);\r\n    }\r\n\r\n    public toggleCharacterLock(): void {\r\n        const character = this.character();\r\n        character.locked(!character.locked());\r\n    }\r\n\r\n    public switchMode(mode: string): () => void {\r\n        return () => {\r\n            if (this.mode() !== \"list\" && document.getElementById(mode)) {\r\n                this._previousSection = mode;\r\n            }\r\n            else this._previousSection = null;\r\n\r\n            window.location.hash = \"\";\r\n            this.mode(mode);\r\n        }\r\n    }\r\n\r\n    public undo(): void {\r\n        if (!this.canUndo()) return;\r\n        CommandStack.instance.undo();\r\n    }\r\n\r\n    public redo(): void {\r\n        if (!this.canRedo()) return;\r\n        CommandStack.instance.redo();\r\n    }\r\n}","import Damage from \"./Damage\";\r\nimport Equipment from \"./Equipment\";\r\nimport InventoryItem from \"./InventoryItem\";\r\nimport Merit from \"./Merit\";\r\nimport Note from \"./Note\";\r\nimport { randomInteger } from \"../utils\";\r\nimport CommandStack from \"../Command/CommandStack\";\r\nimport CollectionAddCommand from \"../Command/CollectionAddCommand\";\r\nimport CollectionRemoveCommand from \"../Command/CollectionRemoveCommand\";\r\nimport CollectionMoveCommand from \"../Command/CollectionMoveCommand\";\r\nimport ClearUsedCommand from \"../Command/ClearUsedCommand\";\r\nimport AttributeCommand from \"../Command/AttributeCommand\";\r\nimport Connection from \"../Connection\";\r\n\r\nexport default class Character {\r\n    public ghost: boolean = false;\r\n    public locked: KnockoutObservable<boolean> = ko.observable(true);\r\n\r\n    public name: KnockoutObservable<string>;\r\n    public player: KnockoutObservable<string>;\r\n    public age: KnockoutObservable<number>;\r\n    public vice: KnockoutObservable<string>;\r\n    public virtue: KnockoutObservable<string>;\r\n    public origins: KnockoutObservable<string>;\r\n    public gender: KnockoutObservable<string>;\r\n    public concept: KnockoutObservable<string>;\r\n    public chronicle: KnockoutObservable<string>;\r\n\r\n    public intelligence: KnockoutObservable<number>;\r\n    public strength: KnockoutObservable<number>;\r\n    public presence: KnockoutObservable<number>;\r\n    public wits: KnockoutObservable<number>;\r\n    public dexterity: KnockoutObservable<number>;\r\n    public manipulation: KnockoutObservable<number>;\r\n    public resolve: KnockoutObservable<number>;\r\n    public stamina: KnockoutObservable<number>;\r\n    public composure: KnockoutObservable<number>;\r\n\r\n    public academics: KnockoutObservable<number>;\r\n    public robotics: KnockoutObservable<number>;\r\n    public crafts: KnockoutObservable<number>;\r\n    public investigation: KnockoutObservable<number>;\r\n    public medicine: KnockoutObservable<number>;\r\n    public occult: KnockoutObservable<number>;\r\n    public politics: KnockoutObservable<number>;\r\n    public science: KnockoutObservable<number>;\r\n    \r\n    public athletics: KnockoutObservable<number>;\r\n    public brawl: KnockoutObservable<number>;\r\n    public drive: KnockoutObservable<number>;\r\n    public ranged: KnockoutObservable<number>;\r\n    public larceny: KnockoutObservable<number>;\r\n    public stealth: KnockoutObservable<number>;\r\n    public survival: KnockoutObservable<number>;\r\n    public weaponry: KnockoutObservable<number>;\r\n\r\n    public animalKen: KnockoutObservable<number>;\r\n    public empathy: KnockoutObservable<number>;\r\n    public expression: KnockoutObservable<number>;\r\n    public intimidation: KnockoutObservable<number>;\r\n    public persuasion: KnockoutObservable<number>;\r\n    public socialize: KnockoutObservable<number>;\r\n    public streetwise: KnockoutObservable<number>;\r\n    public subterfuge: KnockoutObservable<number>;\r\n\r\n    public merits: KnockoutObservableArray<Merit>;\r\n    public spells: KnockoutObservableArray<Merit>;\r\n    public flaws: KnockoutObservableArray<Merit>;\r\n\r\n    public size: KnockoutObservable<number>;\r\n    public speed: KnockoutComputed<number>;\r\n    public defense: KnockoutComputed<number>;\r\n    public armor: KnockoutObservable<number>;\r\n    public initiative: KnockoutComputed<number>;\r\n    public experience: KnockoutObservable<number>;\r\n    public morality: KnockoutObservable<number>;\r\n\r\n    public weapons: KnockoutObservableArray<Equipment>;\r\n    public equipment: KnockoutObservableArray<Equipment>;\r\n    public inventory: KnockoutObservableArray<InventoryItem>;\r\n\r\n    public notes: KnockoutObservableArray<Note>;\r\n\r\n    public health: KnockoutComputed<number>;\r\n    public damage: Damage;\r\n\r\n    public magic: KnockoutComputed<number>;\r\n    public usedMagic: KnockoutObservable<number>;\r\n\r\n    public willpower: KnockoutComputed<number>;\r\n    public usedWillpower: KnockoutObservable<number>;\r\n\r\n    public connection: Connection;\r\n\r\n    public constructor(json: CharacterJson) {\r\n        this.name = ko.observable(json.name).extend({ lockable: this.locked, named: \"Name\" });\r\n        this.player = ko.observable(json.player).extend({ lockable: this.locked });\r\n        this.age = ko.observable(json.age).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.vice = ko.observable(json.vice).extend({ lockable: this.locked });\r\n        this.virtue = ko.observable(json.virtue).extend({ lockable: this.locked });\r\n        this.origins = ko.observable(json.origins).extend({ lockable: this.locked });\r\n        this.gender = ko.observable(json.gender).extend({ lockable: this.locked });\r\n        this.concept = ko.observable(json.concept).extend({ lockable: this.locked });\r\n        this.chronicle = ko.observable(json.chronicle).extend({ lockable: this.locked });\r\n\r\n        this.intelligence = ko.observable(json.intelligence).extend({ lockable: this.locked, named: \"Intelligence\" });\r\n        this.strength = ko.observable(json.strength).extend({ lockable: this.locked });\r\n        this.presence = ko.observable(json.presence).extend({ lockable: this.locked });\r\n        this.wits = ko.observable(json.wits).extend({ lockable: this.locked });\r\n        this.dexterity = ko.observable(json.dexterity).extend({ lockable: this.locked });\r\n        this.manipulation = ko.observable(json.manipulation).extend({ lockable: this.locked });\r\n        this.resolve = ko.observable(json.resolve).extend({ lockable: this.locked });\r\n        this.stamina = ko.observable(json.stamina).extend({ lockable: this.locked });\r\n        this.composure = ko.observable(json.composure).extend({ lockable: this.locked });\r\n\r\n        this.academics = ko.observable(json.academics).extend({ lockable: this.locked });\r\n        this.robotics = ko.observable(json.robotics).extend({ lockable: this.locked });\r\n        this.crafts = ko.observable(json.crafts).extend({ lockable: this.locked });\r\n        this.investigation = ko.observable(json.investigation).extend({ lockable: this.locked });\r\n        this.medicine = ko.observable(json.medicine).extend({ lockable: this.locked });\r\n        this.occult = ko.observable(json.occult).extend({ lockable: this.locked });\r\n        this.politics = ko.observable(json.politics).extend({ lockable: this.locked });\r\n        this.science = ko.observable(json.science).extend({ lockable: this.locked });\r\n\r\n        this.athletics = ko.observable(json.athletics).extend({ lockable: this.locked });\r\n        this.brawl = ko.observable(json.brawl).extend({ lockable: this.locked });\r\n        this.drive = ko.observable(json.drive).extend({ lockable: this.locked });\r\n        this.ranged = ko.observable(json.ranged).extend({ lockable: this.locked });\r\n        this.larceny = ko.observable(json.larceny).extend({ lockable: this.locked });\r\n        this.stealth = ko.observable(json.stealth).extend({ lockable: this.locked });\r\n        this.survival = ko.observable(json.survival).extend({ lockable: this.locked });\r\n        this.weaponry = ko.observable(json.weaponry).extend({ lockable: this.locked });\r\n\r\n        this.animalKen = ko.observable(json.animalKen).extend({ lockable: this.locked });\r\n        this.empathy = ko.observable(json.empathy).extend({ lockable: this.locked });\r\n        this.expression = ko.observable(json.expression).extend({ lockable: this.locked });\r\n        this.intimidation = ko.observable(json.intimidation).extend({ lockable: this.locked });\r\n        this.persuasion = ko.observable(json.persuasion).extend({ lockable: this.locked });\r\n        this.socialize = ko.observable(json.socialize).extend({ lockable: this.locked });\r\n        this.streetwise = ko.observable(json.streetwise).extend({ lockable: this.locked });\r\n        this.subterfuge = ko.observable(json.subterfuge).extend({ lockable: this.locked });\r\n\r\n        this.merits = ko.observableArray(json.merits.map(m => new Merit(m.name, m.value, this.locked)));\r\n        this.spells = ko.observableArray(json.spells.map(s => new Merit(s.name, s.value, this.locked)));\r\n        this.flaws = ko.observableArray(json.flaws.map(f => new Merit(f.name, f.value, this.locked)));\r\n\r\n        this.size = ko.observable(json.size).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n        this.speed = ko.computed(() => this.strength() + this.dexterity() + 5, this);\r\n        this.defense = ko.computed(() => Math.min(this.dexterity(), this.wits()), this);\r\n        this.armor = ko.observable(json.armor).extend({ numeric: { precision: 0 } }).extend({ lockable: this.locked });\r\n        this.initiative = ko.computed(() => this.dexterity() + this.composure(), this);\r\n        this.experience = ko.observable(json.experience).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.morality = ko.observable(json.morality).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n\r\n        this.weapons = ko.observableArray(json.weapons.map(w => new Equipment(w.name, w.description, this.locked)));\r\n        this.equipment = ko.observableArray(json.equipment.map(e => new Equipment(e.name, e.description, this.locked)));\r\n        this.inventory = ko.observableArray(json.inventory.map(i => new InventoryItem(i.name, i.description, i.quantity, this.locked)));\r\n\r\n        this.notes = ko.observableArray(json.notes.map(n => new Note(n, this.locked)));\r\n\r\n        this.health = ko.computed(() => this.stamina() + this.size(), this);\r\n        this.damage = new Damage(this.health, json.bashing, json.lethal, json.aggravated, this.locked);\r\n\r\n        this.magic = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedMagic = ko.observable(json.usedMagic || 0).extend({ lockable: this.locked });\r\n        this.magic.subscribe(val => {\r\n            if (this.usedMagic() > val) CommandStack.instance.executeWithPrevious(new AttributeCommand(this.usedMagic, val, this.usedMagic()));\r\n        }, this);\r\n\r\n        this.willpower = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedWillpower = ko.observable(json.usedWillpower || 0).extend({ lockable: this.locked });\r\n        this.willpower.subscribe(val => {\r\n            if (this.usedWillpower() > val) CommandStack.instance.executeWithPrevious(new AttributeCommand(this.usedWillpower, val, this.usedWillpower()));\r\n        }, this);\r\n\r\n        this.connection = new Connection(this, json.serverAddress);\r\n    }\r\n\r\n    public static newCharacter(): Character {\r\n        return new Character({\r\n            name: randomName(),\r\n            player: \"\",\r\n            age: 0,\r\n            vice: \"\",\r\n            virtue: \"\",\r\n            origins: \"\",\r\n            gender: \"\",\r\n            concept: \"\",\r\n            chronicle: \"\",\r\n\r\n            intelligence: 1,\r\n            strength: 1,\r\n            presence: 1,\r\n            wits: 1,\r\n            dexterity: 1,\r\n            manipulation: 1,\r\n            resolve: 1,\r\n            stamina: 1,\r\n            composure: 1,\r\n\r\n            academics: 0,\r\n            robotics: 0,\r\n            crafts: 0,\r\n            investigation: 0,\r\n            medicine: 0,\r\n            occult: 0,\r\n            politics: 0,\r\n            science: 0,\r\n\r\n            athletics: 0,\r\n            brawl: 0,\r\n            drive: 0,\r\n            ranged: 0,\r\n            larceny: 0,\r\n            stealth: 0,\r\n            survival: 0,\r\n            weaponry: 0,\r\n\r\n            animalKen: 0,\r\n            empathy: 0,\r\n            expression: 0,\r\n            intimidation: 0,\r\n            persuasion: 0,\r\n            socialize: 0,\r\n            streetwise: 0,\r\n            subterfuge: 0,\r\n\r\n            merits: [],\r\n            spells: [],\r\n            flaws: [],\r\n\r\n            size: 5,\r\n            armor: 0,\r\n            experience: 0,\r\n            morality: 7,\r\n\r\n            weapons: [],\r\n            equipment: [],\r\n            inventory: [],\r\n\r\n            notes: [],\r\n\r\n            serverAddress: \"\"\r\n        });\r\n    }\r\n\r\n    public static fromJson(json: CharacterJson): Character {\r\n        return new Character(json);\r\n    }\r\n\r\n    public onComponentClick(_: any, e: Event): void {\r\n        const element = <HTMLElement>e.currentTarget;\r\n        element.getElementsByTagName(\"input\")[0].focus();\r\n    }\r\n\r\n    public newItem<T>(observableArray: KnockoutObservableArray<T>, constructor: { createLockable(locked: KnockoutObservable<boolean>): T}): () => void {\r\n        return () => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionAddCommand(observableArray, constructor.createLockable(this.locked)));\r\n        };\r\n    }\r\n\r\n    public removeItem<T>(observableArray: KnockoutObservableArray<T>): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionRemoveCommand(observableArray, item));\r\n        };\r\n    }\r\n\r\n    public moveItem<T>(observableArray: KnockoutObservableArray<T>, direction: number): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            const index = observableArray.indexOf(item);\r\n            const newIndex = index + direction;\r\n\r\n            if (newIndex < 0 || newIndex >= observableArray().length) return;\r\n\r\n            CommandStack.instance.execute(new CollectionMoveCommand(observableArray, item, newIndex, index));\r\n        };\r\n    }\r\n\r\n    public clearUsed(usedObservable: KnockoutObservable<number>): () => void {\r\n        return () => {\r\n            CommandStack.instance.execute(new ClearUsedCommand(usedObservable));\r\n        };\r\n    }\r\n\r\n    public toJson(): CharacterJson {\r\n        return {\r\n            name: this.name(),\r\n            player: this.player(),\r\n            age: this.age(),\r\n            vice: this.vice(),\r\n            virtue: this.virtue(),\r\n            origins: this.origins(),\r\n            gender: this.gender(),\r\n            concept: this.concept(),\r\n            chronicle: this.chronicle(),\r\n\r\n            intelligence: this.intelligence(),\r\n            wits: this.wits(),\r\n            resolve: this.resolve(),\r\n            strength: this.strength(),\r\n            dexterity: this.dexterity(),\r\n            stamina: this.stamina(),\r\n            presence: this.presence(),\r\n            manipulation: this.manipulation(),\r\n            composure: this.composure(),\r\n\r\n            bashing: this.damage.bashing(),\r\n            lethal: this.damage.lethal(),\r\n            aggravated: this.damage.aggravated(),\r\n            usedMagic: this.usedMagic(),\r\n            usedWillpower: this.usedWillpower(),\r\n\r\n            academics: this.academics(),\r\n            robotics: this.robotics(),\r\n            crafts: this.crafts(),\r\n            investigation: this.investigation(),\r\n            medicine: this.medicine(),\r\n            occult: this.occult(),\r\n            politics: this.politics(),\r\n            science: this.science(),\r\n\r\n            athletics: this.athletics(),\r\n            brawl: this.brawl(),\r\n            drive: this.drive(),\r\n            ranged: this.ranged(),\r\n            larceny: this.larceny(),\r\n            stealth: this.stealth(),\r\n            survival: this.survival(),\r\n            weaponry: this.weaponry(),\r\n\r\n            animalKen: this.animalKen(),\r\n            empathy: this.empathy(),\r\n            expression: this.expression(),\r\n            intimidation: this.intimidation(),\r\n            persuasion: this.persuasion(),\r\n            socialize: this.socialize(),\r\n            streetwise: this.streetwise(),\r\n            subterfuge: this.subterfuge(),\r\n\r\n            merits: this.merits().map(m => { return { name: m.name(), value: m.value() }; }),\r\n            spells: this.spells().map(s => { return { name: s.name(), value: s.value() }; }),\r\n            flaws: this.flaws().map(f => { return { name: f.name(), value: f.value() }; }),\r\n\r\n            size: this.size(),\r\n            armor: this.armor(),\r\n            experience: this.experience(),\r\n            morality: this.morality(),\r\n\r\n            weapons: this.weapons().map(w => { return { name: w.name(), description: w.description() }; }),\r\n            equipment: this.equipment().map(e => { return { name: e.name(), description: e.description() }; }),\r\n            inventory: this.inventory().map(i => { return { name: i.name(), description: i.description(), quantity: i.quantity() }; }),\r\n\r\n            notes: this.notes().map(n => n.value()),\r\n\r\n            serverAddress: this.connection.serverAddress()\r\n        };\r\n    }\r\n}\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\nfunction randomName() {\r\n    const firstNameLength = randomInteger(5, 12);\r\n    const lastNameLength = randomInteger(5, 12);\r\n    let firstName = \"\";\r\n    let lastName = \"\";\r\n\r\n    for (let i = 0; i < firstNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        firstName += newLetter;\r\n    }\r\n\r\n    for (let i = 0; i < lastNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        lastName += newLetter;\r\n    }\r\n\r\n    return `${firstName} ${lastName}`;\r\n}\r\n\r\nexport type CharacterJson = {\r\n    name: string,\r\n    player: string,\r\n    age: number,\r\n    vice: string,\r\n    virtue: string,\r\n    origins: string,\r\n    gender: string,\r\n    concept: string,\r\n    chronicle: string,\r\n\r\n    intelligence: number,\r\n    strength: number,\r\n    presence: number,\r\n    wits: number,\r\n    dexterity: number,\r\n    manipulation: number,\r\n    resolve: number,\r\n    stamina: number,\r\n    composure: number,\r\n\r\n    academics: number,\r\n    robotics: number,\r\n    crafts: number,\r\n    investigation: number,\r\n    medicine: number,\r\n    occult: number,\r\n    politics: number,\r\n    science: number,\r\n\r\n    athletics: number,\r\n    brawl: number,\r\n    drive: number,\r\n    ranged: number,\r\n    larceny: number,\r\n    stealth: number,\r\n    survival: number,\r\n    weaponry: number,\r\n\r\n    animalKen: number,\r\n    empathy: number,\r\n    expression: number,\r\n    intimidation: number,\r\n    persuasion: number,\r\n    socialize: number,\r\n    streetwise: number,\r\n    subterfuge: number,\r\n\r\n    merits: Array<{ name: string, value: number }>,\r\n    spells: Array<{ name: string, value: number }>,\r\n    flaws: Array<{ name: string, value: number }>,\r\n\r\n    size: number,\r\n    armor: number,\r\n    experience: number,\r\n    morality: number,\r\n\r\n    weapons: Array<{ name: string, description: string }>,\r\n    equipment: Array<{ name: string, description: string }>,\r\n    inventory: Array<{ name: string, description: string, quantity: number }>,\r\n\r\n    notes: Array<string>,\r\n\r\n    bashing?: number,\r\n    lethal?: number,\r\n    aggravated?: number,\r\n\r\n    usedMagic?: number,\r\n    usedWillpower?: number,\r\n\r\n    serverAddress: string\r\n};","import CommandStack from \"../Command/CommandStack\";\r\nimport AttributeCommand from \"../Command/AttributeCommand\";\r\nimport BatchCommand from \"../Command/BatchCommand\";\r\n\r\nexport default class Damage {\r\n    public totalHealth: KnockoutComputed<number>;\r\n    public bashing: KnockoutObservable<number>;\r\n    public lethal: KnockoutObservable<number>;\r\n    public aggravated: KnockoutObservable<number>;\r\n\r\n    public constructor(totalHealthObservable: KnockoutComputed<number>, bashing?: number, lethal?: number, aggravated?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.totalHealth = totalHealthObservable;\r\n        this.bashing = ko.observable(bashing || 0);\r\n        this.lethal = ko.observable(lethal || 0);\r\n        this.aggravated = ko.observable(aggravated || 0);\r\n\r\n        if (locked) {\r\n            this.bashing = this.bashing.extend({ lockable: locked });\r\n            this.lethal = this.lethal.extend({ lockable: locked });\r\n            this.aggravated = this.aggravated.extend({ lockable: locked });\r\n        }\r\n\r\n        totalHealthObservable.subscribe(val => {\r\n            let bashing = this.bashing();\r\n            let lethal = this.lethal();\r\n            let aggravated = this.aggravated();\r\n            while (bashing + lethal + aggravated > val) {\r\n                if (bashing > 0) {\r\n                    bashing--;\r\n                }\r\n                else if (lethal > 0) {\r\n                    lethal--;\r\n                }\r\n                else {\r\n                    aggravated--;\r\n                }\r\n            }\r\n            CommandStack.instance.executeWithPrevious(new BatchCommand(\r\n                new AttributeCommand(this.bashing, bashing, this.bashing()),\r\n                new AttributeCommand(this.lethal, lethal, this.lethal()),\r\n                new AttributeCommand(this.aggravated, aggravated, this.aggravated())\r\n            ));\r\n        }, this);\r\n    }\r\n\r\n    public anyEmpty(): boolean {\r\n        return this.bashing() + this.lethal() + this.aggravated() < this.totalHealth();\r\n    }\r\n\r\n    public addBashing(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.bashing, this.bashing() + 1, this.bashing()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addLethal(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addAggravated(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public clearAll(): void {\r\n        CommandStack.instance.execute(new BatchCommand(\r\n            new AttributeCommand(this.bashing, 0, this.bashing()),\r\n            new AttributeCommand(this.lethal, 0, this.lethal()),\r\n            new AttributeCommand(this.aggravated, 0, this.aggravated())\r\n        ));\r\n    }\r\n}","export default class Equipment {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n\r\n    public constructor(name?: string, description?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Equipment(null, null, locked);\r\n    }\r\n}","export default class InventoryItem {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n    public quantity: KnockoutObservable<number>;\r\n    public displayText: KnockoutComputed<string>;\r\n\r\n    public constructor(name?: string, description?: string, quantity?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n        this.quantity = ko.observable(quantity || 1);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n            this.quantity = this.quantity.extend({ lockable: locked });\r\n        }\r\n\r\n        this.displayText = ko.computed(this.getDisplayText, this);\r\n    }\r\n\r\n    public getDisplayText() : string {\r\n        return `${this.quantity()} ${this.name()}`;\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new InventoryItem(null, null, null, locked);\r\n    }\r\n}","export default class Merit {\r\n    public name: KnockoutObservable<string>;\r\n    public value: KnockoutObservable<number>;\r\n\r\n    public constructor(name?: string, value?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.value = ko.observable(value || 0);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Merit(null, null, locked);\r\n    }\r\n}","export default class Note {\r\n    public value: KnockoutObservable<string>;\r\n\r\n    public constructor(value?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.value = ko.observable(value || \"\");\r\n\r\n        if (locked) {\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Note(null, locked);\r\n    }\r\n}","import ICharacterRepository from \"./ICharacterRepository\";\r\nimport Character, { CharacterJson } from \"../Character\";\r\n\r\n$.cookie.json = true;\r\nconst characterCookiePrefix = \"_character-\";\r\nconst characterListCookieKey = \"_characters\";\r\nexport default class CookieCharacterRepository implements ICharacterRepository {\r\n    private _characterIds: number[];\r\n\r\n    public constructor() {\r\n        this._characterIds = [];\r\n    }\r\n\r\n    public loadCharacters(): Character[] {\r\n        const characters: CharacterJson[] = [];\r\n\r\n        this._characterIds = $.cookie(characterListCookieKey);\r\n        if (!this._characterIds) this._characterIds = [];\r\n\r\n        for (let characterId of this._characterIds) {\r\n            const key = `${characterCookiePrefix}${characterId}`;\r\n            characters.push($.cookie(key));\r\n        }\r\n\r\n        return characters.map(Character.fromJson);\r\n    }\r\n\r\n    public saveCharacters(characters: Character[]): boolean {\r\n        for (let oldId of this._characterIds) {\r\n            $.removeCookie(`${characterCookiePrefix}${oldId}`);\r\n        }\r\n        this._characterIds = [];\r\n\r\n        for (let i = 0; i < characters.length; i++) {\r\n            this._characterIds.push(i);\r\n            $.cookie(`${characterCookiePrefix}${i}`, characters[i].toJson());\r\n        }\r\n\r\n        $.cookie(characterListCookieKey, this._characterIds);\r\n\r\n        return true;\r\n    }\r\n}","import ICharacterRepository from \"./ICharacterRepository\";\r\nimport Character from \"../Character\";\r\n\r\n// This does nothing. It shouldn't actually be used when the project is finished.\r\nexport default class DummyCharacterRepository implements ICharacterRepository {\r\n    public loadCharacters(): Character[] { return []; }\r\n    public saveCharacters(characters: Character[]): boolean { return true; }\r\n}","import Character from \"../Character\";\r\nimport LocalStorageCharacterRepository from \"./LocalStorageCharacterRepository\";\r\nimport DummyCharacterRepository from \"./DummyCharacterRepository\";\r\nimport CookieCharacterRepository from \"./CookieCharacterRepository\";\r\n\r\nexport default interface ICharacterRepository {\r\n    loadCharacters(): Character[];\r\n    saveCharacters(characters: Character[]): boolean;\r\n}\r\n\r\nexport function getCharacterRepository(type: string, ...args: any[]): ICharacterRepository {\r\n    switch (type) {\r\n        case \"Dummy\": return new DummyCharacterRepository();\r\n        case \"LocalStorage\":\r\n            if (LocalStorageCharacterRepository.IsSupported) return new LocalStorageCharacterRepository();\r\n            else {\r\n                swal({\r\n                    title: `Local Storage Not Supported`,\r\n                    text: \"Your browser does not support local storage. This just means we have to use cookies to save your characters, which are not as safe as far as maintaining them. You should make sure to use the download button for each character before ending your session to ensure you have them backed up.\",\r\n                    icon: \"warning\",\r\n                    button: \"OK\",\r\n                    dangerMode: true\r\n                });\r\n            }\r\n            break;\r\n        // TODO: Maybe add a swal warning here.\r\n        case \"Cookie\": return new CookieCharacterRepository();\r\n    }\r\n\r\n    return new CookieCharacterRepository();\r\n}","import ICharacterRepository from \"./ICharacterRepository\";\r\nimport Character from \"../Character\";\r\n\r\nconst storageKey = \"characters\";\r\nexport default class LocalStorageCharacterRepository implements ICharacterRepository {\r\n    public loadCharacters(): Character[] {\r\n        return (JSON.parse(window.localStorage.getItem(storageKey)) || []).map(Character.fromJson);\r\n    }\r\n\r\n    public saveCharacters(characters: Character[]): boolean {\r\n        window.localStorage.setItem(\"characters\", JSON.stringify(characters.map(c => c.toJson())));\r\n        return true;\r\n    }\r\n\r\n    public static get IsSupported(): boolean {\r\n        const test = \"test\";\r\n        try {\r\n            window.localStorage.setItem(test, test);\r\n            window.localStorage.removeItem(test);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class AttributeCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _newValue: number;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>, newValue: number, oldValue: number) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public getType(): string { return \"AttributeCommand\"; }\r\n    public toString(): string {\r\n        return `${this._observable.getName()}: ${this._oldValue} => ${this._newValue}`;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class BatchCommand implements ICommand {\r\n    private _commands: ICommand[];\r\n\r\n    public constructor(...commands: ICommand[]) {\r\n        this._commands = commands.filter(command => !command.doesNothing());\r\n    }\r\n\r\n    public get commandCount(): number { return this._commands.length; }\r\n\r\n    public getType(): string { return \"BatchCommand\"; }\r\n\r\n    public getCommand(index: number): ICommand | null {\r\n        if (index < 0 || index >= this._commands.length) return null;\r\n\r\n        return this._commands[index];\r\n    }\r\n\r\n    public execute(): void {\r\n        for (let i = 0; i < this._commands.length; i++) this._commands[i].execute();\r\n    }\r\n\r\n    public undo(): void {\r\n        for (let i = this._commands.length - 1; i >= 0; i--) this._commands[i].undo();\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._commands.every(command => command.doesNothing());\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class ClearUsedCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>) {\r\n        this._observable = observable;\r\n        this._oldValue = observable();\r\n    }\r\n\r\n    public getType(): string { return \"ClearUsedCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable(0);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._oldValue === 0;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionAddCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _newItem: T;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, newItem: T) {\r\n        this._observable = observable;\r\n        this._newItem = newItem;\r\n    }\r\n\r\n    public getType(): string { return \"CollectionAddCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable.push(this._newItem);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.remove(this._newItem);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionMoveCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _item: T;\r\n    private _newIndex: number;\r\n    private _oldIndex: number;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, item: T, newIndex: number, oldIndex: number) {\r\n        this._observable = observable;\r\n        this._item = item;\r\n        this._newIndex = newIndex;\r\n        this._oldIndex = oldIndex;\r\n    }\r\n\r\n    public getType(): string { return \"CollectionMoveCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable.splice(this._oldIndex, 1);\r\n        this._observable.splice(this._newIndex, 0, this._item);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.splice(this._newIndex, 1);\r\n        this._observable.splice(this._oldIndex, 0, this._item);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newIndex === this._oldIndex;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionRemoveCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _item: T;\r\n    private _itemIndex: number;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, item: T) {\r\n        this._observable = observable;\r\n        this._item = item;\r\n        this._itemIndex = this._observable.indexOf(this._item);\r\n    }\r\n\r\n    public getType(): string { return \"CollectionRemoveCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable.remove(this._item);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.splice(this._itemIndex, 0, this._item);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\nimport BatchCommand from \"./BatchCommand\";\r\n\r\nexport default class CommandStack {\r\n    private static _instance: CommandStack;\r\n    \r\n    private _undoStack: KnockoutObservableArray<ICommand>;\r\n    private _redoStack: KnockoutObservableArray<ICommand>;\r\n    private _currentlyExecuting: boolean;\r\n\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n\r\n    private constructor() {\r\n        this._undoStack = ko.observableArray([]);\r\n        this._redoStack = ko.observableArray([]);\r\n        this._currentlyExecuting = false;\r\n\r\n        this.canUndo = ko.computed(() => this.undoLength > 0, this);\r\n        this.canRedo = ko.computed(() => this.redoLength > 0, this);\r\n    }\r\n\r\n    public static get instance(): CommandStack {\r\n        if (!CommandStack._instance) CommandStack._instance = new CommandStack();\r\n\r\n        return CommandStack._instance;\r\n    }\r\n\r\n    public get undoLength(): number { return this._undoStack().length; }\r\n    public get redoLength(): number { return this._redoStack().length; }\r\n\r\n    public getPreviousCommand(drillIntoBatch: boolean = false): ICommand {\r\n        let previousCommand = this._undoStack()[this.undoLength - 1];\r\n\r\n        if (!drillIntoBatch) return previousCommand;\r\n\r\n        while (previousCommand instanceof BatchCommand) {\r\n            previousCommand = previousCommand.getCommand(previousCommand.commandCount - 1);\r\n        }\r\n\r\n        return previousCommand;\r\n    }\r\n\r\n    // TODO: Maybe don't have this as singleton...\r\n    // Could have an instance for each character\r\n    // to preserve the stack across character selection\r\n    public reset(): void {\r\n        this._undoStack.removeAll();\r\n        this._redoStack.removeAll();\r\n    }\r\n\r\n    public execute(command: ICommand): void {\r\n        if (command.doesNothing()) return;\r\n\r\n        if (this._currentlyExecuting) {\r\n            window.setTimeout(() => this.execute(command), 1);\r\n            return;\r\n        }\r\n\r\n        this._currentlyExecuting = true;\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n        this._redoStack.removeAll();\r\n        this._currentlyExecuting = false;\r\n    }\r\n\r\n    public executeWithPrevious(command: ICommand): void {\r\n        if (command.doesNothing()) return;\r\n\r\n        if (this._currentlyExecuting) {\r\n            window.setTimeout(() => this.executeWithPrevious(command), 1);\r\n            return;\r\n        }\r\n\r\n        this._currentlyExecuting = true;\r\n        command.execute();\r\n        let previousCommand = this._undoStack.pop();\r\n        this._undoStack.push(new BatchCommand(previousCommand, command));\r\n        this._redoStack.removeAll();\r\n        this._currentlyExecuting = false;\r\n    }\r\n\r\n    public undo(): void {\r\n        if (this._undoStack().length === 0) return;\r\n        \r\n        const command = this._undoStack.pop();\r\n\r\n        command.undo();\r\n        this._redoStack.push(command);\r\n    }\r\n\r\n    public redo(): void {\r\n        if (this._redoStack().length === 0) return;\r\n\r\n        const command = this._redoStack.pop();\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n    }\r\n\r\n    public log(): void {\r\n        console.log(\"UNDO STACK:\");\r\n        console.log(this._undoStack());\r\n        console.log(\"REDO STACK:\");\r\n        console.log(this._redoStack());\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class TextInputCommand implements ICommand {\r\n    private _observable: KnockoutObservable<string>;\r\n    private _newValue: string;\r\n    private _oldValue: string;\r\n\r\n    public constructor(observable: KnockoutObservable<string>, newValue: string, oldValue: string) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public getType(): string { return \"TextInputCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void  {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import Character from \"./Character/Character\";\r\n\r\nexport default class Connection {\r\n    private _character: Character;\r\n    private _connection: WebSocket;\r\n    private _clientId: number;\r\n    \r\n    public serverAddress: KnockoutObservable<string>;\r\n    public connected: KnockoutObservable<boolean>;\r\n    public users: KnockoutObservableArray<{ id: number, screenName: string }>;\r\n    public chatWindows: KnockoutObservableArray<ChatWindow>;\r\n    public connectButtonText: KnockoutComputed<string>;\r\n\r\n    public constructor(character: Character, serverAddress: string) {\r\n        this._character = character;\r\n        \r\n        this.serverAddress = ko.observable(serverAddress);\r\n        this.connected = ko.observable(false);\r\n        this.users = ko.observableArray([]);\r\n        this.chatWindows = ko.observableArray([]);\r\n        this.connectButtonText = ko.computed(() => this.connected() ? \"Disconnect\" : \"Connect\", this);\r\n\r\n        WebsocketSetup.Setup();\r\n    }\r\n\r\n    public connect(): void {\r\n        if (this.connected()) return;\r\n        this._connection = new WebSocket(`ws://${this.serverAddress()}:3001`);\r\n\r\n        this._connection.addEventListener(\"open\", () => {\r\n            this.connected(true);\r\n            this._connection.send(JSON.stringify({\r\n                type: \"init\",\r\n                value: {\r\n                    name: this._character.name(),\r\n                    utc42069: Date.UTC(69, 4, 20)\r\n                }\r\n            }));\r\n        });\r\n\r\n        this._connection.addEventListener(\"error\", error => {\r\n            // TODO: Display to the user\r\n            console.error(\"Could not connect to the chat server.\");\r\n        });\r\n\r\n        this._connection.addEventListener(\"message\", message => {\r\n            try {\r\n                const json = JSON.parse(message.data);\r\n                if (json.type === \"info\") {\r\n                    for (let window of this.chatWindows()) {\r\n                        if (!json.message.rooms.some((r: number) => r === window.id)) continue;\r\n                        window.messages.push(new SimpleMessage(json.message.messageText));\r\n                    }\r\n                }\r\n                else if (json.type === \"init\") {\r\n                    this._clientId = json.message.id;\r\n                    this.users.push(...json.message.users);\r\n                    this.chatWindows.push(new ChatWindow(json.message.rooms[0]));\r\n                }\r\n                else if (json.type === \"newUser\") {\r\n                    this.users.push(json.message);\r\n                }\r\n                else if (json.type === \"message\") {\r\n                    for (let window of this.chatWindows()) {\r\n                        if (window.id !== json.message.roomId) continue;\r\n                        window.messages.push(new UserMessage(this.getUserScreenName(json.message.id), json.message.messageText, json.timestamp));\r\n                    }\r\n                }\r\n                else if (json.type === \"disconnect\") {\r\n                    const oldUser = this.users().filter(u => u.id === json.message)[0];\r\n                    this.users.remove(oldUser);\r\n                }\r\n                else if (json.type === \"error\") {\r\n                    console.log(json.message);\r\n                }\r\n            }\r\n            catch (e) {\r\n                console.error(`Message format unexpected: ${message.data}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    public disconnect(): void {\r\n        if (!this.connected()) return;\r\n\r\n        this._connection.close();\r\n        this.connected(false);\r\n        this._connection = null;\r\n        this.users.removeAll();\r\n        this.chatWindows.removeAll();\r\n        console.info(\"Disconnected from chat server.\");\r\n    }\r\n\r\n    public sendMessage(message: string): void {\r\n        if (!this.connected()) return;\r\n\r\n        // TODO: hardcoded roomId\r\n        this._connection.send(JSON.stringify({ type: \"message\", value: message, roomId: 0 }));\r\n    }\r\n\r\n    public connectButtonClick(): void {\r\n        if (this.connected()) this.disconnect();\r\n        else this.connect();\r\n    }\r\n\r\n    private getUserScreenName(id: number): string {\r\n        const user = this.users().filter(u => u.id === id)[0];\r\n        return user.screenName;\r\n    }\r\n}\r\n\r\nclass WebsocketSetup {\r\n    private static _setupCompleted = false;\r\n\r\n    private constructor() {}\r\n\r\n    public static Setup(): void {\r\n        if (WebsocketSetup._setupCompleted) return;\r\n        window.WebSocket = window.WebSocket || window.MozWebSocket;\r\n        WebsocketSetup._setupCompleted = true;\r\n    }\r\n}\r\n\r\nclass ChatWindow {\r\n    private _id: number;\r\n\r\n    public messages: KnockoutObservableArray<Message>;\r\n    public domID: KnockoutObservable<string>;\r\n    public domHref: KnockoutComputed<string>;\r\n    public domClass: KnockoutObservable<string>;\r\n    public domText: KnockoutObservable<string>;\r\n\r\n    public constructor(id: number) {\r\n        this._id = id;\r\n        this.messages = ko.observableArray([]);\r\n        this.domID = ko.observable(`chat${id}`);\r\n        this.domHref = ko.computed(() => `#${this.domID()}`, this);\r\n        this.domClass = ko.observable(\"\");\r\n        this.domText = ko.observable(\"TODO\"); // TODO:\r\n    }\r\n\r\n    public get id(): number { return this._id; }\r\n}\r\n\r\n// TODO: messageText may not need to be observable, unless I plan to allow\r\n// editing them after the fact. Probably will so I'll probably leave this in.\r\n// TODO: Thinking about maybe just having the server pass back messages already formatted.\r\n// But then again the timestamps would be off. Think about this.\r\n// TODO: Need a property here to determine how to draw the message essentially.\r\nabstract class Message {\r\n    public abstract messageText: KnockoutObservable<string>;\r\n}\r\n\r\nclass SimpleMessage extends Message {\r\n    public messageText: KnockoutObservable<string>;\r\n\r\n    public constructor(text: string) {\r\n        super();\r\n\r\n        this.messageText = ko.observable(text);\r\n    }\r\n}\r\n\r\nclass UserMessage extends Message {\r\n    public messageText: KnockoutObservable<string>;\r\n\r\n    public constructor(screenName: string, text: string, timestamp: number) {\r\n        super();\r\n\r\n        this.messageText = ko.observable(`${this.formatTimestamp(timestamp)} ${screenName}: ${text}`);\r\n    }\r\n\r\n    private formatTimestamp(timestamp: number): string {\r\n        const t = new Date(timestamp);\r\n\r\n        let hours = t.getHours();\r\n        let hoursPrefix = \"\";\r\n\r\n        if (hours > 12) hours -= 12;\r\n        if (hours === 0) hours = 12;\r\n        if (Math.floor(hours / 10) === 0) hoursPrefix = \"0\";\r\n\r\n        let minutes = t.getMinutes();\r\n        let minutesPrefix = \"\";\r\n        if (Math.floor(minutes / 10) === 0) minutesPrefix = \"0\";\r\n\r\n        return `[${hoursPrefix}${hours}:${minutesPrefix}${minutes}]`;\r\n    }\r\n}","import { randomFloat, randomInteger } from \"./utils\";\r\n\r\nexport default class Dice {\r\n    public dicePool: KnockoutObservable<number>;\r\n    public rollRounds: KnockoutObservableArray<Array<number>>;\r\n    public rollingInProgress: KnockoutObservable<boolean>;\r\n    public totalDiceSuccesses: KnockoutComputed<number>;\r\n    public totalDiceSuccessesDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        this.dicePool = ko.observable(1);\r\n        this.rollRounds = ko.observableArray([]);\r\n        this.rollingInProgress = ko.observable(false);\r\n        this.totalDiceSuccesses = ko.computed(() => {\r\n            if (this.rollingInProgress() || this.rollRounds().length === 0) return -1;\r\n\r\n            return this.rollRounds().reduce((total: number, r: Array<number>) => {\r\n                return total + r.reduce((total: number, d: number) => total + (d > 7 ? 1 : 0), 0);\r\n            }, 0);\r\n        }, this);\r\n        this.totalDiceSuccessesDisplay = ko.computed(() => {\r\n            return this.totalDiceSuccesses() >= 0 ? \"\" + this.totalDiceSuccesses() : \"???\";\r\n        }, this);\r\n    }\r\n\r\n    public incrementDicePool(amount: number): () => void {\r\n        return () => {\r\n            let newAmount = this.dicePool() + amount;\r\n            if (newAmount < 1) newAmount = 1;\r\n            this.dicePool(newAmount);\r\n        };\r\n    }\r\n\r\n    public rollDice(): void {\r\n        const roller = new RollState(this);\r\n        roller.beginRoll();\r\n    }\r\n}\r\n\r\nclass RollState {\r\n    private _diceObj: Dice;\r\n    private _currentRound: number;\r\n    private _currentDice: number;\r\n    private _currentRoundRolls: number;\r\n    private _currentRoundResults: Array<number>;\r\n    private _nextRoundRolls: number;\r\n    private _intervalHandle: number;\r\n\r\n    public constructor(diceObj: Dice) {\r\n        this._diceObj = diceObj;\r\n        this._currentRound = 0;\r\n        this._currentDice = 0;\r\n        this._currentRoundRolls = diceObj.dicePool();\r\n        this._currentRoundResults = [];\r\n        this._nextRoundRolls = 0;\r\n        this._intervalHandle = null;\r\n    }\r\n\r\n    public beginRoll(): void {\r\n        this._diceObj.rollingInProgress(true);\r\n        this._diceObj.rollRounds.removeAll();\r\n        for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n        this._diceObj.rollRounds.push(this._currentRoundResults);\r\n\r\n        this._intervalHandle = window.setInterval(() => {\r\n            const nextRoll = randomInteger(1, 11);\r\n            if (nextRoll === 10) {\r\n                this._nextRoundRolls++;\r\n                const diceContainer = document.getElementsByClassName(\"diceContainer\")[0];\r\n                const critMessage = document.createElement(\"div\");\r\n                critMessage.classList.add(\"crit-message\");\r\n                critMessage.innerText = \"Crit!\";\r\n                critMessage.id = \"critMessage\";\r\n                diceContainer.appendChild(critMessage);\r\n                window.setTimeout(() => diceContainer.removeChild(critMessage), 1010);\r\n            }\r\n            this._currentRoundResults[this._currentDice] = nextRoll;\r\n            this._diceObj.rollRounds.replace(this._diceObj.rollRounds()[this._currentRound], this._currentRoundResults);\r\n            this._currentDice++;\r\n\r\n            if (this._currentDice === this._currentRoundRolls) {\r\n                if (this._nextRoundRolls === 0) {\r\n                    window.clearInterval(this._intervalHandle);\r\n                    this._diceObj.rollingInProgress(false);\r\n                    const critMessage = document.getElementById(\"critMessage\");\r\n                    if (critMessage) {\r\n                        critMessage.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                else {\r\n                    this._currentRound++;\r\n                    this._currentRoundRolls = this._nextRoundRolls;\r\n                    this._nextRoundRolls = 0;\r\n                    this._currentDice = 0;\r\n                    this._currentRoundResults = [];\r\n                    for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n                    this._diceObj.rollRounds.push(this._currentRoundResults);\r\n                }\r\n            }\r\n        }, 100);\r\n    }\r\n}","const _keyboardCommands = new Map<string, () => void>();\r\nexport function registerKeyboardCommand(key: string, callback: () => void): void {\r\n    _keyboardCommands.set(key, callback);\r\n}\r\n\r\nwindow.addEventListener(\"keydown\", e => {\r\n    if (e.ctrlKey !== true) return;\r\n\r\n    for (let [key, callback] of _keyboardCommands.entries()) {\r\n        if (e.key === key) {\r\n            e.preventDefault();\r\n            callback();\r\n            return;\r\n        }\r\n    }\r\n});","import Application from \"./Application\";\r\nimport Equipment from \"./Character/Equipment\";\r\nimport InventoryItem from \"./Character/InventoryItem\";\r\nimport Merit from \"./Character/Merit\";\r\nimport Note from \"./Character/Note\";\r\nimport { applyCustomKnockoutCode } from \"./utils\";\r\n\r\napplyCustomKnockoutCode();\r\n\r\nconst constructors = {\r\n    Equipment: Equipment,\r\n    InventoryItem: InventoryItem,\r\n    Merit: Merit,\r\n    Note: Note\r\n};\r\nObject.defineProperty(window, \"constructors\", { value: constructors });\r\n\r\nconst app = new Application();\r\nko.applyBindings(app);\r\n\r\n// Exposing the view model to the global state in case manual changes need to be applied\r\nObject.defineProperty(window, \"app\", { value: app });\r\n\r\nfunction toggleTooltips(enable: boolean): void {\r\n    if (enable) $(\"[data-toggle='tooltip']\").tooltip();\r\n    else $(\"[data-toggle='tooltip']\").tooltip(\"dispose\");\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    toggleTooltips(window.outerWidth >= 992);\r\n});\r\ntoggleTooltips(window.outerWidth >= 992);","import Damage from \"./Character/Damage\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\nimport AttributeCommand from \"./Command/AttributeCommand\";\r\nimport TextInputCommand from \"./Command/TextInputCommand\";\r\nimport MenuBar from \"./MenuBar\";\r\n\r\nexport function randomInteger(minInclusive = 0, maxExclusive = 10): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function randomFloat(minInclusive = 0, maxExclusive = 1): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.random() * (maxExclusive - minInclusive) + minInclusive;\r\n}\r\n\r\nconst _observableNameMap = new Map<KnockoutObservable<any>, string>();\r\nexport function applyCustomKnockoutCode() {\r\n    applyKnockoutBindings();\r\n    applyKnockoutExtenders();\r\n    applyKnockoutCustomFunctions();\r\n}\r\n\r\nfunction applyKnockoutBindings() {\r\n    // ko.bindingHandlers.menuBar = {\r\n    //     init: (element: HTMLElement, valueAccessor: () => MenuBar) => {\r\n    //         const menuBar = valueAccessor();\r\n    //         for (let menu of menuBar.getMenus()) {\r\n    //             const dropdownLi = document.createElement(\"li\");\r\n    //             dropdownLi.classList.add(\"nav-item\");\r\n    //             dropdownLi.classList.add(\"dropdown\");\r\n\r\n    //             const headerLink = document.createElement(\"a\");\r\n    //             headerLink.classList.add(\"nav-link\");\r\n    //             headerLink.classList.add(\"dropdown-toggle\");\r\n    //             headerLink.href = \"#\";\r\n    //             headerLink.dataset.toggle = \"dropdown\";\r\n    //             headerLink.innerText = menu.text;\r\n\r\n    //             const menuContainer = document.createElement(\"div\");\r\n    //             menuContainer.classList.add(\"dropdown-menu\");\r\n\r\n    //             for (let menuOption of menu.getMenuOptions()) {\r\n    //                 const optionLink = document.createElement(\"a\");\r\n    //                 optionLink.classList.add(\"dropdown-item\");\r\n    //                 if (!menuOption.visible()) optionLink.classList.add(\"disabled\");\r\n    //                 optionLink.href = \"#\";\r\n    //                 optionLink.innerText = menuOption.text;\r\n    //                 optionLink.addEventListener(\"click\", () => {\r\n    //                     if (menuOption.visible()) menuOption.callback();\r\n    //                 });\r\n\r\n    //                 menuContainer.appendChild(optionLink);\r\n\r\n    //                 menuOption.visible.subscribe(newVal => {\r\n    //                     optionLink.classList.toggle(\"disabled\", !newVal);\r\n    //                 });\r\n    //             }\r\n\r\n    //             dropdownLi.appendChild(headerLink);\r\n    //             dropdownLi.appendChild(menuContainer);\r\n    //             element.appendChild(dropdownLi);\r\n    //         }\r\n    //     }//,\r\n    //     // update: (element: HTMLElement, valueAccessor: () => KnockoutObservable<MenuBar>) => {\r\n    //     //     // element.innerHTML = \"\";\r\n            \r\n    //     // }\r\n    // }\r\n\r\n    ko.bindingHandlers.dice = {\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservableArray<Array<number>>) => {\r\n            const rollRounds = valueAccessor()();\r\n            if (rollRounds.length === 0) {\r\n                element.innerHTML = \"\";\r\n                return;\r\n            }\r\n    \r\n            let divs = element.getElementsByClassName(\"dice-round\");\r\n            if (divs.length !== rollRounds.length) {\r\n                const newRound = document.createElement(\"div\");\r\n                newRound.classList.add(\"dice-round\");\r\n                const rolls = rollRounds[rollRounds.length - 1];\r\n                for (let i = 0; i < rolls.length; i++) {\r\n                    const span = document.createElement(\"span\");\r\n                    const delay = randomFloat(0, 0.5);\r\n                    span.style.animation = `rollingDice 0.5s linear -${delay}s infinite alternate`;\r\n                    span.classList.add(\"dice\");\r\n                    newRound.appendChild(span);\r\n                }\r\n                element.appendChild(newRound);\r\n                divs = element.getElementsByClassName(\"dice-round\");\r\n            }\r\n    \r\n            for (let i = 0; i < rollRounds.length; i++) {\r\n                const rolls = rollRounds[i];\r\n                const spans = divs[i].getElementsByClassName(\"dice\");\r\n                for (let j = 0; j < rolls.length; j++) {\r\n                    const roll = rolls[j];\r\n                    const span = <HTMLSpanElement>spans[j];\r\n    \r\n                    if (roll !== -1) {\r\n                        span.style.animation = null;\r\n                        span.style.backgroundImage = `url('images/dice-${roll}.png')`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.damageDisplay = {\r\n        init: (element: HTMLElement) => {\r\n            for (let i = 0; i < 15; i++) {\r\n                const span = document.createElement(\"span\");\r\n                span.classList.add(\"damage\");\r\n                span.classList.add(\"none\");\r\n                element.appendChild(span);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => Damage) => {\r\n            const damageObj = valueAccessor();\r\n            const spans = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < spans.length; i++) {\r\n                if (i < damageObj.aggravated()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.add(\"aggravated\");\r\n                }\r\n                else if (i - damageObj.aggravated() < damageObj.lethal()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"lethal\");\r\n                }\r\n                else if (i - damageObj.aggravated() - damageObj.lethal() < damageObj.bashing()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"bashing\");\r\n                }\r\n                else {\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"none\");\r\n                }\r\n    \r\n                if (i < damageObj.totalHealth()) {\r\n                    spans[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else {\r\n                    spans[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.attribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, canClear?: boolean }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                dot.classList.add(\"pointer\");\r\n                dot.dataset.toggle = \"tooltip\";\r\n                dot.title = \"\" + (i + 1);\r\n                $(dot).tooltip();\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n    \r\n            const canClear = valueAccessor().canClear;\r\n            if (canClear === true || typeof canClear === \"undefined\") {\r\n                const clearDot = document.createElement(\"div\");\r\n                clearDot.classList.add(\"clear-dot\");\r\n                clearDot.innerHTML = \"&times;\";\r\n                clearDot.dataset.toggle = \"tooltip\";\r\n                clearDot.title = \"Clear\";\r\n                clearDot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, 0, valueAccessor().value()));\r\n                });\r\n                element.appendChild(clearDot);\r\n                $(clearDot).tooltip();\r\n            }\r\n    \r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                element.appendChild(dot);\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByClassName(\"attribute-dot\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                const dot = <HTMLSpanElement>dots[i];\r\n                dot.style.backgroundColor = null;\r\n                dot.style.borderColor = null;\r\n                if (i < value) {\r\n                    dot.style.backgroundColor = \"var(--body-color)\";\r\n                    dot.style.borderColor = \"var(--body-color)\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.readOnlyAttribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, hideUnfilled?: boolean }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                dots[i].classList.remove(\"filled\");\r\n                if (i < value) {\r\n                    dots[i].classList.add(\"filled\");\r\n                    dots[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else if (valueAccessor().hideUnfilled) {\r\n                    dots[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.used = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < 12; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const used = valueAccessor().value();\r\n            const total = valueAccessor().total();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                if (i < used) dots[i].classList.add(\"filled-red\");\r\n                else dots[i].classList.remove(\"filled-red\");\r\n    \r\n                if (i < total) dots[i].classList.remove(\"HIDDEN\");\r\n                else dots[i].classList.add(\"HIDDEN\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.focusOnCreation = {\r\n        init: (element: HTMLInputElement | HTMLTextAreaElement) => {\r\n            window.setTimeout(() => {\r\n                if (element.value) return;\r\n                element.focus();\r\n            }, 1);\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.contextMenu = {\r\n        init: (element: HTMLElement, valueAccessor: () => () => void) => {\r\n            element.addEventListener(\"contextmenu\", e => {\r\n                e.preventDefault();\r\n                valueAccessor()();\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.undoableTextInput = {\r\n        init: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            const inputElement = <HTMLInputElement>element;\r\n            inputElement.addEventListener(\"change\", () => {\r\n                const oldValue = valueAccessor()();\r\n                const newValue = inputElement.value;\r\n                if (oldValue === newValue) return;\r\n\r\n                valueAccessor()(newValue);\r\n                if (valueAccessor()() === oldValue) return;\r\n                valueAccessor()(oldValue);\r\n\r\n                CommandStack.instance.execute(new TextInputCommand(valueAccessor(), newValue, oldValue));\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            (<HTMLInputElement>element).value = valueAccessor()();\r\n        }\r\n    };\r\n}\r\nfunction applyKnockoutExtenders() {\r\n    ko.extenders.named = <T>(target: KnockoutObservable<T>, name: string) => {\r\n        // TODO: This requires that the `named` extension be the last one listed.\r\n        // It's messy and also inefficient because there will be multiple instances\r\n        // of the same observable property on a character equal to the number of\r\n        // characters the user has. I will need to come up with a different way,\r\n        // but for now this works as a proof of concept.\r\n        _observableNameMap.set(target, name);\r\n        return target;\r\n    };\r\n\r\n    ko.extenders.lockable = <T>(target: KnockoutObservable<T>, locked: KnockoutObservable<boolean>) => {\r\n        const result = ko.pureComputed({\r\n            read: target,\r\n            write: (newValue: T) => {\r\n                if (locked()) {\r\n                    target.notifySubscribers(target());\r\n                }\r\n                else {\r\n                    target(newValue);\r\n                    target.notifySubscribers(newValue);\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        return result;\r\n    };\r\n    \r\n    ko.extenders.numeric = (target: KnockoutObservable<number>, args: { precision?: number, min?: number, max?: number }) => {\r\n        const precision = args.precision || 0;\r\n        const min = args.min || -Infinity;\r\n        const max = args.max || Infinity;\r\n    \r\n        // Create a writeable computed observable to intercept writes to our observable\r\n        const result = ko.pureComputed({\r\n            read: target, // Always return the original observable's value\r\n            write: (newValue: number) => {\r\n                const current = target();\r\n                const roundingMultiplier = Math.pow(10, precision);\r\n                const newValueAsNum = isNaN(newValue) ? 0 : +newValue;\r\n                let valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\r\n                if (valueToWrite < min) valueToWrite = min;\r\n                else if (valueToWrite > max) valueToWrite = max;\r\n    \r\n                // Only write if it changed\r\n                if (valueToWrite !== current) {\r\n                    target(valueToWrite);\r\n                }\r\n                else {\r\n                    // If the rounded value is the same, but a different value was written,\r\n                    // force a notification for the current field\r\n                    if (newValue !== current) {\r\n                        target.notifySubscribers(valueToWrite);\r\n                    }\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        // Initialize with current value to make sure it is rounded appropriately\r\n        result(target());\r\n    \r\n        // Return the new computed observable\r\n        return result;\r\n    };\r\n}\r\nfunction applyKnockoutCustomFunctions() {\r\n    ko.subscribable.fn.getName = function () {\r\n        return _observableNameMap.get(this);\r\n    };\r\n}"]}