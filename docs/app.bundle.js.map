{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/Application.ts","src/ts/Character/Character.ts","src/ts/Character/Damage.ts","src/ts/Character/Equipment.ts","src/ts/Character/InventoryItem.ts","src/ts/Character/Merit.ts","src/ts/Character/Note.ts","src/ts/Command/AttributeCommand.ts","src/ts/Command/ClearUsedCommand.ts","src/ts/Command/CollectionAddCommand.ts","src/ts/Command/CollectionMoveCommand.ts","src/ts/Command/CollectionRemoveCommand.ts","src/ts/Command/CommandStack.ts","src/ts/Command/TextInputCommand.ts","src/ts/Dice.ts","src/ts/main.ts","src/ts/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Character_1","Dice_1","CommandStack_1","Application","prototype","toggleClock","this","showClock","goBack","mode","_previousSection","window","location","hash","newCharacter","newChar","default","locked","characters","push","selectCharacter","character","charIndex","indexOf","characterId","instance","reset","deleteCharacter","confirm","name","id","remove","saveCharacters","localStorage","setItem","JSON","stringify","realCharacters","map","toJson","alert","downloadCharacter","json","dl","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","uploadCharacter","_this","ul","type","accept","addEventListener","file","files","reader","FileReader","onload","target","result","fromJson","parse","readAsText","toggleCharacterLock","switchMode","getElementById","undo","canUndo","redo","canRedo","savedCharacters","getItem","unshift","ghost","ko","observable","observableArray","computed","filter","dice","lockButtonClass","lockButtonIcon","currentTime","Date","currentTimeDisplay","time","hours","getHours","minutes","getMinutes","seconds","getSeconds","suffix","setInterval","ctrlKey","key","preventDefault","substring","$domElement","$","scrollTop","offset","top","Damage_1","Equipment_1","InventoryItem_1","Merit_1","Note_1","utils_1","CollectionAddCommand_1","CollectionRemoveCommand_1","CollectionMoveCommand_1","ClearUsedCommand_1","Character","firstNameLength","randomInteger","lastNameLength","firstName","lastName","newLetter","alphabet","charAt","toUpperCase","randomName","player","age","vice","virtue","origins","gender","concept","chronicle","intelligence","strength","presence","wits","dexterity","manipulation","resolve","stamina","composure","academics","robotics","crafts","investigation","medicine","occult","politics","science","athletics","brawl","drive","ranged","larceny","stealth","survival","weaponry","animalKen","empathy","expression","intimidation","persuasion","socialize","streetwise","subterfuge","merits","spells","flaws","size","armor","experience","morality","weapons","equipment","inventory","notes","onComponentClick","_","currentTarget","getElementsByTagName","focus","newItem","constructor","execute","createLockable","removeItem","item","moveItem","direction","index","newIndex","clearUsed","usedObservable","bashing","damage","lethal","aggravated","usedMagic","usedWillpower","m","value","s","w","description","quantity","extend","lockable","numeric","precision","min","max","speed","defense","Math","initiative","health","magic","subscribe","val","willpower","Damage","anyEmpty","totalHealth","addBashing","addLethal","addAggravated","clearAll","totalHealthObservable","Equipment","InventoryItem","getDisplayText","displayText","Merit","Note","AttributeCommand","_observable","_newValue","_oldValue","doesNothing","newValue","oldValue","ClearUsedCommand","CollectionAddCommand","_newItem","CollectionMoveCommand","splice","_oldIndex","_newIndex","_item","oldIndex","CollectionRemoveCommand","_itemIndex","CommandStack","Object","defineProperty","_instance","_undoStack","removeAll","_redoStack","command","pop","TextInputCommand","Dice","incrementDicePool","amount","newAmount","dicePool","rollDice","RollState","beginRoll","rollRounds","rollingInProgress","totalDiceSuccesses","reduce","total","d","totalDiceSuccessesDisplay","_diceObj","_currentRoundRolls","_currentRoundResults","_intervalHandle","nextRoll","_nextRoundRolls","diceContainer_1","getElementsByClassName","critMessage_1","classList","add","innerText","setTimeout","_currentDice","replace","_currentRound","clearInterval","critMessage","diceObj","Application_1","applyCustomKnockoutCode","constructors","app","toggleTooltips","enable","tooltip","applyBindings","outerWidth","AttributeCommand_1","TextInputCommand_1","randomFloat","minInclusive","maxExclusive","_a","random","floor","bindingHandlers","update","element","valueAccessor","divs","newRound","rolls","span","delay","animation","spans","j","roll","backgroundImage","innerHTML","damageDisplay","init","damageObj","attribute","dots","dot","dataset","toggle","title","forEach","canClear","clearDot","backgroundColor","borderColor","readOnlyAttribute","hideUnfilled","used","focusOnCreation","contextMenu","undoableTextInput","inputElement","extenders","pureComputed","read","write","notifySubscribers","notify","args","Infinity","current","roundingMultiplier","pow","newValueAsNum","isNaN","valueToWrite","round"],"mappings":"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","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Character from \"./Character/Character\";\r\nimport Dice from \"./Dice\";\r\nimport swal from \"sweetalert\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\n\r\nexport default class Application {\r\n    public mode: KnockoutObservable<string>;\r\n    public characterId: KnockoutObservable<number>;\r\n    public characters: KnockoutObservableArray<Character>;\r\n    public realCharacters: KnockoutComputed<Array<Character>>;\r\n    public character: KnockoutComputed<Character>;\r\n    public dice: Dice;\r\n    public lockButtonClass: KnockoutComputed<string>;\r\n    public lockButtonIcon: KnockoutComputed<string>;\r\n    private _previousSection: string;\r\n    public showClock: KnockoutObservable<boolean>;\r\n    public currentTime: KnockoutObservable<Date>;\r\n    public currentTimeDisplay: KnockoutComputed<string>;\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n\r\n    public constructor() {\r\n        const savedCharacters: Array<Character> = (JSON.parse(window.localStorage.getItem(\"characters\")) || []).map(Character.fromJson);\r\n        savedCharacters.unshift(Character.newCharacter());\r\n        savedCharacters[0].ghost = true;\r\n\r\n        this.mode = ko.observable(\"list\");\r\n        this.characterId = ko.observable(0);\r\n        this.characters = ko.observableArray(savedCharacters);\r\n        this.realCharacters = ko.computed(() => this.characters().filter(c => !c.ghost), this);\r\n        this.character = ko.computed(() => this.characters()[this.characterId()], this);\r\n        this.dice = new Dice();\r\n        this.lockButtonClass = ko.computed(() => this.character().locked() ? \"btn-danger\" : \"btn-outline-success\", this);\r\n        this.lockButtonIcon = ko.computed(() => this.character().locked() ? \"fas fa-lock\" : \"fas fa-lock-open\", this);\r\n        this._previousSection = null;\r\n        this.showClock = ko.observable(false);\r\n        this.currentTime = ko.observable(new Date());\r\n\r\n        this.currentTimeDisplay = ko.computed(() => {\r\n            const time = this.currentTime();\r\n            let hours = time.getHours();\r\n            const minutes = time.getMinutes();\r\n            const seconds = time.getSeconds();\r\n            const suffix = hours < 12 ? \"AM\" : \"PM\";\r\n            const minutePrefix = minutes < 10 ? \"0\" : \"\";\r\n            const secondPrefix = seconds < 10 ? \"0\" : \"\";\r\n            if (hours > 12) hours -= 12;\r\n            return `${hours}:${minutePrefix}${minutes}:${secondPrefix}${seconds} ${suffix}`;\r\n        }, this);\r\n\r\n        this.canUndo = ko.computed(() => CommandStack.instance.canUndo() && !this.character().locked(), this);\r\n        this.canRedo = ko.computed(() => CommandStack.instance.canRedo() && !this.character().locked(), this);\r\n\r\n        window.setInterval(() => {\r\n            this.currentTime(new Date());\r\n        }, 1000);\r\n\r\n        window.addEventListener(\"keydown\", e => {\r\n            if (e.ctrlKey !== true) return;\r\n\r\n            switch (e.key) {\r\n                case \"s\":\r\n                    e.preventDefault();\r\n                    this.saveCharacters();\r\n                    break;\r\n                case \"z\":\r\n                    e.preventDefault();\r\n                    this.undo();\r\n                    break;\r\n                case \"Z\":\r\n                    e.preventDefault();\r\n                    this.redo();\r\n                    break;\r\n            }\r\n        });\r\n\r\n        window.addEventListener(\"hashchange\", e => {\r\n            const hash = window.location.hash.substring(1);\r\n            if (!hash) return;\r\n\r\n            var offset = 80; // TODO: Don't hardcode this maybe?\r\n            var $domElement = $(`#${hash}`);\r\n            $(window).scrollTop($domElement.offset().top - offset);\r\n        });\r\n    }\r\n\r\n    public toggleClock(): void {\r\n        this.showClock(!this.showClock());\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.mode() === \"sheet\") this.mode(\"list\");\r\n        else {\r\n            this.mode(\"sheet\");\r\n\r\n            if (this._previousSection) window.location.hash = this._previousSection;\r\n        }\r\n    }\r\n\r\n    public newCharacter(): void {\r\n        const newChar = Character.newCharacter();\r\n        newChar.locked(false);\r\n        this.characters.push(newChar);\r\n        this.selectCharacter(newChar);\r\n    }\r\n\r\n    public selectCharacter(character: Character): void {\r\n        const charIndex = this.characters.indexOf(character);\r\n        if (this.characterId() !== charIndex) {\r\n            this.characterId(charIndex);\r\n            CommandStack.instance.reset();\r\n        }\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public deleteCharacter(character: Character): void {\r\n        // swal({\r\n        //     title: `Delete ${this.character().name()}`,\r\n        //     text: \"Are you sure? (As long as you don't save, your character won't be gone.)\",\r\n        //     icon: \"warning\",\r\n        //     buttons: [\"Cancel\", \"Delete\"],\r\n        //     dangerMode: true\r\n        // })\r\n        // .then((willDelete: boolean) => {\r\n        //     if (willDelete) {\r\n        //         const id = this.characterId();\r\n        //         this.characterId(0);\r\n        //         this.characters.remove(this.characters()[id]);\r\n        //         this.mode(\"list\");\r\n        //     }\r\n        // });\r\n        if (this.character().locked()) return;\r\n        if (confirm(`Are you sure you want to delete ${this.character().name()}? (As long as you don't save, your character won't be gone.)`)) {\r\n            const id = this.characterId();\r\n            this.characterId(0);\r\n            this.characters.remove(this.characters()[id]);\r\n            this.mode(\"list\");\r\n        }\r\n    }\r\n\r\n    public saveCharacters(): void {\r\n        window.localStorage.setItem(\"characters\", JSON.stringify(this.realCharacters().map(c => c.toJson())));\r\n        // swal(\"Characters saved successfully!\", {\r\n        //     buttons: [],\r\n        //     timer: 1000,\r\n        //     icon: \"success\"\r\n        // });\r\n        alert(\"Characters saved successfully!\");\r\n    }\r\n\r\n    public downloadCharacter(): void {\r\n        const json = JSON.stringify(this.character().toJson());\r\n\r\n        const dl = document.createElement(\"a\");\r\n        dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${encodeURIComponent(json)}`);\r\n        dl.setAttribute(\"download\", `${this.character().name()}.json`);\r\n\r\n        dl.style.display = \"none\";\r\n        document.body.appendChild(dl);\r\n\r\n        dl.click();\r\n\r\n        document.body.removeChild(dl);\r\n    }\r\n\r\n    public uploadCharacter(): void {\r\n        const ul = document.createElement(\"input\");\r\n        ul.type = \"file\";\r\n        ul.accept = \".json\";\r\n        ul.style.display = \"none\";\r\n\r\n        ul.addEventListener(\"change\", e => {\r\n            const file = ul.files[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const json = e.target.result;\r\n                this.characters.push(Character.fromJson(JSON.parse(json)));\r\n                this.characterId(this.characters().length - 1);\r\n                this.mode(\"sheet\");\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n\r\n        document.body.appendChild(ul);\r\n\r\n        ul.click();\r\n\r\n        document.body.removeChild(ul);\r\n    }\r\n\r\n    public toggleCharacterLock(): void {\r\n        const character = this.character();\r\n        character.locked(!character.locked());\r\n    }\r\n\r\n    public switchMode(mode: string): () => void {\r\n        return () => {\r\n            if (this.mode() !== \"list\" && document.getElementById(mode)) {\r\n                this._previousSection = mode;\r\n            }\r\n            else this._previousSection = null;\r\n\r\n            window.location.hash = \"\";\r\n            this.mode(mode);\r\n        }\r\n    }\r\n\r\n    public undo(): void {\r\n        if (!this.canUndo()) return;\r\n        CommandStack.instance.undo();\r\n    }\r\n\r\n    public redo(): void {\r\n        if (!this.canRedo()) return;\r\n        CommandStack.instance.redo();\r\n    }\r\n}","import Damage from \"./Damage\";\r\nimport Equipment from \"./Equipment\";\r\nimport InventoryItem from \"./InventoryItem\";\r\nimport Merit from \"./Merit\";\r\nimport Note from \"./Note\";\r\nimport { randomInteger } from \"../utils\";\r\nimport CommandStack from \"../Command/CommandStack\";\r\nimport CollectionAddCommand from \"../Command/CollectionAddCommand\";\r\nimport CollectionRemoveCommand from \"../Command/CollectionRemoveCommand\";\r\nimport CollectionMoveCommand from \"../Command/CollectionMoveCommand\";\r\nimport ClearUsedCommand from \"../Command/ClearUsedCommand\";\r\n\r\nexport default class Character {\r\n    public ghost: boolean = false;\r\n    public locked: KnockoutObservable<boolean> = ko.observable(true);\r\n\r\n    public name: KnockoutObservable<string>;\r\n    public player: KnockoutObservable<string>;\r\n    public age: KnockoutObservable<number>;\r\n    public vice: KnockoutObservable<string>;\r\n    public virtue: KnockoutObservable<string>;\r\n    public origins: KnockoutObservable<string>;\r\n    public gender: KnockoutObservable<string>;\r\n    public concept: KnockoutObservable<string>;\r\n    public chronicle: KnockoutObservable<string>;\r\n\r\n    public intelligence: KnockoutObservable<number>;\r\n    public strength: KnockoutObservable<number>;\r\n    public presence: KnockoutObservable<number>;\r\n    public wits: KnockoutObservable<number>;\r\n    public dexterity: KnockoutObservable<number>;\r\n    public manipulation: KnockoutObservable<number>;\r\n    public resolve: KnockoutObservable<number>;\r\n    public stamina: KnockoutObservable<number>;\r\n    public composure: KnockoutObservable<number>;\r\n\r\n    public academics: KnockoutObservable<number>;\r\n    public robotics: KnockoutObservable<number>;\r\n    public crafts: KnockoutObservable<number>;\r\n    public investigation: KnockoutObservable<number>;\r\n    public medicine: KnockoutObservable<number>;\r\n    public occult: KnockoutObservable<number>;\r\n    public politics: KnockoutObservable<number>;\r\n    public science: KnockoutObservable<number>;\r\n    \r\n    public athletics: KnockoutObservable<number>;\r\n    public brawl: KnockoutObservable<number>;\r\n    public drive: KnockoutObservable<number>;\r\n    public ranged: KnockoutObservable<number>;\r\n    public larceny: KnockoutObservable<number>;\r\n    public stealth: KnockoutObservable<number>;\r\n    public survival: KnockoutObservable<number>;\r\n    public weaponry: KnockoutObservable<number>;\r\n\r\n    public animalKen: KnockoutObservable<number>;\r\n    public empathy: KnockoutObservable<number>;\r\n    public expression: KnockoutObservable<number>;\r\n    public intimidation: KnockoutObservable<number>;\r\n    public persuasion: KnockoutObservable<number>;\r\n    public socialize: KnockoutObservable<number>;\r\n    public streetwise: KnockoutObservable<number>;\r\n    public subterfuge: KnockoutObservable<number>;\r\n\r\n    public merits: KnockoutObservableArray<Merit>;\r\n    public spells: KnockoutObservableArray<Merit>;\r\n    public flaws: KnockoutObservableArray<Merit>;\r\n\r\n    public size: KnockoutObservable<number>;\r\n    public speed: KnockoutComputed<number>;\r\n    public defense: KnockoutComputed<number>;\r\n    public armor: KnockoutObservable<number>;\r\n    public initiative: KnockoutComputed<number>;\r\n    public experience: KnockoutObservable<number>;\r\n    public morality: KnockoutObservable<number>;\r\n\r\n    public weapons: KnockoutObservableArray<Equipment>;\r\n    public equipment: KnockoutObservableArray<Equipment>;\r\n    public inventory: KnockoutObservableArray<InventoryItem>;\r\n\r\n    public notes: KnockoutObservableArray<Note>;\r\n\r\n    public health: KnockoutComputed<number>;\r\n    public damage: Damage;\r\n\r\n    public magic: KnockoutComputed<number>;\r\n    public usedMagic: KnockoutObservable<number>;\r\n\r\n    public willpower: KnockoutComputed<number>;\r\n    public usedWillpower: KnockoutObservable<number>;\r\n\r\n    public constructor(json: CharacterJson) {\r\n        this.name = ko.observable(json.name).extend({ lockable: this.locked });\r\n        this.player = ko.observable(json.player).extend({ lockable: this.locked });\r\n        this.age = ko.observable(json.age).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.vice = ko.observable(json.vice).extend({ lockable: this.locked });\r\n        this.virtue = ko.observable(json.virtue).extend({ lockable: this.locked });\r\n        this.origins = ko.observable(json.origins).extend({ lockable: this.locked });\r\n        this.gender = ko.observable(json.gender).extend({ lockable: this.locked });\r\n        this.concept = ko.observable(json.concept).extend({ lockable: this.locked });\r\n        this.chronicle = ko.observable(json.chronicle).extend({ lockable: this.locked });\r\n\r\n        this.intelligence = ko.observable(json.intelligence).extend({ lockable: this.locked });\r\n        this.strength = ko.observable(json.strength).extend({ lockable: this.locked });\r\n        this.presence = ko.observable(json.presence).extend({ lockable: this.locked });\r\n        this.wits = ko.observable(json.wits).extend({ lockable: this.locked });\r\n        this.dexterity = ko.observable(json.dexterity).extend({ lockable: this.locked });\r\n        this.manipulation = ko.observable(json.manipulation).extend({ lockable: this.locked });\r\n        this.resolve = ko.observable(json.resolve).extend({ lockable: this.locked });\r\n        this.stamina = ko.observable(json.stamina).extend({ lockable: this.locked });\r\n        this.composure = ko.observable(json.composure).extend({ lockable: this.locked });\r\n\r\n        this.academics = ko.observable(json.academics).extend({ lockable: this.locked });\r\n        this.robotics = ko.observable(json.robotics).extend({ lockable: this.locked });\r\n        this.crafts = ko.observable(json.crafts).extend({ lockable: this.locked });\r\n        this.investigation = ko.observable(json.investigation).extend({ lockable: this.locked });\r\n        this.medicine = ko.observable(json.medicine).extend({ lockable: this.locked });\r\n        this.occult = ko.observable(json.occult).extend({ lockable: this.locked });\r\n        this.politics = ko.observable(json.politics).extend({ lockable: this.locked });\r\n        this.science = ko.observable(json.science).extend({ lockable: this.locked });\r\n\r\n        this.athletics = ko.observable(json.athletics).extend({ lockable: this.locked });\r\n        this.brawl = ko.observable(json.brawl).extend({ lockable: this.locked });\r\n        this.drive = ko.observable(json.drive).extend({ lockable: this.locked });\r\n        this.ranged = ko.observable(json.ranged).extend({ lockable: this.locked });\r\n        this.larceny = ko.observable(json.larceny).extend({ lockable: this.locked });\r\n        this.stealth = ko.observable(json.stealth).extend({ lockable: this.locked });\r\n        this.survival = ko.observable(json.survival).extend({ lockable: this.locked });\r\n        this.weaponry = ko.observable(json.weaponry).extend({ lockable: this.locked });\r\n\r\n        this.animalKen = ko.observable(json.animalKen).extend({ lockable: this.locked });\r\n        this.empathy = ko.observable(json.empathy).extend({ lockable: this.locked });\r\n        this.expression = ko.observable(json.expression).extend({ lockable: this.locked });\r\n        this.intimidation = ko.observable(json.intimidation).extend({ lockable: this.locked });\r\n        this.persuasion = ko.observable(json.persuasion).extend({ lockable: this.locked });\r\n        this.socialize = ko.observable(json.socialize).extend({ lockable: this.locked });\r\n        this.streetwise = ko.observable(json.streetwise).extend({ lockable: this.locked });\r\n        this.subterfuge = ko.observable(json.subterfuge).extend({ lockable: this.locked });\r\n\r\n        this.merits = ko.observableArray(json.merits.map(m => new Merit(m.name, m.value, this.locked)));\r\n        this.spells = ko.observableArray(json.spells.map(s => new Merit(s.name, s.value, this.locked)));\r\n        this.flaws = ko.observableArray(json.flaws.map(f => new Merit(f.name, f.value, this.locked)));\r\n\r\n        this.size = ko.observable(json.size).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n        this.speed = ko.computed(() => this.strength() + this.dexterity() + 5, this);\r\n        this.defense = ko.computed(() => Math.min(this.dexterity(), this.wits()), this);\r\n        this.armor = ko.observable(json.armor).extend({ numeric: { precision: 0 } }).extend({ lockable: this.locked });\r\n        this.initiative = ko.computed(() => this.dexterity() + this.composure(), this);\r\n        this.experience = ko.observable(json.experience).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.morality = ko.observable(json.morality).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n\r\n        this.weapons = ko.observableArray(json.weapons.map(w => new Equipment(w.name, w.description, this.locked)));\r\n        this.equipment = ko.observableArray(json.equipment.map(e => new Equipment(e.name, e.description, this.locked)));\r\n        this.inventory = ko.observableArray(json.inventory.map(i => new InventoryItem(i.name, i.description, i.quantity, this.locked)));\r\n\r\n        this.notes = ko.observableArray(json.notes.map(n => new Note(n, this.locked)));\r\n\r\n        this.health = ko.computed(() => this.stamina() + this.size(), this);\r\n        this.damage = new Damage(this.health, json.bashing, json.lethal, json.aggravated, this.locked);\r\n\r\n        this.magic = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedMagic = ko.observable(json.usedMagic || 0).extend({ lockable: this.locked });\r\n        this.magic.subscribe(val => {\r\n            if (this.usedMagic() > val) this.usedMagic(val);\r\n        }, this);\r\n\r\n        this.willpower = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedWillpower = ko.observable(json.usedWillpower || 0).extend({ lockable: this.locked });\r\n        this.willpower.subscribe(val => {\r\n            if (this.usedWillpower() > val) this.usedWillpower(val);\r\n        }, this);\r\n    }\r\n\r\n    public static newCharacter(): Character {\r\n        return new Character({\r\n            name: randomName(),\r\n            player: \"\",\r\n            age: 0,\r\n            vice: \"\",\r\n            virtue: \"\",\r\n            origins: \"\",\r\n            gender: \"\",\r\n            concept: \"\",\r\n            chronicle: \"\",\r\n\r\n            intelligence: 1,\r\n            strength: 1,\r\n            presence: 1,\r\n            wits: 1,\r\n            dexterity: 1,\r\n            manipulation: 1,\r\n            resolve: 1,\r\n            stamina: 1,\r\n            composure: 1,\r\n\r\n            academics: 0,\r\n            robotics: 0,\r\n            crafts: 0,\r\n            investigation: 0,\r\n            medicine: 0,\r\n            occult: 0,\r\n            politics: 0,\r\n            science: 0,\r\n\r\n            athletics: 0,\r\n            brawl: 0,\r\n            drive: 0,\r\n            ranged: 0,\r\n            larceny: 0,\r\n            stealth: 0,\r\n            survival: 0,\r\n            weaponry: 0,\r\n\r\n            animalKen: 0,\r\n            empathy: 0,\r\n            expression: 0,\r\n            intimidation: 0,\r\n            persuasion: 0,\r\n            socialize: 0,\r\n            streetwise: 0,\r\n            subterfuge: 0,\r\n\r\n            merits: [],\r\n            spells: [],\r\n            flaws: [],\r\n\r\n            size: 5,\r\n            armor: 0,\r\n            experience: 0,\r\n            morality: 7,\r\n\r\n            weapons: [],\r\n            equipment: [],\r\n            inventory: [],\r\n\r\n            notes: []\r\n        });\r\n    }\r\n\r\n    public static fromJson(json: CharacterJson): Character {\r\n        return new Character(json);\r\n    }\r\n\r\n    public onComponentClick(_: any, e: Event): void {\r\n        const element = <HTMLElement>e.currentTarget;\r\n        element.getElementsByTagName(\"input\")[0].focus();\r\n    }\r\n\r\n    public newItem<T>(observableArray: KnockoutObservableArray<T>, constructor: { createLockable(locked: KnockoutObservable<boolean>): T}): () => void {\r\n        return () => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionAddCommand(observableArray, constructor.createLockable(this.locked)));\r\n        };\r\n    }\r\n\r\n    public removeItem<T>(observableArray: KnockoutObservableArray<T>): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionRemoveCommand(observableArray, item));\r\n        };\r\n    }\r\n\r\n    public moveItem<T>(observableArray: KnockoutObservableArray<T>, direction: number): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            const index = observableArray.indexOf(item);\r\n            const newIndex = index + direction;\r\n\r\n            if (newIndex < 0 || newIndex >= observableArray().length) return;\r\n\r\n            CommandStack.instance.execute(new CollectionMoveCommand(observableArray, item, newIndex, index));\r\n        };\r\n    }\r\n\r\n    public clearUsed(usedObservable: KnockoutObservable<number>): () => void {\r\n        return () => {\r\n            CommandStack.instance.execute(new ClearUsedCommand(usedObservable));\r\n        };\r\n    }\r\n\r\n    public toJson(): CharacterJson {\r\n        return {\r\n            name: this.name(),\r\n            player: this.player(),\r\n            age: this.age(),\r\n            vice: this.vice(),\r\n            virtue: this.virtue(),\r\n            origins: this.origins(),\r\n            gender: this.gender(),\r\n            concept: this.concept(),\r\n            chronicle: this.chronicle(),\r\n\r\n            intelligence: this.intelligence(),\r\n            wits: this.wits(),\r\n            resolve: this.resolve(),\r\n            strength: this.strength(),\r\n            dexterity: this.dexterity(),\r\n            stamina: this.stamina(),\r\n            presence: this.presence(),\r\n            manipulation: this.manipulation(),\r\n            composure: this.composure(),\r\n\r\n            bashing: this.damage.bashing(),\r\n            lethal: this.damage.lethal(),\r\n            aggravated: this.damage.aggravated(),\r\n            usedMagic: this.usedMagic(),\r\n            usedWillpower: this.usedWillpower(),\r\n\r\n            academics: this.academics(),\r\n            robotics: this.robotics(),\r\n            crafts: this.crafts(),\r\n            investigation: this.investigation(),\r\n            medicine: this.medicine(),\r\n            occult: this.occult(),\r\n            politics: this.politics(),\r\n            science: this.science(),\r\n\r\n            athletics: this.athletics(),\r\n            brawl: this.brawl(),\r\n            drive: this.drive(),\r\n            ranged: this.ranged(),\r\n            larceny: this.larceny(),\r\n            stealth: this.stealth(),\r\n            survival: this.survival(),\r\n            weaponry: this.weaponry(),\r\n\r\n            animalKen: this.animalKen(),\r\n            empathy: this.empathy(),\r\n            expression: this.expression(),\r\n            intimidation: this.intimidation(),\r\n            persuasion: this.persuasion(),\r\n            socialize: this.socialize(),\r\n            streetwise: this.streetwise(),\r\n            subterfuge: this.subterfuge(),\r\n\r\n            merits: this.merits().map(m => { return { name: m.name(), value: m.value() }; }),\r\n            spells: this.spells().map(s => { return { name: s.name(), value: s.value() }; }),\r\n            flaws: this.flaws().map(f => { return { name: f.name(), value: f.value() }; }),\r\n\r\n            size: this.size(),\r\n            armor: this.armor(),\r\n            experience: this.experience(),\r\n            morality: this.morality(),\r\n\r\n            weapons: this.weapons().map(w => { return { name: w.name(), description: w.description() }; }),\r\n            equipment: this.equipment().map(e => { return { name: e.name(), description: e.description() }; }),\r\n            inventory: this.inventory().map(i => { return { name: i.name(), description: i.description(), quantity: i.quantity() }; }),\r\n\r\n            notes: this.notes().map(n => n.value())\r\n        };\r\n    }\r\n}\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\nfunction randomName() {\r\n    const firstNameLength = randomInteger(5, 12);\r\n    const lastNameLength = randomInteger(5, 12);\r\n    let firstName = \"\";\r\n    let lastName = \"\";\r\n\r\n    for (let i = 0; i < firstNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        firstName += newLetter;\r\n    }\r\n\r\n    for (let i = 0; i < lastNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        lastName += newLetter;\r\n    }\r\n\r\n    return `${firstName} ${lastName}`;\r\n}\r\n\r\ntype CharacterJson = {\r\n    name: string,\r\n    player: string,\r\n    age: number,\r\n    vice: string,\r\n    virtue: string,\r\n    origins: string,\r\n    gender: string,\r\n    concept: string,\r\n    chronicle: string,\r\n\r\n    intelligence: number,\r\n    strength: number,\r\n    presence: number,\r\n    wits: number,\r\n    dexterity: number,\r\n    manipulation: number,\r\n    resolve: number,\r\n    stamina: number,\r\n    composure: number,\r\n\r\n    academics: number,\r\n    robotics: number,\r\n    crafts: number,\r\n    investigation: number,\r\n    medicine: number,\r\n    occult: number,\r\n    politics: number,\r\n    science: number,\r\n\r\n    athletics: number,\r\n    brawl: number,\r\n    drive: number,\r\n    ranged: number,\r\n    larceny: number,\r\n    stealth: number,\r\n    survival: number,\r\n    weaponry: number,\r\n\r\n    animalKen: number,\r\n    empathy: number,\r\n    expression: number,\r\n    intimidation: number,\r\n    persuasion: number,\r\n    socialize: number,\r\n    streetwise: number,\r\n    subterfuge: number,\r\n\r\n    merits: Array<{ name: string, value: number }>,\r\n    spells: Array<{ name: string, value: number }>,\r\n    flaws: Array<{ name: string, value: number }>,\r\n\r\n    size: number,\r\n    armor: number,\r\n    experience: number,\r\n    morality: number,\r\n\r\n    weapons: Array<{ name: string, description: string }>,\r\n    equipment: Array<{ name: string, description: string }>,\r\n    inventory: Array<{ name: string, description: string, quantity: number }>,\r\n\r\n    notes: Array<string>,\r\n\r\n    bashing?: number,\r\n    lethal?: number,\r\n    aggravated?: number,\r\n\r\n    usedMagic?: number,\r\n    usedWillpower?: number\r\n};","export default class Damage {\r\n    public totalHealth: KnockoutComputed<number>;\r\n    public bashing: KnockoutObservable<number>;\r\n    public lethal: KnockoutObservable<number>;\r\n    public aggravated: KnockoutObservable<number>;\r\n\r\n    public constructor(totalHealthObservable: KnockoutComputed<number>, bashing?: number, lethal?: number, aggravated?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.totalHealth = totalHealthObservable;\r\n        this.bashing = ko.observable(bashing || 0);\r\n        this.lethal = ko.observable(lethal || 0);\r\n        this.aggravated = ko.observable(aggravated || 0);\r\n\r\n        if (locked) {\r\n            this.bashing = this.bashing.extend({ lockable: locked });\r\n            this.lethal = this.lethal.extend({ lockable: locked });\r\n            this.aggravated = this.aggravated.extend({ lockable: locked });\r\n        }\r\n\r\n        totalHealthObservable.subscribe(val => {\r\n            while (this.bashing() + this.lethal() + this.aggravated() > val) {\r\n                if (this.bashing() > 0) {\r\n                    this.bashing(this.bashing() - 1);\r\n                }\r\n                else if (this.lethal() > 0) {\r\n                    this.lethal(this.lethal() - 1);\r\n                }\r\n                else {\r\n                    this.aggravated(this.aggravated() - 1);\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    public anyEmpty(): boolean {\r\n        return this.bashing() + this.lethal() + this.aggravated() < this.totalHealth();\r\n    }\r\n\r\n    public addBashing(): void {\r\n        if (this.anyEmpty()) {\r\n            this.bashing(this.bashing() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addLethal(): void {\r\n        if (this.anyEmpty()) {\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addAggravated(): void {\r\n        if (this.anyEmpty()) {\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public clearAll(): void {\r\n        this.bashing(0);\r\n        this.lethal(0);\r\n        this.aggravated(0);\r\n    }\r\n}","export default class Equipment {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n\r\n    public constructor(name?: string, description?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Equipment(null, null, locked);\r\n    }\r\n}","export default class InventoryItem {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n    public quantity: KnockoutObservable<number>;\r\n    public displayText: KnockoutComputed<string>;\r\n\r\n    public constructor(name?: string, description?: string, quantity?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n        this.quantity = ko.observable(quantity || 1);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n            this.quantity = this.quantity.extend({ lockable: locked });\r\n        }\r\n\r\n        this.displayText = ko.computed(this.getDisplayText, this);\r\n    }\r\n\r\n    public getDisplayText() : string {\r\n        return `${this.quantity()} ${this.name()}`;\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new InventoryItem(null, null, null, locked);\r\n    }\r\n}","export default class Merit {\r\n    public name: KnockoutObservable<string>;\r\n    public value: KnockoutObservable<number>;\r\n\r\n    public constructor(name?: string, value?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.value = ko.observable(value || 0);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Merit(null, null, locked);\r\n    }\r\n}","export default class Note {\r\n    public value: KnockoutObservable<string>;\r\n\r\n    public constructor(value?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.value = ko.observable(value || \"\");\r\n\r\n        if (locked) {\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Note(null, locked);\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class AttributeCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _newValue: number;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>, newValue: number, oldValue: number) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class ClearUsedCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>) {\r\n        this._observable = observable;\r\n        this._oldValue = observable();\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(0);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._oldValue === 0;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionAddCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _newItem: T;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, newItem: T) {\r\n        this._observable = observable;\r\n        this._newItem = newItem;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable.push(this._newItem);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.remove(this._newItem);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionMoveCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _item: T;\r\n    private _newIndex: number;\r\n    private _oldIndex: number;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, item: T, newIndex: number, oldIndex: number) {\r\n        this._observable = observable;\r\n        this._item = item;\r\n        this._newIndex = newIndex;\r\n        this._oldIndex = oldIndex;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable.splice(this._oldIndex, 1);\r\n        this._observable.splice(this._newIndex, 0, this._item);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.splice(this._newIndex, 1);\r\n        this._observable.splice(this._oldIndex, 0, this._item);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newIndex === this._oldIndex;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionRemoveCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _item: T;\r\n    private _itemIndex: number;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, item: T) {\r\n        this._observable = observable;\r\n        this._item = item;\r\n        this._itemIndex = this._observable.indexOf(this._item);\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable.remove(this._item);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.splice(this._itemIndex, 0, this._item);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CommandStack {\r\n    private static _instance: CommandStack;\r\n    \r\n    private _undoStack: KnockoutObservableArray<ICommand>;\r\n    private _redoStack: KnockoutObservableArray<ICommand>;\r\n\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n\r\n    private constructor() {\r\n        this._undoStack = ko.observableArray([]);\r\n        this._redoStack = ko.observableArray([]);\r\n\r\n        this.canUndo = ko.computed(() => this._undoStack().length > 0, this);\r\n        this.canRedo = ko.computed(() => this._redoStack().length > 0, this);\r\n    }\r\n\r\n    public static get instance(): CommandStack {\r\n        if (!CommandStack._instance) CommandStack._instance = new CommandStack();\r\n\r\n        return CommandStack._instance;\r\n    }\r\n\r\n    // TODO: Maybe don't have this as singleton...\r\n    // Could have an instance for each character\r\n    // to preserve the stack across character selection\r\n    public reset(): void {\r\n        this._undoStack.removeAll();\r\n        this._redoStack.removeAll();\r\n    }\r\n\r\n    public execute(command: ICommand): void {\r\n        if (command.doesNothing()) return;\r\n\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n        this._redoStack.removeAll();\r\n    }\r\n\r\n    public undo(): void {\r\n        if (this._undoStack().length === 0) return;\r\n        \r\n        const command = this._undoStack.pop();\r\n        command.undo();\r\n        this._redoStack.push(command);\r\n    }\r\n\r\n    public redo(): void {\r\n        if (this._redoStack().length === 0) return;\r\n\r\n        const command = this._redoStack.pop();\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class TextInputCommand implements ICommand {\r\n    private _observable: KnockoutObservable<string>;\r\n    private _newValue: string;\r\n    private _oldValue: string;\r\n\r\n    public constructor(observable: KnockoutObservable<string>, newValue: string, oldValue: string) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void  {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import { randomFloat, randomInteger } from \"./utils\";\r\n\r\nexport default class Dice {\r\n    public dicePool: KnockoutObservable<number>;\r\n    public rollRounds: KnockoutObservableArray<Array<number>>;\r\n    public rollingInProgress: KnockoutObservable<boolean>;\r\n    public totalDiceSuccesses: KnockoutComputed<number>;\r\n    public totalDiceSuccessesDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        this.dicePool = ko.observable(1);\r\n        this.rollRounds = ko.observableArray([]);\r\n        this.rollingInProgress = ko.observable(false);\r\n        this.totalDiceSuccesses = ko.computed(() => {\r\n            if (this.rollingInProgress() || this.rollRounds().length === 0) return -1;\r\n\r\n            return this.rollRounds().reduce((total: number, r: Array<number>) => {\r\n                return total + r.reduce((total: number, d: number) => total + (d > 7 ? 1 : 0), 0);\r\n            }, 0);\r\n        }, this);\r\n        this.totalDiceSuccessesDisplay = ko.computed(() => {\r\n            return this.totalDiceSuccesses() >= 0 ? \"\" + this.totalDiceSuccesses() : \"???\";\r\n        }, this);\r\n    }\r\n\r\n    public incrementDicePool(amount: number): () => void {\r\n        return () => {\r\n            let newAmount = this.dicePool() + amount;\r\n            if (newAmount < 1) newAmount = 1;\r\n            this.dicePool(newAmount);\r\n        };\r\n    }\r\n\r\n    public rollDice(): void {\r\n        const roller = new RollState(this);\r\n        roller.beginRoll();\r\n    }\r\n}\r\n\r\nclass RollState {\r\n    private _diceObj: Dice;\r\n    private _currentRound: number;\r\n    private _currentDice: number;\r\n    private _currentRoundRolls: number;\r\n    private _currentRoundResults: Array<number>;\r\n    private _nextRoundRolls: number;\r\n    private _intervalHandle: number;\r\n\r\n    public constructor(diceObj: Dice) {\r\n        this._diceObj = diceObj;\r\n        this._currentRound = 0;\r\n        this._currentDice = 0;\r\n        this._currentRoundRolls = diceObj.dicePool();\r\n        this._currentRoundResults = [];\r\n        this._nextRoundRolls = 0;\r\n        this._intervalHandle = null;\r\n    }\r\n\r\n    public beginRoll(): void {\r\n        this._diceObj.rollingInProgress(true);\r\n        this._diceObj.rollRounds.removeAll();\r\n        for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n        this._diceObj.rollRounds.push(this._currentRoundResults);\r\n\r\n        this._intervalHandle = window.setInterval(() => {\r\n            const nextRoll = randomInteger(1, 11);\r\n            if (nextRoll === 10) {\r\n                this._nextRoundRolls++;\r\n                const diceContainer = document.getElementsByClassName(\"diceContainer\")[0];\r\n                const critMessage = document.createElement(\"div\");\r\n                critMessage.classList.add(\"crit-message\");\r\n                critMessage.innerText = \"Crit!\";\r\n                critMessage.id = \"critMessage\";\r\n                diceContainer.appendChild(critMessage);\r\n                window.setTimeout(() => diceContainer.removeChild(critMessage), 1010);\r\n            }\r\n            this._currentRoundResults[this._currentDice] = nextRoll;\r\n            this._diceObj.rollRounds.replace(this._diceObj.rollRounds()[this._currentRound], this._currentRoundResults);\r\n            this._currentDice++;\r\n\r\n            if (this._currentDice === this._currentRoundRolls) {\r\n                if (this._nextRoundRolls === 0) {\r\n                    window.clearInterval(this._intervalHandle);\r\n                    this._diceObj.rollingInProgress(false);\r\n                    const critMessage = document.getElementById(\"critMessage\");\r\n                    if (critMessage) {\r\n                        critMessage.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                else {\r\n                    this._currentRound++;\r\n                    this._currentRoundRolls = this._nextRoundRolls;\r\n                    this._nextRoundRolls = 0;\r\n                    this._currentDice = 0;\r\n                    this._currentRoundResults = [];\r\n                    for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n                    this._diceObj.rollRounds.push(this._currentRoundResults);\r\n                }\r\n            }\r\n        }, 100);\r\n    }\r\n}","import Application from \"./Application\";\r\nimport Equipment from \"./Character/Equipment\";\r\nimport InventoryItem from \"./Character/InventoryItem\";\r\nimport Merit from \"./Character/Merit\";\r\nimport Note from \"./Character/Note\";\r\nimport { applyCustomKnockoutCode } from \"./utils\";\r\n\r\napplyCustomKnockoutCode();\r\n\r\nconst constructors = {\r\n    Equipment: Equipment,\r\n    InventoryItem: InventoryItem,\r\n    Merit: Merit,\r\n    Note: Note\r\n};\r\nObject.defineProperty(window, \"constructors\", { value: constructors });\r\n\r\nconst app = new Application();\r\nko.applyBindings(app);\r\n\r\n// Exposing the view model to the global state in case manual changes need to be applied\r\nObject.defineProperty(window, \"app\", { value: app });\r\n\r\nfunction toggleTooltips(enable: boolean): void {\r\n    if (enable) $(\"[data-toggle='tooltip']\").tooltip();\r\n    else $(\"[data-toggle='tooltip']\").tooltip(\"dispose\");\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    toggleTooltips(window.outerWidth >= 992);\r\n});\r\ntoggleTooltips(window.outerWidth >= 992);","import Damage from \"./Character/Damage\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\nimport AttributeCommand from \"./Command/AttributeCommand\";\r\nimport TextInputCommand from \"./Command/TextInputCommand\";\r\n\r\nexport function randomInteger(minInclusive = 0, maxExclusive = 10): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function randomFloat(minInclusive = 0, maxExclusive = 1): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.random() * (maxExclusive - minInclusive) + minInclusive;\r\n}\r\n\r\nexport function applyCustomKnockoutCode() {\r\n    ko.bindingHandlers.dice = {\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservableArray<Array<number>>) => {\r\n            const rollRounds = valueAccessor()();\r\n            if (rollRounds.length === 0) {\r\n                element.innerHTML = \"\";\r\n                return;\r\n            }\r\n    \r\n            let divs = element.getElementsByClassName(\"dice-round\");\r\n            if (divs.length !== rollRounds.length) {\r\n                const newRound = document.createElement(\"div\");\r\n                newRound.classList.add(\"dice-round\");\r\n                const rolls = rollRounds[rollRounds.length - 1];\r\n                for (let i = 0; i < rolls.length; i++) {\r\n                    const span = document.createElement(\"span\");\r\n                    const delay = randomFloat(0, 0.5);\r\n                    span.style.animation = `rollingDice 0.5s linear -${delay}s infinite alternate`;\r\n                    span.classList.add(\"dice\");\r\n                    newRound.appendChild(span);\r\n                }\r\n                element.appendChild(newRound);\r\n                divs = element.getElementsByClassName(\"dice-round\");\r\n            }\r\n    \r\n            for (let i = 0; i < rollRounds.length; i++) {\r\n                const rolls = rollRounds[i];\r\n                const spans = divs[i].getElementsByClassName(\"dice\");\r\n                for (let j = 0; j < rolls.length; j++) {\r\n                    const roll = rolls[j];\r\n                    const span = <HTMLSpanElement>spans[j];\r\n    \r\n                    if (roll !== -1) {\r\n                        span.style.animation = null;\r\n                        span.style.backgroundImage = `url('images/dice-${roll}.png')`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.damageDisplay = {\r\n        init: (element: HTMLElement) => {\r\n            for (let i = 0; i < 15; i++) {\r\n                const span = document.createElement(\"span\");\r\n                span.classList.add(\"damage\");\r\n                span.classList.add(\"none\");\r\n                element.appendChild(span);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => Damage) => {\r\n            const damageObj = valueAccessor();\r\n            const spans = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < spans.length; i++) {\r\n                if (i < damageObj.aggravated()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.add(\"aggravated\");\r\n                }\r\n                else if (i - damageObj.aggravated() < damageObj.lethal()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"lethal\");\r\n                }\r\n                else if (i - damageObj.aggravated() - damageObj.lethal() < damageObj.bashing()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"bashing\");\r\n                }\r\n                else {\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"none\");\r\n                }\r\n    \r\n                if (i < damageObj.totalHealth()) {\r\n                    spans[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else {\r\n                    spans[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.attribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, canClear?: boolean }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                dot.classList.add(\"pointer\");\r\n                dot.dataset.toggle = \"tooltip\";\r\n                dot.title = \"\" + (i + 1);\r\n                $(dot).tooltip();\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n    \r\n            const canClear = valueAccessor().canClear;\r\n            if (canClear === true || typeof canClear === \"undefined\") {\r\n                const clearDot = document.createElement(\"div\");\r\n                clearDot.classList.add(\"clear-dot\");\r\n                clearDot.innerHTML = \"&times;\";\r\n                clearDot.dataset.toggle = \"tooltip\";\r\n                clearDot.title = \"Clear\";\r\n                clearDot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, 0, valueAccessor().value()));\r\n                });\r\n                element.appendChild(clearDot);\r\n                $(clearDot).tooltip();\r\n            }\r\n    \r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                element.appendChild(dot);\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByClassName(\"attribute-dot\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                const dot = <HTMLSpanElement>dots[i];\r\n                dot.style.backgroundColor = null;\r\n                dot.style.borderColor = null;\r\n                if (i < value) {\r\n                    dot.style.backgroundColor = \"var(--body-color)\";\r\n                    dot.style.borderColor = \"var(--body-color)\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.readOnlyAttribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, hideUnfilled?: boolean }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                dots[i].classList.remove(\"filled\");\r\n                if (i < value) {\r\n                    dots[i].classList.add(\"filled\");\r\n                    dots[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else if (valueAccessor().hideUnfilled) {\r\n                    dots[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.used = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < 12; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const used = valueAccessor().value();\r\n            const total = valueAccessor().total();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                if (i < used) dots[i].classList.add(\"filled-red\");\r\n                else dots[i].classList.remove(\"filled-red\");\r\n    \r\n                if (i < total) dots[i].classList.remove(\"HIDDEN\");\r\n                else dots[i].classList.add(\"HIDDEN\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.focusOnCreation = {\r\n        init: (element: HTMLInputElement | HTMLTextAreaElement) => {\r\n            window.setTimeout(() => {\r\n                if (element.value) return;\r\n                element.focus();\r\n            }, 1);\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.contextMenu = {\r\n        init: (element: HTMLElement, valueAccessor: () => () => void) => {\r\n            element.addEventListener(\"contextmenu\", e => {\r\n                e.preventDefault();\r\n                valueAccessor()();\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.undoableTextInput = {\r\n        init: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            const inputElement = <HTMLInputElement>element;\r\n            inputElement.addEventListener(\"change\", () => {\r\n                const oldValue = valueAccessor()();\r\n                const newValue = inputElement.value;\r\n                if (oldValue === newValue) return;\r\n\r\n                valueAccessor()(newValue);\r\n                if (valueAccessor()() === oldValue) return;\r\n                valueAccessor()(oldValue);\r\n\r\n                CommandStack.instance.execute(new TextInputCommand(valueAccessor(), newValue, oldValue));\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            (<HTMLInputElement>element).value = valueAccessor()();\r\n        }\r\n    };\r\n    \r\n    (<any>ko.extenders).lockable = (target: KnockoutObservable<any>, locked: KnockoutObservable<boolean>) => {\r\n        const result = ko.pureComputed({\r\n            read: target,\r\n            write: (newValue: any) => {\r\n                if (locked()) {\r\n                    target.notifySubscribers(target());\r\n                }\r\n                else {\r\n                    target(newValue);\r\n                    target.notifySubscribers(newValue);\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        return result;\r\n    };\r\n\r\n    // TODO: Make undoing an extender to not make it so I have to write special code\r\n    // for the various commands\r\n    // (<any>ko.extenders).undoable = (target: KnockoutObservable<any>) => {\r\n    //     const result = ko.pureComputed({\r\n    //         read: target,\r\n    //         write: (newValue: any) => {\r\n\r\n    //         }\r\n    //     }).extend({ notify: \"always\" });\r\n    // };\r\n    \r\n    (<any>ko.extenders).numeric = (target: any, args: { precision?: number, min?: number, max?: number }) => {\r\n        const precision = args.precision || 0;\r\n        const min = args.min || -Infinity;\r\n        const max = args.max || Infinity;\r\n    \r\n        // Create a writeable computed observable to intercept writes to our observable\r\n        const result = ko.pureComputed({\r\n            read: target, // Always return the original observable's value\r\n            write: (newValue: any) => {\r\n                const current = target();\r\n                const roundingMultiplier = Math.pow(10, precision);\r\n                const newValueAsNum = isNaN(newValue) ? 0 : +newValue;\r\n                let valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\r\n                if (valueToWrite < min) valueToWrite = min;\r\n                else if (valueToWrite > max) valueToWrite = max;\r\n    \r\n                // Only write if it changed\r\n                if (valueToWrite !== current) {\r\n                    target(valueToWrite);\r\n                }\r\n                else {\r\n                    // If the rounded value is the same, but a different value was written,\r\n                    // force a notification for the current field\r\n                    if (newValue !== current) {\r\n                        target.notifySubscribers(valueToWrite);\r\n                    }\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        // Initialize with current value to make sure it is rounded appropriately\r\n        result(target());\r\n    \r\n        // Return the new computed observable\r\n        return result;\r\n    };\r\n}"]}