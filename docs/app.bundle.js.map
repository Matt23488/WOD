{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/Application.ts","src/ts/Character/Character.ts","src/ts/Character/Damage.ts","src/ts/Character/Equipment.ts","src/ts/Character/InventoryItem.ts","src/ts/Character/Merit.ts","src/ts/Character/Note.ts","src/ts/Command/AttributeCommand.ts","src/ts/Command/BatchCommand.ts","src/ts/Command/ClearUsedCommand.ts","src/ts/Command/CollectionAddCommand.ts","src/ts/Command/CollectionMoveCommand.ts","src/ts/Command/CollectionRemoveCommand.ts","src/ts/Command/CommandStack.ts","src/ts/Command/ObservableWriteCommand.ts","src/ts/Command/TextInputCommand.ts","src/ts/Dice.ts","src/ts/main.ts","src/ts/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Character_1","Dice_1","CommandStack_1","Application","prototype","toggleClock","this","showClock","goBack","mode","_previousSection","window","location","hash","newCharacter","newChar","default","locked","characters","push","selectCharacter","character","charIndex","indexOf","characterId","instance","reset","deleteCharacter","confirm","name","id","remove","saveCharacters","localStorage","setItem","JSON","stringify","realCharacters","map","toJson","alert","downloadCharacter","json","dl","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","uploadCharacter","_this","ul","type","accept","addEventListener","file","files","reader","FileReader","onload","target","result","fromJson","parse","readAsText","toggleCharacterLock","switchMode","getElementById","undo","canUndo","redo","canRedo","registerKeyboardCommand","key","callback","_keyboardCommands","set","enableKeyboardCommands","ctrlKey","_b","__values","entries","_c","next","done","_d","__read","value","preventDefault","savedCharacters","getItem","unshift","ghost","ko","observable","observableArray","computed","filter","dice","lockButtonClass","lockButtonIcon","currentTime","Date","currentTimeDisplay","time","hours","getHours","minutes","getMinutes","seconds","getSeconds","suffix","setInterval","Map","substring","$domElement","$","scrollTop","offset","top","Damage_1","Equipment_1","InventoryItem_1","Merit_1","Note_1","utils_1","CollectionAddCommand_1","CollectionRemoveCommand_1","CollectionMoveCommand_1","ClearUsedCommand_1","AttributeCommand_1","Character","firstNameLength","randomInteger","lastNameLength","firstName","lastName","newLetter","alphabet","charAt","toUpperCase","randomName","player","age","vice","virtue","origins","gender","concept","chronicle","intelligence","strength","presence","wits","dexterity","manipulation","resolve","stamina","composure","academics","robotics","crafts","investigation","medicine","occult","politics","science","athletics","brawl","drive","ranged","larceny","stealth","survival","weaponry","animalKen","empathy","expression","intimidation","persuasion","socialize","streetwise","subterfuge","merits","spells","flaws","size","armor","experience","morality","weapons","equipment","inventory","notes","onComponentClick","_","currentTarget","getElementsByTagName","focus","newItem","constructor","execute","createLockable","removeItem","item","moveItem","direction","index","newIndex","clearUsed","usedObservable","bashing","damage","lethal","aggravated","usedMagic","usedWillpower","m","s","w","description","quantity","extend","lockable","undoable","numeric","precision","min","max","speed","defense","Math","initiative","health","magic","subscribe","val","executeWithPrevious","willpower","BatchCommand_1","Damage","anyEmpty","totalHealth","addBashing","addLethal","addAggravated","clearAll","totalHealthObservable","Equipment","InventoryItem","getDisplayText","displayText","Merit","Note","AttributeCommand","_observable","_newValue","_oldValue","doesNothing","newValue","oldValue","BatchCommand","_commands","every","command","commands","_i","arguments","ClearUsedCommand","CollectionAddCommand","_newItem","CollectionMoveCommand","splice","_oldIndex","_newIndex","_item","oldIndex","CollectionRemoveCommand","_itemIndex","CommandStack","Object","defineProperty","_instance","_undoStack","removeAll","_redoStack","_currentlyExecuting","setTimeout","previousCommand","pop","ObservableWriteCommand","TextInputCommand","Dice","incrementDicePool","amount","newAmount","dicePool","rollDice","RollState","beginRoll","rollRounds","rollingInProgress","totalDiceSuccesses","reduce","total","d","totalDiceSuccessesDisplay","_diceObj","_currentRoundRolls","_currentRoundResults","_intervalHandle","nextRoll","_nextRoundRolls","diceContainer_1","getElementsByClassName","critMessage_1","classList","add","innerText","_currentDice","replace","_currentRound","clearInterval","critMessage","diceObj","Application_1","applyCustomKnockoutCode","constructors","app","toggleTooltips","enable","tooltip","applyBindings","outerWidth","TextInputCommand_1","ObservableWriteCommand_1","randomFloat","minInclusive","maxExclusive","_a","random","floor","bindingHandlers","update","element","valueAccessor","divs","newRound","rolls","span","delay","animation","spans","j","roll","backgroundImage","innerHTML","damageDisplay","init","damageObj","attribute","dots","dot","dataset","toggle","title","forEach","canClear","clearDot","backgroundColor","borderColor","readOnlyAttribute","hideUnfilled","used","focusOnCreation","contextMenu","undoableTextInput","inputElement","extenders","pureComputed","read","write","notifySubscribers","notify","args","Infinity","current","roundingMultiplier","pow","newValueAsNum","isNaN","valueToWrite","round"],"mappings":"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","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Character from \"./Character/Character\";\r\nimport Dice from \"./Dice\";\r\nimport swal from \"sweetalert\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\n\r\nexport default class Application {\r\n    public mode: KnockoutObservable<string>;\r\n    public characterId: KnockoutObservable<number>;\r\n    public characters: KnockoutObservableArray<Character>;\r\n    public realCharacters: KnockoutComputed<Array<Character>>;\r\n    public character: KnockoutComputed<Character>;\r\n    public dice: Dice;\r\n    public lockButtonClass: KnockoutComputed<string>;\r\n    public lockButtonIcon: KnockoutComputed<string>;\r\n    private _previousSection: string;\r\n    public showClock: KnockoutObservable<boolean>;\r\n    public currentTime: KnockoutObservable<Date>;\r\n    public currentTimeDisplay: KnockoutComputed<string>;\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n    private _keyboardCommands: Map<string, () => void>;\r\n\r\n    public constructor() {\r\n        const savedCharacters: Array<Character> = (JSON.parse(window.localStorage.getItem(\"characters\")) || []).map(Character.fromJson);\r\n        savedCharacters.unshift(Character.newCharacter());\r\n        savedCharacters[0].ghost = true;\r\n\r\n        this.mode = ko.observable(\"list\");\r\n        this.characterId = ko.observable(0);\r\n        this.characters = ko.observableArray(savedCharacters);\r\n        this.realCharacters = ko.computed(() => this.characters().filter(c => !c.ghost), this);\r\n        this.character = ko.computed(() => this.characters()[this.characterId()], this);\r\n        this.dice = new Dice();\r\n        this.lockButtonClass = ko.computed(() => this.character().locked() ? \"btn-danger\" : \"btn-outline-success\", this);\r\n        this.lockButtonIcon = ko.computed(() => this.character().locked() ? \"fas fa-lock\" : \"fas fa-lock-open\", this);\r\n        this._previousSection = null;\r\n        this.showClock = ko.observable(false);\r\n        this.currentTime = ko.observable(new Date());\r\n\r\n        this.currentTimeDisplay = ko.computed(() => {\r\n            const time = this.currentTime();\r\n            let hours = time.getHours();\r\n            const minutes = time.getMinutes();\r\n            const seconds = time.getSeconds();\r\n            const suffix = hours < 12 ? \"AM\" : \"PM\";\r\n            const minutePrefix = minutes < 10 ? \"0\" : \"\";\r\n            const secondPrefix = seconds < 10 ? \"0\" : \"\";\r\n            if (hours > 12) hours -= 12;\r\n            else if (hours === 0) hours = 12;\r\n            return `${hours}:${minutePrefix}${minutes}:${secondPrefix}${seconds} ${suffix}`;\r\n        }, this);\r\n\r\n        this.canUndo = ko.computed(() => CommandStack.instance.canUndo() && !this.character().locked(), this);\r\n        this.canRedo = ko.computed(() => CommandStack.instance.canRedo() && !this.character().locked(), this);\r\n\r\n        window.setInterval(() => {\r\n            this.currentTime(new Date());\r\n        }, 1000);\r\n\r\n        this._keyboardCommands = new Map<string, () => void>();\r\n        this.registerKeyboardCommand(\"s\", () => this.saveCharacters());\r\n        this.registerKeyboardCommand(\"z\", () => { \r\n            if (this.mode() === \"list\") return;\r\n            this.undo();\r\n        });\r\n        this.registerKeyboardCommand(\"Z\", () => {\r\n            if (this.mode() === \"list\") return;\r\n            this.redo();\r\n        });\r\n        this.registerKeyboardCommand(\"l\", () => {\r\n            if (this.mode() === \"list\") return;\r\n            this.toggleCharacterLock();\r\n        });\r\n        this.registerKeyboardCommand(\"o\", () => this.toggleClock());\r\n        this.enableKeyboardCommands();\r\n\r\n        window.addEventListener(\"hashchange\", e => {\r\n            const hash = window.location.hash.substring(1);\r\n            if (!hash) return;\r\n\r\n            var offset = 80; // TODO: Don't hardcode this maybe?\r\n            var $domElement = $(`#${hash}`);\r\n            $(window).scrollTop($domElement.offset().top - offset);\r\n        });\r\n    }\r\n\r\n    public toggleClock(): void {\r\n        this.showClock(!this.showClock());\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.mode() === \"sheet\") this.mode(\"list\");\r\n        else {\r\n            this.mode(\"sheet\");\r\n\r\n            if (this._previousSection) window.location.hash = this._previousSection;\r\n        }\r\n    }\r\n\r\n    public newCharacter(): void {\r\n        const newChar = Character.newCharacter();\r\n        newChar.locked(false);\r\n        this.characters.push(newChar);\r\n        this.selectCharacter(newChar);\r\n    }\r\n\r\n    public selectCharacter(character: Character): void {\r\n        const charIndex = this.characters.indexOf(character);\r\n        if (this.characterId() !== charIndex) {\r\n            this.characterId(charIndex);\r\n            CommandStack.instance.reset();\r\n        }\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public deleteCharacter(character: Character): void {\r\n        // swal({\r\n        //     title: `Delete ${this.character().name()}`,\r\n        //     text: \"Are you sure? (As long as you don't save, your character won't be gone.)\",\r\n        //     icon: \"warning\",\r\n        //     buttons: [\"Cancel\", \"Delete\"],\r\n        //     dangerMode: true\r\n        // })\r\n        // .then((willDelete: boolean) => {\r\n        //     if (willDelete) {\r\n        //         const id = this.characterId();\r\n        //         this.characterId(0);\r\n        //         this.characters.remove(this.characters()[id]);\r\n        //         this.mode(\"list\");\r\n        //     }\r\n        // });\r\n        if (this.character().locked()) return;\r\n        if (confirm(`Are you sure you want to delete ${this.character().name()}? (As long as you don't save, your character won't be gone.)`)) {\r\n            const id = this.characterId();\r\n            this.characterId(0);\r\n            this.characters.remove(this.characters()[id]);\r\n            this.mode(\"list\");\r\n        }\r\n    }\r\n\r\n    public saveCharacters(): void {\r\n        window.localStorage.setItem(\"characters\", JSON.stringify(this.realCharacters().map(c => c.toJson())));\r\n        // swal(\"Characters saved successfully!\", {\r\n        //     buttons: [],\r\n        //     timer: 1000,\r\n        //     icon: \"success\"\r\n        // });\r\n        alert(\"Characters saved successfully!\");\r\n    }\r\n\r\n    public downloadCharacter(): void {\r\n        const json = JSON.stringify(this.character().toJson());\r\n\r\n        const dl = document.createElement(\"a\");\r\n        dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${encodeURIComponent(json)}`);\r\n        dl.setAttribute(\"download\", `${this.character().name()}.json`);\r\n\r\n        dl.style.display = \"none\";\r\n        document.body.appendChild(dl);\r\n\r\n        dl.click();\r\n\r\n        document.body.removeChild(dl);\r\n    }\r\n\r\n    public uploadCharacter(): void {\r\n        const ul = document.createElement(\"input\");\r\n        ul.type = \"file\";\r\n        ul.accept = \".json\";\r\n        ul.style.display = \"none\";\r\n\r\n        ul.addEventListener(\"change\", e => {\r\n            const file = ul.files[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const json = e.target.result;\r\n                this.characters.push(Character.fromJson(JSON.parse(json)));\r\n                this.characterId(this.characters().length - 1);\r\n                this.mode(\"sheet\");\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n\r\n        document.body.appendChild(ul);\r\n\r\n        ul.click();\r\n\r\n        document.body.removeChild(ul);\r\n    }\r\n\r\n    public toggleCharacterLock(): void {\r\n        const character = this.character();\r\n        character.locked(!character.locked());\r\n    }\r\n\r\n    public switchMode(mode: string): () => void {\r\n        return () => {\r\n            if (this.mode() !== \"list\" && document.getElementById(mode)) {\r\n                this._previousSection = mode;\r\n            }\r\n            else this._previousSection = null;\r\n\r\n            window.location.hash = \"\";\r\n            this.mode(mode);\r\n        }\r\n    }\r\n\r\n    public undo(): void {\r\n        if (!this.canUndo()) return;\r\n        CommandStack.instance.undo();\r\n    }\r\n\r\n    public redo(): void {\r\n        if (!this.canRedo()) return;\r\n        CommandStack.instance.redo();\r\n    }\r\n\r\n    private registerKeyboardCommand(key: string, callback: () => void): void {\r\n        this._keyboardCommands.set(key, callback);\r\n    }\r\n\r\n    private enableKeyboardCommands(): void {\r\n        window.addEventListener(\"keydown\", e => {\r\n            if (e.ctrlKey !== true) return;\r\n\r\n            for (let [key, callback] of this._keyboardCommands.entries()) {\r\n                if (e.key === key) {\r\n                    e.preventDefault();\r\n                    callback();\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","import Damage from \"./Damage\";\r\nimport Equipment from \"./Equipment\";\r\nimport InventoryItem from \"./InventoryItem\";\r\nimport Merit from \"./Merit\";\r\nimport Note from \"./Note\";\r\nimport { randomInteger } from \"../utils\";\r\nimport CommandStack from \"../Command/CommandStack\";\r\nimport CollectionAddCommand from \"../Command/CollectionAddCommand\";\r\nimport CollectionRemoveCommand from \"../Command/CollectionRemoveCommand\";\r\nimport CollectionMoveCommand from \"../Command/CollectionMoveCommand\";\r\nimport ClearUsedCommand from \"../Command/ClearUsedCommand\";\r\nimport AttributeCommand from \"../Command/AttributeCommand\";\r\n\r\nexport default class Character {\r\n    public ghost: boolean = false;\r\n    public locked: KnockoutObservable<boolean> = ko.observable(true);\r\n\r\n    public name: KnockoutObservable<string>;\r\n    public player: KnockoutObservable<string>;\r\n    public age: KnockoutObservable<number>;\r\n    public vice: KnockoutObservable<string>;\r\n    public virtue: KnockoutObservable<string>;\r\n    public origins: KnockoutObservable<string>;\r\n    public gender: KnockoutObservable<string>;\r\n    public concept: KnockoutObservable<string>;\r\n    public chronicle: KnockoutObservable<string>;\r\n\r\n    public intelligence: KnockoutObservable<number>;\r\n    public strength: KnockoutObservable<number>;\r\n    public presence: KnockoutObservable<number>;\r\n    public wits: KnockoutObservable<number>;\r\n    public dexterity: KnockoutObservable<number>;\r\n    public manipulation: KnockoutObservable<number>;\r\n    public resolve: KnockoutObservable<number>;\r\n    public stamina: KnockoutObservable<number>;\r\n    public composure: KnockoutObservable<number>;\r\n\r\n    public academics: KnockoutObservable<number>;\r\n    public robotics: KnockoutObservable<number>;\r\n    public crafts: KnockoutObservable<number>;\r\n    public investigation: KnockoutObservable<number>;\r\n    public medicine: KnockoutObservable<number>;\r\n    public occult: KnockoutObservable<number>;\r\n    public politics: KnockoutObservable<number>;\r\n    public science: KnockoutObservable<number>;\r\n    \r\n    public athletics: KnockoutObservable<number>;\r\n    public brawl: KnockoutObservable<number>;\r\n    public drive: KnockoutObservable<number>;\r\n    public ranged: KnockoutObservable<number>;\r\n    public larceny: KnockoutObservable<number>;\r\n    public stealth: KnockoutObservable<number>;\r\n    public survival: KnockoutObservable<number>;\r\n    public weaponry: KnockoutObservable<number>;\r\n\r\n    public animalKen: KnockoutObservable<number>;\r\n    public empathy: KnockoutObservable<number>;\r\n    public expression: KnockoutObservable<number>;\r\n    public intimidation: KnockoutObservable<number>;\r\n    public persuasion: KnockoutObservable<number>;\r\n    public socialize: KnockoutObservable<number>;\r\n    public streetwise: KnockoutObservable<number>;\r\n    public subterfuge: KnockoutObservable<number>;\r\n\r\n    public merits: KnockoutObservableArray<Merit>;\r\n    public spells: KnockoutObservableArray<Merit>;\r\n    public flaws: KnockoutObservableArray<Merit>;\r\n\r\n    public size: KnockoutObservable<number>;\r\n    public speed: KnockoutComputed<number>;\r\n    public defense: KnockoutComputed<number>;\r\n    public armor: KnockoutObservable<number>;\r\n    public initiative: KnockoutComputed<number>;\r\n    public experience: KnockoutObservable<number>;\r\n    public morality: KnockoutObservable<number>;\r\n\r\n    public weapons: KnockoutObservableArray<Equipment>;\r\n    public equipment: KnockoutObservableArray<Equipment>;\r\n    public inventory: KnockoutObservableArray<InventoryItem>;\r\n\r\n    public notes: KnockoutObservableArray<Note>;\r\n\r\n    public health: KnockoutComputed<number>;\r\n    public damage: Damage;\r\n\r\n    public magic: KnockoutComputed<number>;\r\n    public usedMagic: KnockoutObservable<number>;\r\n\r\n    public willpower: KnockoutComputed<number>;\r\n    public usedWillpower: KnockoutObservable<number>;\r\n\r\n    public constructor(json: CharacterJson) {\r\n        this.name = ko.observable(json.name).extend({ lockable: this.locked, undoable: false });\r\n        this.player = ko.observable(json.player).extend({ lockable: this.locked });\r\n        this.age = ko.observable(json.age).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.vice = ko.observable(json.vice).extend({ lockable: this.locked });\r\n        this.virtue = ko.observable(json.virtue).extend({ lockable: this.locked });\r\n        this.origins = ko.observable(json.origins).extend({ lockable: this.locked });\r\n        this.gender = ko.observable(json.gender).extend({ lockable: this.locked });\r\n        this.concept = ko.observable(json.concept).extend({ lockable: this.locked });\r\n        this.chronicle = ko.observable(json.chronicle).extend({ lockable: this.locked });\r\n\r\n        this.intelligence = ko.observable(json.intelligence).extend({ lockable: this.locked });\r\n        this.strength = ko.observable(json.strength).extend({ lockable: this.locked });\r\n        this.presence = ko.observable(json.presence).extend({ lockable: this.locked });\r\n        this.wits = ko.observable(json.wits).extend({ lockable: this.locked });\r\n        this.dexterity = ko.observable(json.dexterity).extend({ lockable: this.locked });\r\n        this.manipulation = ko.observable(json.manipulation).extend({ lockable: this.locked });\r\n        this.resolve = ko.observable(json.resolve).extend({ lockable: this.locked });\r\n        this.stamina = ko.observable(json.stamina).extend({ lockable: this.locked });\r\n        this.composure = ko.observable(json.composure).extend({ lockable: this.locked });\r\n\r\n        this.academics = ko.observable(json.academics).extend({ lockable: this.locked });\r\n        this.robotics = ko.observable(json.robotics).extend({ lockable: this.locked });\r\n        this.crafts = ko.observable(json.crafts).extend({ lockable: this.locked });\r\n        this.investigation = ko.observable(json.investigation).extend({ lockable: this.locked });\r\n        this.medicine = ko.observable(json.medicine).extend({ lockable: this.locked });\r\n        this.occult = ko.observable(json.occult).extend({ lockable: this.locked });\r\n        this.politics = ko.observable(json.politics).extend({ lockable: this.locked });\r\n        this.science = ko.observable(json.science).extend({ lockable: this.locked });\r\n\r\n        this.athletics = ko.observable(json.athletics).extend({ lockable: this.locked });\r\n        this.brawl = ko.observable(json.brawl).extend({ lockable: this.locked });\r\n        this.drive = ko.observable(json.drive).extend({ lockable: this.locked });\r\n        this.ranged = ko.observable(json.ranged).extend({ lockable: this.locked });\r\n        this.larceny = ko.observable(json.larceny).extend({ lockable: this.locked });\r\n        this.stealth = ko.observable(json.stealth).extend({ lockable: this.locked });\r\n        this.survival = ko.observable(json.survival).extend({ lockable: this.locked });\r\n        this.weaponry = ko.observable(json.weaponry).extend({ lockable: this.locked });\r\n\r\n        this.animalKen = ko.observable(json.animalKen).extend({ lockable: this.locked });\r\n        this.empathy = ko.observable(json.empathy).extend({ lockable: this.locked });\r\n        this.expression = ko.observable(json.expression).extend({ lockable: this.locked });\r\n        this.intimidation = ko.observable(json.intimidation).extend({ lockable: this.locked });\r\n        this.persuasion = ko.observable(json.persuasion).extend({ lockable: this.locked });\r\n        this.socialize = ko.observable(json.socialize).extend({ lockable: this.locked });\r\n        this.streetwise = ko.observable(json.streetwise).extend({ lockable: this.locked });\r\n        this.subterfuge = ko.observable(json.subterfuge).extend({ lockable: this.locked });\r\n\r\n        this.merits = ko.observableArray(json.merits.map(m => new Merit(m.name, m.value, this.locked)));\r\n        this.spells = ko.observableArray(json.spells.map(s => new Merit(s.name, s.value, this.locked)));\r\n        this.flaws = ko.observableArray(json.flaws.map(f => new Merit(f.name, f.value, this.locked)));\r\n\r\n        this.size = ko.observable(json.size).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n        this.speed = ko.computed(() => this.strength() + this.dexterity() + 5, this);\r\n        this.defense = ko.computed(() => Math.min(this.dexterity(), this.wits()), this);\r\n        this.armor = ko.observable(json.armor).extend({ numeric: { precision: 0 } }).extend({ lockable: this.locked });\r\n        this.initiative = ko.computed(() => this.dexterity() + this.composure(), this);\r\n        this.experience = ko.observable(json.experience).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.morality = ko.observable(json.morality).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n\r\n        this.weapons = ko.observableArray(json.weapons.map(w => new Equipment(w.name, w.description, this.locked)));\r\n        this.equipment = ko.observableArray(json.equipment.map(e => new Equipment(e.name, e.description, this.locked)));\r\n        this.inventory = ko.observableArray(json.inventory.map(i => new InventoryItem(i.name, i.description, i.quantity, this.locked)));\r\n\r\n        this.notes = ko.observableArray(json.notes.map(n => new Note(n, this.locked)));\r\n\r\n        this.health = ko.computed(() => this.stamina() + this.size(), this);\r\n        this.damage = new Damage(this.health, json.bashing, json.lethal, json.aggravated, this.locked);\r\n\r\n        this.magic = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedMagic = ko.observable(json.usedMagic || 0).extend({ lockable: this.locked });\r\n        this.magic.subscribe(val => {\r\n            if (this.usedMagic() > val) CommandStack.instance.executeWithPrevious(new AttributeCommand(this.usedMagic, val, this.usedMagic()));\r\n        }, this);\r\n\r\n        this.willpower = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedWillpower = ko.observable(json.usedWillpower || 0).extend({ lockable: this.locked });\r\n        this.willpower.subscribe(val => {\r\n            if (this.usedWillpower() > val) CommandStack.instance.executeWithPrevious(new AttributeCommand(this.usedWillpower, val, this.usedWillpower()));\r\n        }, this);\r\n    }\r\n\r\n    public static newCharacter(): Character {\r\n        return new Character({\r\n            name: randomName(),\r\n            player: \"\",\r\n            age: 0,\r\n            vice: \"\",\r\n            virtue: \"\",\r\n            origins: \"\",\r\n            gender: \"\",\r\n            concept: \"\",\r\n            chronicle: \"\",\r\n\r\n            intelligence: 1,\r\n            strength: 1,\r\n            presence: 1,\r\n            wits: 1,\r\n            dexterity: 1,\r\n            manipulation: 1,\r\n            resolve: 1,\r\n            stamina: 1,\r\n            composure: 1,\r\n\r\n            academics: 0,\r\n            robotics: 0,\r\n            crafts: 0,\r\n            investigation: 0,\r\n            medicine: 0,\r\n            occult: 0,\r\n            politics: 0,\r\n            science: 0,\r\n\r\n            athletics: 0,\r\n            brawl: 0,\r\n            drive: 0,\r\n            ranged: 0,\r\n            larceny: 0,\r\n            stealth: 0,\r\n            survival: 0,\r\n            weaponry: 0,\r\n\r\n            animalKen: 0,\r\n            empathy: 0,\r\n            expression: 0,\r\n            intimidation: 0,\r\n            persuasion: 0,\r\n            socialize: 0,\r\n            streetwise: 0,\r\n            subterfuge: 0,\r\n\r\n            merits: [],\r\n            spells: [],\r\n            flaws: [],\r\n\r\n            size: 5,\r\n            armor: 0,\r\n            experience: 0,\r\n            morality: 7,\r\n\r\n            weapons: [],\r\n            equipment: [],\r\n            inventory: [],\r\n\r\n            notes: []\r\n        });\r\n    }\r\n\r\n    public static fromJson(json: CharacterJson): Character {\r\n        return new Character(json);\r\n    }\r\n\r\n    public onComponentClick(_: any, e: Event): void {\r\n        const element = <HTMLElement>e.currentTarget;\r\n        element.getElementsByTagName(\"input\")[0].focus();\r\n    }\r\n\r\n    public newItem<T>(observableArray: KnockoutObservableArray<T>, constructor: { createLockable(locked: KnockoutObservable<boolean>): T}): () => void {\r\n        return () => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionAddCommand(observableArray, constructor.createLockable(this.locked)));\r\n        };\r\n    }\r\n\r\n    public removeItem<T>(observableArray: KnockoutObservableArray<T>): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionRemoveCommand(observableArray, item));\r\n        };\r\n    }\r\n\r\n    public moveItem<T>(observableArray: KnockoutObservableArray<T>, direction: number): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            const index = observableArray.indexOf(item);\r\n            const newIndex = index + direction;\r\n\r\n            if (newIndex < 0 || newIndex >= observableArray().length) return;\r\n\r\n            CommandStack.instance.execute(new CollectionMoveCommand(observableArray, item, newIndex, index));\r\n        };\r\n    }\r\n\r\n    public clearUsed(usedObservable: KnockoutObservable<number>): () => void {\r\n        return () => {\r\n            CommandStack.instance.execute(new ClearUsedCommand(usedObservable));\r\n        };\r\n    }\r\n\r\n    public toJson(): CharacterJson {\r\n        return {\r\n            name: this.name(),\r\n            player: this.player(),\r\n            age: this.age(),\r\n            vice: this.vice(),\r\n            virtue: this.virtue(),\r\n            origins: this.origins(),\r\n            gender: this.gender(),\r\n            concept: this.concept(),\r\n            chronicle: this.chronicle(),\r\n\r\n            intelligence: this.intelligence(),\r\n            wits: this.wits(),\r\n            resolve: this.resolve(),\r\n            strength: this.strength(),\r\n            dexterity: this.dexterity(),\r\n            stamina: this.stamina(),\r\n            presence: this.presence(),\r\n            manipulation: this.manipulation(),\r\n            composure: this.composure(),\r\n\r\n            bashing: this.damage.bashing(),\r\n            lethal: this.damage.lethal(),\r\n            aggravated: this.damage.aggravated(),\r\n            usedMagic: this.usedMagic(),\r\n            usedWillpower: this.usedWillpower(),\r\n\r\n            academics: this.academics(),\r\n            robotics: this.robotics(),\r\n            crafts: this.crafts(),\r\n            investigation: this.investigation(),\r\n            medicine: this.medicine(),\r\n            occult: this.occult(),\r\n            politics: this.politics(),\r\n            science: this.science(),\r\n\r\n            athletics: this.athletics(),\r\n            brawl: this.brawl(),\r\n            drive: this.drive(),\r\n            ranged: this.ranged(),\r\n            larceny: this.larceny(),\r\n            stealth: this.stealth(),\r\n            survival: this.survival(),\r\n            weaponry: this.weaponry(),\r\n\r\n            animalKen: this.animalKen(),\r\n            empathy: this.empathy(),\r\n            expression: this.expression(),\r\n            intimidation: this.intimidation(),\r\n            persuasion: this.persuasion(),\r\n            socialize: this.socialize(),\r\n            streetwise: this.streetwise(),\r\n            subterfuge: this.subterfuge(),\r\n\r\n            merits: this.merits().map(m => { return { name: m.name(), value: m.value() }; }),\r\n            spells: this.spells().map(s => { return { name: s.name(), value: s.value() }; }),\r\n            flaws: this.flaws().map(f => { return { name: f.name(), value: f.value() }; }),\r\n\r\n            size: this.size(),\r\n            armor: this.armor(),\r\n            experience: this.experience(),\r\n            morality: this.morality(),\r\n\r\n            weapons: this.weapons().map(w => { return { name: w.name(), description: w.description() }; }),\r\n            equipment: this.equipment().map(e => { return { name: e.name(), description: e.description() }; }),\r\n            inventory: this.inventory().map(i => { return { name: i.name(), description: i.description(), quantity: i.quantity() }; }),\r\n\r\n            notes: this.notes().map(n => n.value())\r\n        };\r\n    }\r\n}\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\nfunction randomName() {\r\n    const firstNameLength = randomInteger(5, 12);\r\n    const lastNameLength = randomInteger(5, 12);\r\n    let firstName = \"\";\r\n    let lastName = \"\";\r\n\r\n    for (let i = 0; i < firstNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        firstName += newLetter;\r\n    }\r\n\r\n    for (let i = 0; i < lastNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        lastName += newLetter;\r\n    }\r\n\r\n    return `${firstName} ${lastName}`;\r\n}\r\n\r\ntype CharacterJson = {\r\n    name: string,\r\n    player: string,\r\n    age: number,\r\n    vice: string,\r\n    virtue: string,\r\n    origins: string,\r\n    gender: string,\r\n    concept: string,\r\n    chronicle: string,\r\n\r\n    intelligence: number,\r\n    strength: number,\r\n    presence: number,\r\n    wits: number,\r\n    dexterity: number,\r\n    manipulation: number,\r\n    resolve: number,\r\n    stamina: number,\r\n    composure: number,\r\n\r\n    academics: number,\r\n    robotics: number,\r\n    crafts: number,\r\n    investigation: number,\r\n    medicine: number,\r\n    occult: number,\r\n    politics: number,\r\n    science: number,\r\n\r\n    athletics: number,\r\n    brawl: number,\r\n    drive: number,\r\n    ranged: number,\r\n    larceny: number,\r\n    stealth: number,\r\n    survival: number,\r\n    weaponry: number,\r\n\r\n    animalKen: number,\r\n    empathy: number,\r\n    expression: number,\r\n    intimidation: number,\r\n    persuasion: number,\r\n    socialize: number,\r\n    streetwise: number,\r\n    subterfuge: number,\r\n\r\n    merits: Array<{ name: string, value: number }>,\r\n    spells: Array<{ name: string, value: number }>,\r\n    flaws: Array<{ name: string, value: number }>,\r\n\r\n    size: number,\r\n    armor: number,\r\n    experience: number,\r\n    morality: number,\r\n\r\n    weapons: Array<{ name: string, description: string }>,\r\n    equipment: Array<{ name: string, description: string }>,\r\n    inventory: Array<{ name: string, description: string, quantity: number }>,\r\n\r\n    notes: Array<string>,\r\n\r\n    bashing?: number,\r\n    lethal?: number,\r\n    aggravated?: number,\r\n\r\n    usedMagic?: number,\r\n    usedWillpower?: number\r\n};","import CommandStack from \"../Command/CommandStack\";\r\nimport AttributeCommand from \"../Command/AttributeCommand\";\r\nimport BatchCommand from \"../Command/BatchCommand\";\r\n\r\nexport default class Damage {\r\n    public totalHealth: KnockoutComputed<number>;\r\n    public bashing: KnockoutObservable<number>;\r\n    public lethal: KnockoutObservable<number>;\r\n    public aggravated: KnockoutObservable<number>;\r\n\r\n    public constructor(totalHealthObservable: KnockoutComputed<number>, bashing?: number, lethal?: number, aggravated?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.totalHealth = totalHealthObservable;\r\n        this.bashing = ko.observable(bashing || 0);\r\n        this.lethal = ko.observable(lethal || 0);\r\n        this.aggravated = ko.observable(aggravated || 0);\r\n\r\n        if (locked) {\r\n            this.bashing = this.bashing.extend({ lockable: locked });\r\n            this.lethal = this.lethal.extend({ lockable: locked });\r\n            this.aggravated = this.aggravated.extend({ lockable: locked });\r\n        }\r\n\r\n        totalHealthObservable.subscribe(val => {\r\n            let bashing = this.bashing();\r\n            let lethal = this.lethal();\r\n            let aggravated = this.aggravated();\r\n            while (bashing + lethal + aggravated > val) {\r\n                if (bashing > 0) {\r\n                    bashing--;\r\n                }\r\n                else if (lethal > 0) {\r\n                    lethal--;\r\n                }\r\n                else {\r\n                    aggravated--;\r\n                }\r\n            }\r\n            CommandStack.instance.executeWithPrevious(new BatchCommand(\r\n                new AttributeCommand(this.bashing, bashing, this.bashing()),\r\n                new AttributeCommand(this.lethal, lethal, this.lethal()),\r\n                new AttributeCommand(this.aggravated, aggravated, this.aggravated())\r\n            ));\r\n        }, this);\r\n    }\r\n\r\n    public anyEmpty(): boolean {\r\n        return this.bashing() + this.lethal() + this.aggravated() < this.totalHealth();\r\n    }\r\n\r\n    public addBashing(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.bashing, this.bashing() + 1, this.bashing()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addLethal(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addAggravated(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public clearAll(): void {\r\n        CommandStack.instance.execute(new BatchCommand(\r\n            new AttributeCommand(this.bashing, 0, this.bashing()),\r\n            new AttributeCommand(this.lethal, 0, this.lethal()),\r\n            new AttributeCommand(this.aggravated, 0, this.aggravated())\r\n        ));\r\n    }\r\n}","export default class Equipment {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n\r\n    public constructor(name?: string, description?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Equipment(null, null, locked);\r\n    }\r\n}","export default class InventoryItem {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n    public quantity: KnockoutObservable<number>;\r\n    public displayText: KnockoutComputed<string>;\r\n\r\n    public constructor(name?: string, description?: string, quantity?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n        this.quantity = ko.observable(quantity || 1);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n            this.quantity = this.quantity.extend({ lockable: locked });\r\n        }\r\n\r\n        this.displayText = ko.computed(this.getDisplayText, this);\r\n    }\r\n\r\n    public getDisplayText() : string {\r\n        return `${this.quantity()} ${this.name()}`;\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new InventoryItem(null, null, null, locked);\r\n    }\r\n}","export default class Merit {\r\n    public name: KnockoutObservable<string>;\r\n    public value: KnockoutObservable<number>;\r\n\r\n    public constructor(name?: string, value?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.value = ko.observable(value || 0);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Merit(null, null, locked);\r\n    }\r\n}","export default class Note {\r\n    public value: KnockoutObservable<string>;\r\n\r\n    public constructor(value?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.value = ko.observable(value || \"\");\r\n\r\n        if (locked) {\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Note(null, locked);\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class AttributeCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _newValue: number;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>, newValue: number, oldValue: number) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class BatchCommand implements ICommand {\r\n    private _commands: ICommand[];\r\n\r\n    public constructor(...commands: ICommand[]) {\r\n        this._commands = commands.filter(command => !command.doesNothing());\r\n    }\r\n\r\n    public execute(): void {\r\n        for (let i = 0; i < this._commands.length; i++) this._commands[i].execute();\r\n    }\r\n\r\n    public undo(): void {\r\n        for (let i = this._commands.length - 1; i >= 0; i--) this._commands[i].undo();\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._commands.every(command => command.doesNothing());\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class ClearUsedCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>) {\r\n        this._observable = observable;\r\n        this._oldValue = observable();\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(0);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._oldValue === 0;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionAddCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _newItem: T;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, newItem: T) {\r\n        this._observable = observable;\r\n        this._newItem = newItem;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable.push(this._newItem);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.remove(this._newItem);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionMoveCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _item: T;\r\n    private _newIndex: number;\r\n    private _oldIndex: number;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, item: T, newIndex: number, oldIndex: number) {\r\n        this._observable = observable;\r\n        this._item = item;\r\n        this._newIndex = newIndex;\r\n        this._oldIndex = oldIndex;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable.splice(this._oldIndex, 1);\r\n        this._observable.splice(this._newIndex, 0, this._item);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.splice(this._newIndex, 1);\r\n        this._observable.splice(this._oldIndex, 0, this._item);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newIndex === this._oldIndex;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionRemoveCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _item: T;\r\n    private _itemIndex: number;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, item: T) {\r\n        this._observable = observable;\r\n        this._item = item;\r\n        this._itemIndex = this._observable.indexOf(this._item);\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable.remove(this._item);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.splice(this._itemIndex, 0, this._item);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\nimport BatchCommand from \"./BatchCommand\";\r\n\r\nexport default class CommandStack {\r\n    private static _instance: CommandStack;\r\n    \r\n    private _undoStack: KnockoutObservableArray<ICommand>;\r\n    private _redoStack: KnockoutObservableArray<ICommand>;\r\n    private _currentlyExecuting: boolean;\r\n\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n\r\n    private constructor() {\r\n        this._undoStack = ko.observableArray([]);\r\n        this._redoStack = ko.observableArray([]);\r\n        this._currentlyExecuting = false;\r\n\r\n        this.canUndo = ko.computed(() => this._undoStack().length > 0, this);\r\n        this.canRedo = ko.computed(() => this._redoStack().length > 0, this);\r\n    }\r\n\r\n    public static get instance(): CommandStack {\r\n        if (!CommandStack._instance) CommandStack._instance = new CommandStack();\r\n\r\n        return CommandStack._instance;\r\n    }\r\n\r\n    // TODO: Maybe don't have this as singleton...\r\n    // Could have an instance for each character\r\n    // to preserve the stack across character selection\r\n    public reset(): void {\r\n        this._undoStack.removeAll();\r\n        this._redoStack.removeAll();\r\n    }\r\n\r\n    public execute(command: ICommand): void {\r\n        if (command.doesNothing()) return;\r\n\r\n        if (this._currentlyExecuting) {\r\n            window.setTimeout(() => this.execute(command), 1);\r\n            return;\r\n        }\r\n\r\n        this._currentlyExecuting = true;\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n        this._redoStack.removeAll();\r\n        this._currentlyExecuting = false;\r\n    }\r\n\r\n    public executeWithPrevious(command: ICommand): void {\r\n        if (command.doesNothing()) return;\r\n\r\n        if (this._currentlyExecuting) {\r\n            window.setTimeout(() => this.executeWithPrevious(command), 1);\r\n            return;\r\n        }\r\n\r\n        this._currentlyExecuting = true;\r\n        command.execute();\r\n        let previousCommand = this._undoStack.pop();\r\n        this._undoStack.push(new BatchCommand(previousCommand, command));\r\n        this._redoStack.removeAll();\r\n        this._currentlyExecuting = false;\r\n    }\r\n\r\n    public undo(): void {\r\n        if (this._undoStack().length === 0) return;\r\n        \r\n        const command = this._undoStack.pop();\r\n\r\n        command.undo();\r\n        this._redoStack.push(command);\r\n    }\r\n\r\n    public redo(): void {\r\n        if (this._redoStack().length === 0) return;\r\n\r\n        const command = this._redoStack.pop();\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class ObservableWriteCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservable<T>;\r\n    private _newValue: T;\r\n    private _oldValue: T;\r\n\r\n    public constructor(observable: KnockoutObservable<T>, newValue: T, oldValue: T) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class TextInputCommand implements ICommand {\r\n    private _observable: KnockoutObservable<string>;\r\n    private _newValue: string;\r\n    private _oldValue: string;\r\n\r\n    public constructor(observable: KnockoutObservable<string>, newValue: string, oldValue: string) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void  {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import { randomFloat, randomInteger } from \"./utils\";\r\n\r\nexport default class Dice {\r\n    public dicePool: KnockoutObservable<number>;\r\n    public rollRounds: KnockoutObservableArray<Array<number>>;\r\n    public rollingInProgress: KnockoutObservable<boolean>;\r\n    public totalDiceSuccesses: KnockoutComputed<number>;\r\n    public totalDiceSuccessesDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        this.dicePool = ko.observable(1);\r\n        this.rollRounds = ko.observableArray([]);\r\n        this.rollingInProgress = ko.observable(false);\r\n        this.totalDiceSuccesses = ko.computed(() => {\r\n            if (this.rollingInProgress() || this.rollRounds().length === 0) return -1;\r\n\r\n            return this.rollRounds().reduce((total: number, r: Array<number>) => {\r\n                return total + r.reduce((total: number, d: number) => total + (d > 7 ? 1 : 0), 0);\r\n            }, 0);\r\n        }, this);\r\n        this.totalDiceSuccessesDisplay = ko.computed(() => {\r\n            return this.totalDiceSuccesses() >= 0 ? \"\" + this.totalDiceSuccesses() : \"???\";\r\n        }, this);\r\n    }\r\n\r\n    public incrementDicePool(amount: number): () => void {\r\n        return () => {\r\n            let newAmount = this.dicePool() + amount;\r\n            if (newAmount < 1) newAmount = 1;\r\n            this.dicePool(newAmount);\r\n        };\r\n    }\r\n\r\n    public rollDice(): void {\r\n        const roller = new RollState(this);\r\n        roller.beginRoll();\r\n    }\r\n}\r\n\r\nclass RollState {\r\n    private _diceObj: Dice;\r\n    private _currentRound: number;\r\n    private _currentDice: number;\r\n    private _currentRoundRolls: number;\r\n    private _currentRoundResults: Array<number>;\r\n    private _nextRoundRolls: number;\r\n    private _intervalHandle: number;\r\n\r\n    public constructor(diceObj: Dice) {\r\n        this._diceObj = diceObj;\r\n        this._currentRound = 0;\r\n        this._currentDice = 0;\r\n        this._currentRoundRolls = diceObj.dicePool();\r\n        this._currentRoundResults = [];\r\n        this._nextRoundRolls = 0;\r\n        this._intervalHandle = null;\r\n    }\r\n\r\n    public beginRoll(): void {\r\n        this._diceObj.rollingInProgress(true);\r\n        this._diceObj.rollRounds.removeAll();\r\n        for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n        this._diceObj.rollRounds.push(this._currentRoundResults);\r\n\r\n        this._intervalHandle = window.setInterval(() => {\r\n            const nextRoll = randomInteger(1, 11);\r\n            if (nextRoll === 10) {\r\n                this._nextRoundRolls++;\r\n                const diceContainer = document.getElementsByClassName(\"diceContainer\")[0];\r\n                const critMessage = document.createElement(\"div\");\r\n                critMessage.classList.add(\"crit-message\");\r\n                critMessage.innerText = \"Crit!\";\r\n                critMessage.id = \"critMessage\";\r\n                diceContainer.appendChild(critMessage);\r\n                window.setTimeout(() => diceContainer.removeChild(critMessage), 1010);\r\n            }\r\n            this._currentRoundResults[this._currentDice] = nextRoll;\r\n            this._diceObj.rollRounds.replace(this._diceObj.rollRounds()[this._currentRound], this._currentRoundResults);\r\n            this._currentDice++;\r\n\r\n            if (this._currentDice === this._currentRoundRolls) {\r\n                if (this._nextRoundRolls === 0) {\r\n                    window.clearInterval(this._intervalHandle);\r\n                    this._diceObj.rollingInProgress(false);\r\n                    const critMessage = document.getElementById(\"critMessage\");\r\n                    if (critMessage) {\r\n                        critMessage.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                else {\r\n                    this._currentRound++;\r\n                    this._currentRoundRolls = this._nextRoundRolls;\r\n                    this._nextRoundRolls = 0;\r\n                    this._currentDice = 0;\r\n                    this._currentRoundResults = [];\r\n                    for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n                    this._diceObj.rollRounds.push(this._currentRoundResults);\r\n                }\r\n            }\r\n        }, 100);\r\n    }\r\n}","import Application from \"./Application\";\r\nimport Equipment from \"./Character/Equipment\";\r\nimport InventoryItem from \"./Character/InventoryItem\";\r\nimport Merit from \"./Character/Merit\";\r\nimport Note from \"./Character/Note\";\r\nimport { applyCustomKnockoutCode } from \"./utils\";\r\n\r\napplyCustomKnockoutCode();\r\n\r\nconst constructors = {\r\n    Equipment: Equipment,\r\n    InventoryItem: InventoryItem,\r\n    Merit: Merit,\r\n    Note: Note\r\n};\r\nObject.defineProperty(window, \"constructors\", { value: constructors });\r\n\r\nconst app = new Application();\r\nko.applyBindings(app);\r\n\r\n// Exposing the view model to the global state in case manual changes need to be applied\r\nObject.defineProperty(window, \"app\", { value: app });\r\n\r\nfunction toggleTooltips(enable: boolean): void {\r\n    if (enable) $(\"[data-toggle='tooltip']\").tooltip();\r\n    else $(\"[data-toggle='tooltip']\").tooltip(\"dispose\");\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    toggleTooltips(window.outerWidth >= 992);\r\n});\r\ntoggleTooltips(window.outerWidth >= 992);","import Damage from \"./Character/Damage\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\nimport AttributeCommand from \"./Command/AttributeCommand\";\r\nimport TextInputCommand from \"./Command/TextInputCommand\";\r\nimport ObservableWriteCommand from \"./Command/ObservableWriteCommand\";\r\n\r\nexport function randomInteger(minInclusive = 0, maxExclusive = 10): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function randomFloat(minInclusive = 0, maxExclusive = 1): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.random() * (maxExclusive - minInclusive) + minInclusive;\r\n}\r\n\r\nexport function applyCustomKnockoutCode() {\r\n    ko.bindingHandlers.dice = {\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservableArray<Array<number>>) => {\r\n            const rollRounds = valueAccessor()();\r\n            if (rollRounds.length === 0) {\r\n                element.innerHTML = \"\";\r\n                return;\r\n            }\r\n    \r\n            let divs = element.getElementsByClassName(\"dice-round\");\r\n            if (divs.length !== rollRounds.length) {\r\n                const newRound = document.createElement(\"div\");\r\n                newRound.classList.add(\"dice-round\");\r\n                const rolls = rollRounds[rollRounds.length - 1];\r\n                for (let i = 0; i < rolls.length; i++) {\r\n                    const span = document.createElement(\"span\");\r\n                    const delay = randomFloat(0, 0.5);\r\n                    span.style.animation = `rollingDice 0.5s linear -${delay}s infinite alternate`;\r\n                    span.classList.add(\"dice\");\r\n                    newRound.appendChild(span);\r\n                }\r\n                element.appendChild(newRound);\r\n                divs = element.getElementsByClassName(\"dice-round\");\r\n            }\r\n    \r\n            for (let i = 0; i < rollRounds.length; i++) {\r\n                const rolls = rollRounds[i];\r\n                const spans = divs[i].getElementsByClassName(\"dice\");\r\n                for (let j = 0; j < rolls.length; j++) {\r\n                    const roll = rolls[j];\r\n                    const span = <HTMLSpanElement>spans[j];\r\n    \r\n                    if (roll !== -1) {\r\n                        span.style.animation = null;\r\n                        span.style.backgroundImage = `url('images/dice-${roll}.png')`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.damageDisplay = {\r\n        init: (element: HTMLElement) => {\r\n            for (let i = 0; i < 15; i++) {\r\n                const span = document.createElement(\"span\");\r\n                span.classList.add(\"damage\");\r\n                span.classList.add(\"none\");\r\n                element.appendChild(span);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => Damage) => {\r\n            const damageObj = valueAccessor();\r\n            const spans = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < spans.length; i++) {\r\n                if (i < damageObj.aggravated()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.add(\"aggravated\");\r\n                }\r\n                else if (i - damageObj.aggravated() < damageObj.lethal()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"lethal\");\r\n                }\r\n                else if (i - damageObj.aggravated() - damageObj.lethal() < damageObj.bashing()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"bashing\");\r\n                }\r\n                else {\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"none\");\r\n                }\r\n    \r\n                if (i < damageObj.totalHealth()) {\r\n                    spans[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else {\r\n                    spans[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.attribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, canClear?: boolean }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                dot.classList.add(\"pointer\");\r\n                dot.dataset.toggle = \"tooltip\";\r\n                dot.title = \"\" + (i + 1);\r\n                $(dot).tooltip();\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n    \r\n            const canClear = valueAccessor().canClear;\r\n            if (canClear === true || typeof canClear === \"undefined\") {\r\n                const clearDot = document.createElement(\"div\");\r\n                clearDot.classList.add(\"clear-dot\");\r\n                clearDot.innerHTML = \"&times;\";\r\n                clearDot.dataset.toggle = \"tooltip\";\r\n                clearDot.title = \"Clear\";\r\n                clearDot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, 0, valueAccessor().value()));\r\n                });\r\n                element.appendChild(clearDot);\r\n                $(clearDot).tooltip();\r\n            }\r\n    \r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                element.appendChild(dot);\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByClassName(\"attribute-dot\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                const dot = <HTMLSpanElement>dots[i];\r\n                dot.style.backgroundColor = null;\r\n                dot.style.borderColor = null;\r\n                if (i < value) {\r\n                    dot.style.backgroundColor = \"var(--body-color)\";\r\n                    dot.style.borderColor = \"var(--body-color)\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.readOnlyAttribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, hideUnfilled?: boolean }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                dots[i].classList.remove(\"filled\");\r\n                if (i < value) {\r\n                    dots[i].classList.add(\"filled\");\r\n                    dots[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else if (valueAccessor().hideUnfilled) {\r\n                    dots[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.used = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < 12; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const used = valueAccessor().value();\r\n            const total = valueAccessor().total();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                if (i < used) dots[i].classList.add(\"filled-red\");\r\n                else dots[i].classList.remove(\"filled-red\");\r\n    \r\n                if (i < total) dots[i].classList.remove(\"HIDDEN\");\r\n                else dots[i].classList.add(\"HIDDEN\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.focusOnCreation = {\r\n        init: (element: HTMLInputElement | HTMLTextAreaElement) => {\r\n            window.setTimeout(() => {\r\n                if (element.value) return;\r\n                element.focus();\r\n            }, 1);\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.contextMenu = {\r\n        init: (element: HTMLElement, valueAccessor: () => () => void) => {\r\n            element.addEventListener(\"contextmenu\", e => {\r\n                e.preventDefault();\r\n                valueAccessor()();\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.undoableTextInput = {\r\n        init: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            const inputElement = <HTMLInputElement>element;\r\n            inputElement.addEventListener(\"change\", () => {\r\n                const oldValue = valueAccessor()();\r\n                const newValue = inputElement.value;\r\n                if (oldValue === newValue) return;\r\n\r\n                valueAccessor()(newValue);\r\n                if (valueAccessor()() === oldValue) return;\r\n                valueAccessor()(oldValue);\r\n\r\n                CommandStack.instance.execute(new TextInputCommand(valueAccessor(), newValue, oldValue));\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            (<HTMLInputElement>element).value = valueAccessor()();\r\n        }\r\n    };\r\n    \r\n    (<any>ko.extenders).lockable = (target: KnockoutObservable<any>, locked: KnockoutObservable<boolean>) => {\r\n        const result = ko.pureComputed({\r\n            read: target,\r\n            write: (newValue: any) => {\r\n                if (locked()) {\r\n                    target.notifySubscribers(target());\r\n                }\r\n                else {\r\n                    target(newValue);\r\n                    target.notifySubscribers(newValue);\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        return result;\r\n    };\r\n\r\n    // TODO: Make undoing an extender to not make it so I have to write special code\r\n    // for the various commands\r\n    (<any>ko.extenders).undoable = <T>(target: KnockoutObservable<T>, undoable: boolean) => {\r\n        if (!undoable) return target;\r\n\r\n        const result = ko.pureComputed({\r\n            read: target,\r\n            write: (newValue: T) => {\r\n                // const current = target();\r\n                // if (newValue !== current) {\r\n                //     CommandStack.instance.execute(new ObservableWriteCommand(target, newValue, current));\r\n                // }\r\n                CommandStack.instance.execute(new ObservableWriteCommand(target, newValue, target()));\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n\r\n        return result;\r\n    };\r\n    \r\n    (<any>ko.extenders).numeric = (target: any, args: { precision?: number, min?: number, max?: number }) => {\r\n        const precision = args.precision || 0;\r\n        const min = args.min || -Infinity;\r\n        const max = args.max || Infinity;\r\n    \r\n        // Create a writeable computed observable to intercept writes to our observable\r\n        const result = ko.pureComputed({\r\n            read: target, // Always return the original observable's value\r\n            write: (newValue: any) => {\r\n                const current = target();\r\n                const roundingMultiplier = Math.pow(10, precision);\r\n                const newValueAsNum = isNaN(newValue) ? 0 : +newValue;\r\n                let valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\r\n                if (valueToWrite < min) valueToWrite = min;\r\n                else if (valueToWrite > max) valueToWrite = max;\r\n    \r\n                // Only write if it changed\r\n                if (valueToWrite !== current) {\r\n                    target(valueToWrite);\r\n                }\r\n                else {\r\n                    // If the rounded value is the same, but a different value was written,\r\n                    // force a notification for the current field\r\n                    if (newValue !== current) {\r\n                        target.notifySubscribers(valueToWrite);\r\n                    }\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        // Initialize with current value to make sure it is rounded appropriately\r\n        result(target());\r\n    \r\n        // Return the new computed observable\r\n        return result;\r\n    };\r\n}"]}