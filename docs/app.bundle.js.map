{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/Application.ts","src/ts/Character/Character.ts","src/ts/Character/Damage.ts","src/ts/Character/Equipment.ts","src/ts/Character/InventoryItem.ts","src/ts/Character/Merit.ts","src/ts/Character/Note.ts","src/ts/Command/AttributeCommand.ts","src/ts/Command/CommandStack.ts","src/ts/Dice.ts","src/ts/main.ts","src/ts/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Character_1","Dice_1","CommandStack_1","Application","prototype","toggleClock","this","showClock","goBack","mode","_previousSection","window","location","hash","newCharacter","newChar","default","locked","characters","push","selectCharacter","character","charIndex","indexOf","characterId","instance","reset","deleteCharacter","confirm","name","id","remove","saveCharacters","localStorage","setItem","JSON","stringify","realCharacters","map","toJson","alert","downloadCharacter","json","dl","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","uploadCharacter","_this","ul","type","accept","addEventListener","file","files","reader","FileReader","onload","target","result","fromJson","parse","readAsText","toggleCharacterLock","switchMode","getElementById","undo","canUndo","redo","canRedo","savedCharacters","getItem","unshift","ghost","ko","observable","observableArray","computed","filter","dice","lockButtonClass","lockButtonIcon","currentTime","Date","currentTimeDisplay","time","hours","getHours","minutes","getMinutes","seconds","getSeconds","suffix","setInterval","ctrlKey","key","preventDefault","substring","$domElement","$","scrollTop","offset","top","Damage_1","Equipment_1","InventoryItem_1","Merit_1","Note_1","utils_1","Character","firstNameLength","randomInteger","lastNameLength","firstName","lastName","newLetter","alphabet","charAt","toUpperCase","randomName","player","age","vice","virtue","origins","gender","concept","chronicle","intelligence","strength","presence","wits","dexterity","manipulation","resolve","stamina","composure","academics","robotics","crafts","investigation","medicine","occult","politics","science","athletics","brawl","drive","ranged","larceny","stealth","survival","weaponry","animalKen","empathy","expression","intimidation","persuasion","socialize","streetwise","subterfuge","merits","spells","flaws","size","armor","experience","morality","weapons","equipment","inventory","notes","onComponentClick","_","currentTarget","getElementsByTagName","focus","newItem","constructor","createLockable","removeItem","item","moveItem","direction","index","newIndex","splice","clearUsed","usedObservable","bashing","damage","lethal","aggravated","usedMagic","usedWillpower","m","value","s","w","description","quantity","extend","lockable","numeric","precision","min","max","speed","defense","Math","initiative","health","magic","subscribe","val","willpower","Damage","anyEmpty","totalHealth","addBashing","addLethal","addAggravated","clearAll","totalHealthObservable","Equipment","InventoryItem","getDisplayText","displayText","Merit","Note","AttributeCommand","execute","_observable","_newValue","_oldValue","newValue","oldValue","CommandStack","Object","defineProperty","_instance","_undoStack","removeAll","_redoStack","command","pop","Dice","incrementDicePool","amount","newAmount","dicePool","rollDice","RollState","beginRoll","rollRounds","rollingInProgress","totalDiceSuccesses","reduce","total","d","totalDiceSuccessesDisplay","_diceObj","_currentRoundRolls","_currentRoundResults","_intervalHandle","nextRoll","_nextRoundRolls","diceContainer_1","getElementsByClassName","critMessage_1","classList","add","innerText","setTimeout","_currentDice","replace","_currentRound","clearInterval","critMessage","diceObj","Application_1","applyCustomKnockoutCode","constructors","app","toggleTooltips","enable","tooltip","applyBindings","outerWidth","AttributeCommand_1","randomFloat","minInclusive","maxExclusive","_a","random","floor","bindingHandlers","update","element","valueAccessor","divs","newRound","rolls","span","delay","animation","spans","j","roll","backgroundImage","innerHTML","damageDisplay","init","damageObj","attribute","dots","dot","dataset","toggle","title","forEach","canClear","clearDot","backgroundColor","borderColor","readOnlyAttribute","hideUnfilled","used","focusOnCreation","contextMenu","extenders","pureComputed","read","write","notifySubscribers","notify","args","Infinity","current","roundingMultiplier","pow","newValueAsNum","isNaN","valueToWrite","round"],"mappings":"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","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Character from \"./Character/Character\";\r\nimport Dice from \"./Dice\";\r\nimport swal from \"sweetalert\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\n\r\nexport default class Application {\r\n    public mode: KnockoutObservable<string>;\r\n    public characterId: KnockoutObservable<number>;\r\n    public characters: KnockoutObservableArray<Character>;\r\n    public realCharacters: KnockoutComputed<Array<Character>>;\r\n    public character: KnockoutComputed<Character>;\r\n    public dice: Dice;\r\n    public lockButtonClass: KnockoutComputed<string>;\r\n    public lockButtonIcon: KnockoutComputed<string>;\r\n    private _previousSection: string;\r\n    public showClock: KnockoutObservable<boolean>;\r\n    public currentTime: KnockoutObservable<Date>;\r\n    public currentTimeDisplay: KnockoutComputed<string>;\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n\r\n    public constructor() {\r\n        const savedCharacters: Array<Character> = (JSON.parse(window.localStorage.getItem(\"characters\")) || []).map(Character.fromJson);\r\n        savedCharacters.unshift(Character.newCharacter());\r\n        savedCharacters[0].ghost = true;\r\n\r\n        this.mode = ko.observable(\"list\");\r\n        this.characterId = ko.observable(0);\r\n        this.characters = ko.observableArray(savedCharacters);\r\n        this.realCharacters = ko.computed(() => this.characters().filter(c => !c.ghost), this);\r\n        this.character = ko.computed(() => this.characters()[this.characterId()], this);\r\n        this.dice = new Dice();\r\n        this.lockButtonClass = ko.computed(() => this.character().locked() ? \"btn-danger\" : \"btn-outline-success\", this);\r\n        this.lockButtonIcon = ko.computed(() => this.character().locked() ? \"fas fa-lock\" : \"fas fa-lock-open\", this);\r\n        this._previousSection = null;\r\n        this.showClock = ko.observable(false);\r\n        this.currentTime = ko.observable(new Date());\r\n\r\n        this.currentTimeDisplay = ko.computed(() => {\r\n            const time = this.currentTime();\r\n            let hours = time.getHours();\r\n            const minutes = time.getMinutes();\r\n            const seconds = time.getSeconds();\r\n            const suffix = hours < 12 ? \"AM\" : \"PM\";\r\n            const minutePrefix = minutes < 10 ? \"0\" : \"\";\r\n            const secondPrefix = seconds < 10 ? \"0\" : \"\";\r\n            if (hours > 12) hours -= 12;\r\n            return `${hours}:${minutePrefix}${minutes}:${secondPrefix}${seconds} ${suffix}`;\r\n        }, this);\r\n\r\n        this.canUndo = ko.computed(() => CommandStack.instance.canUndo() && !this.character().locked(), this);\r\n        this.canRedo = ko.computed(() => CommandStack.instance.canRedo() && !this.character().locked(), this);\r\n\r\n        window.setInterval(() => {\r\n            this.currentTime(new Date());\r\n        }, 1000);\r\n\r\n        window.addEventListener(\"keydown\", e => {\r\n            if (e.ctrlKey !== true) return;\r\n\r\n            switch (e.key) {\r\n                case \"s\":\r\n                    e.preventDefault();\r\n                    this.saveCharacters();\r\n                    break;\r\n                case \"z\":\r\n                    e.preventDefault();\r\n                    this.undo();\r\n                    break;\r\n                case \"Z\":\r\n                    e.preventDefault();\r\n                    this.redo();\r\n                    break;\r\n            }\r\n        });\r\n\r\n        window.addEventListener(\"hashchange\", e => {\r\n            const hash = window.location.hash.substring(1);\r\n            if (!hash) return;\r\n\r\n            var offset = 80; // TODO: Don't hardcode this maybe?\r\n            var $domElement = $(`#${hash}`);\r\n            $(window).scrollTop($domElement.offset().top - offset);\r\n        });\r\n    }\r\n\r\n    public toggleClock(): void {\r\n        this.showClock(!this.showClock());\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.mode() === \"sheet\") this.mode(\"list\");\r\n        else {\r\n            this.mode(\"sheet\");\r\n\r\n            if (this._previousSection) window.location.hash = this._previousSection;\r\n        }\r\n    }\r\n\r\n    public newCharacter(): void {\r\n        const newChar = Character.newCharacter();\r\n        newChar.locked(false);\r\n        this.characters.push(newChar);\r\n        this.selectCharacter(newChar);\r\n    }\r\n\r\n    public selectCharacter(character: Character): void {\r\n        const charIndex = this.characters.indexOf(character);\r\n        if (this.characterId() !== charIndex) {\r\n            this.characterId(charIndex);\r\n            CommandStack.instance.reset();\r\n        }\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public deleteCharacter(character: Character): void {\r\n        // swal({\r\n        //     title: `Delete ${this.character().name()}`,\r\n        //     text: \"Are you sure? (As long as you don't save, your character won't be gone.)\",\r\n        //     icon: \"warning\",\r\n        //     buttons: [\"Cancel\", \"Delete\"],\r\n        //     dangerMode: true\r\n        // })\r\n        // .then((willDelete: boolean) => {\r\n        //     if (willDelete) {\r\n        //         const id = this.characterId();\r\n        //         this.characterId(0);\r\n        //         this.characters.remove(this.characters()[id]);\r\n        //         this.mode(\"list\");\r\n        //     }\r\n        // });\r\n        if (this.character().locked()) return;\r\n        if (confirm(`Are you sure you want to delete ${this.character().name()}? (As long as you don't save, your character won't be gone.)`)) {\r\n            const id = this.characterId();\r\n            this.characterId(0);\r\n            this.characters.remove(this.characters()[id]);\r\n            this.mode(\"list\");\r\n        }\r\n    }\r\n\r\n    public saveCharacters(): void {\r\n        window.localStorage.setItem(\"characters\", JSON.stringify(this.realCharacters().map(c => c.toJson())));\r\n        // swal(\"Characters saved successfully!\", {\r\n        //     buttons: [],\r\n        //     timer: 1000,\r\n        //     icon: \"success\"\r\n        // });\r\n        alert(\"Characters saved successfully!\");\r\n    }\r\n\r\n    public downloadCharacter(): void {\r\n        const json = JSON.stringify(this.character().toJson());\r\n\r\n        const dl = document.createElement(\"a\");\r\n        dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${encodeURIComponent(json)}`);\r\n        dl.setAttribute(\"download\", `${this.character().name()}.json`);\r\n\r\n        dl.style.display = \"none\";\r\n        document.body.appendChild(dl);\r\n\r\n        dl.click();\r\n\r\n        document.body.removeChild(dl);\r\n    }\r\n\r\n    public uploadCharacter(): void {\r\n        const ul = document.createElement(\"input\");\r\n        ul.type = \"file\";\r\n        ul.accept = \".json\";\r\n        ul.style.display = \"none\";\r\n\r\n        ul.addEventListener(\"change\", e => {\r\n            const file = ul.files[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const json = e.target.result;\r\n                this.characters.push(Character.fromJson(JSON.parse(json)));\r\n                this.characterId(this.characters().length - 1);\r\n                this.mode(\"sheet\");\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n\r\n        document.body.appendChild(ul);\r\n\r\n        ul.click();\r\n\r\n        document.body.removeChild(ul);\r\n    }\r\n\r\n    public toggleCharacterLock(): void {\r\n        const character = this.character();\r\n        character.locked(!character.locked());\r\n    }\r\n\r\n    public switchMode(mode: string): () => void {\r\n        return () => {\r\n            if (this.mode() !== \"list\" && document.getElementById(mode)) {\r\n                this._previousSection = mode;\r\n            }\r\n            else this._previousSection = null;\r\n\r\n            window.location.hash = \"\";\r\n            this.mode(mode);\r\n        }\r\n    }\r\n\r\n    public undo(): void {\r\n        if (!this.canUndo()) return;\r\n        CommandStack.instance.undo();\r\n    }\r\n\r\n    public redo(): void {\r\n        if (!this.canRedo()) return;\r\n        CommandStack.instance.redo();\r\n    }\r\n}","import Damage from \"./Damage\";\r\nimport Equipment from \"./Equipment\";\r\nimport InventoryItem from \"./InventoryItem\";\r\nimport Merit from \"./Merit\";\r\nimport Note from \"./Note\";\r\nimport { randomInteger } from \"../utils\";\r\n\r\nexport default class Character {\r\n    public ghost: boolean = false;\r\n    public locked: KnockoutObservable<boolean> = ko.observable(true);\r\n\r\n    public name: KnockoutObservable<string>;\r\n    public player: KnockoutObservable<string>;\r\n    public age: KnockoutObservable<number>;\r\n    public vice: KnockoutObservable<string>;\r\n    public virtue: KnockoutObservable<string>;\r\n    public origins: KnockoutObservable<string>;\r\n    public gender: KnockoutObservable<string>;\r\n    public concept: KnockoutObservable<string>;\r\n    public chronicle: KnockoutObservable<string>;\r\n\r\n    public intelligence: KnockoutObservable<number>;\r\n    public strength: KnockoutObservable<number>;\r\n    public presence: KnockoutObservable<number>;\r\n    public wits: KnockoutObservable<number>;\r\n    public dexterity: KnockoutObservable<number>;\r\n    public manipulation: KnockoutObservable<number>;\r\n    public resolve: KnockoutObservable<number>;\r\n    public stamina: KnockoutObservable<number>;\r\n    public composure: KnockoutObservable<number>;\r\n\r\n    public academics: KnockoutObservable<number>;\r\n    public robotics: KnockoutObservable<number>;\r\n    public crafts: KnockoutObservable<number>;\r\n    public investigation: KnockoutObservable<number>;\r\n    public medicine: KnockoutObservable<number>;\r\n    public occult: KnockoutObservable<number>;\r\n    public politics: KnockoutObservable<number>;\r\n    public science: KnockoutObservable<number>;\r\n    \r\n    public athletics: KnockoutObservable<number>;\r\n    public brawl: KnockoutObservable<number>;\r\n    public drive: KnockoutObservable<number>;\r\n    public ranged: KnockoutObservable<number>;\r\n    public larceny: KnockoutObservable<number>;\r\n    public stealth: KnockoutObservable<number>;\r\n    public survival: KnockoutObservable<number>;\r\n    public weaponry: KnockoutObservable<number>;\r\n\r\n    public animalKen: KnockoutObservable<number>;\r\n    public empathy: KnockoutObservable<number>;\r\n    public expression: KnockoutObservable<number>;\r\n    public intimidation: KnockoutObservable<number>;\r\n    public persuasion: KnockoutObservable<number>;\r\n    public socialize: KnockoutObservable<number>;\r\n    public streetwise: KnockoutObservable<number>;\r\n    public subterfuge: KnockoutObservable<number>;\r\n\r\n    public merits: KnockoutObservableArray<Merit>;\r\n    public spells: KnockoutObservableArray<Merit>;\r\n    public flaws: KnockoutObservableArray<Merit>;\r\n\r\n    public size: KnockoutObservable<number>;\r\n    public speed: KnockoutComputed<number>;\r\n    public defense: KnockoutComputed<number>;\r\n    public armor: KnockoutObservable<number>;\r\n    public initiative: KnockoutComputed<number>;\r\n    public experience: KnockoutObservable<number>;\r\n    public morality: KnockoutObservable<number>;\r\n\r\n    public weapons: KnockoutObservableArray<Equipment>;\r\n    public equipment: KnockoutObservableArray<Equipment>;\r\n    public inventory: KnockoutObservableArray<InventoryItem>;\r\n\r\n    public notes: KnockoutObservableArray<Note>;\r\n\r\n    public health: KnockoutComputed<number>;\r\n    public damage: Damage;\r\n\r\n    public magic: KnockoutComputed<number>;\r\n    public usedMagic: KnockoutObservable<number>;\r\n\r\n    public willpower: KnockoutComputed<number>;\r\n    public usedWillpower: KnockoutObservable<number>;\r\n\r\n    public constructor(json: CharacterJson) {\r\n        this.name = ko.observable(json.name).extend({ lockable: this.locked });\r\n        this.player = ko.observable(json.player).extend({ lockable: this.locked });\r\n        this.age = ko.observable(json.age).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.vice = ko.observable(json.vice).extend({ lockable: this.locked });\r\n        this.virtue = ko.observable(json.virtue).extend({ lockable: this.locked });\r\n        this.origins = ko.observable(json.origins).extend({ lockable: this.locked });\r\n        this.gender = ko.observable(json.gender).extend({ lockable: this.locked });\r\n        this.concept = ko.observable(json.concept).extend({ lockable: this.locked });\r\n        this.chronicle = ko.observable(json.chronicle).extend({ lockable: this.locked });\r\n\r\n        this.intelligence = ko.observable(json.intelligence).extend({ lockable: this.locked });\r\n        this.strength = ko.observable(json.strength).extend({ lockable: this.locked });\r\n        this.presence = ko.observable(json.presence).extend({ lockable: this.locked });\r\n        this.wits = ko.observable(json.wits).extend({ lockable: this.locked });\r\n        this.dexterity = ko.observable(json.dexterity).extend({ lockable: this.locked });\r\n        this.manipulation = ko.observable(json.manipulation).extend({ lockable: this.locked });\r\n        this.resolve = ko.observable(json.resolve).extend({ lockable: this.locked });\r\n        this.stamina = ko.observable(json.stamina).extend({ lockable: this.locked });\r\n        this.composure = ko.observable(json.composure).extend({ lockable: this.locked });\r\n\r\n        this.academics = ko.observable(json.academics).extend({ lockable: this.locked });\r\n        this.robotics = ko.observable(json.robotics).extend({ lockable: this.locked });\r\n        this.crafts = ko.observable(json.crafts).extend({ lockable: this.locked });\r\n        this.investigation = ko.observable(json.investigation).extend({ lockable: this.locked });\r\n        this.medicine = ko.observable(json.medicine).extend({ lockable: this.locked });\r\n        this.occult = ko.observable(json.occult).extend({ lockable: this.locked });\r\n        this.politics = ko.observable(json.politics).extend({ lockable: this.locked });\r\n        this.science = ko.observable(json.science).extend({ lockable: this.locked });\r\n\r\n        this.athletics = ko.observable(json.athletics).extend({ lockable: this.locked });\r\n        this.brawl = ko.observable(json.brawl).extend({ lockable: this.locked });\r\n        this.drive = ko.observable(json.drive).extend({ lockable: this.locked });\r\n        this.ranged = ko.observable(json.ranged).extend({ lockable: this.locked });\r\n        this.larceny = ko.observable(json.larceny).extend({ lockable: this.locked });\r\n        this.stealth = ko.observable(json.stealth).extend({ lockable: this.locked });\r\n        this.survival = ko.observable(json.survival).extend({ lockable: this.locked });\r\n        this.weaponry = ko.observable(json.weaponry).extend({ lockable: this.locked });\r\n\r\n        this.animalKen = ko.observable(json.animalKen).extend({ lockable: this.locked });\r\n        this.empathy = ko.observable(json.empathy).extend({ lockable: this.locked });\r\n        this.expression = ko.observable(json.expression).extend({ lockable: this.locked });\r\n        this.intimidation = ko.observable(json.intimidation).extend({ lockable: this.locked });\r\n        this.persuasion = ko.observable(json.persuasion).extend({ lockable: this.locked });\r\n        this.socialize = ko.observable(json.socialize).extend({ lockable: this.locked });\r\n        this.streetwise = ko.observable(json.streetwise).extend({ lockable: this.locked });\r\n        this.subterfuge = ko.observable(json.subterfuge).extend({ lockable: this.locked });\r\n\r\n        this.merits = ko.observableArray(json.merits.map(m => new Merit(m.name, m.value, this.locked)));\r\n        this.spells = ko.observableArray(json.spells.map(s => new Merit(s.name, s.value, this.locked)));\r\n        this.flaws = ko.observableArray(json.flaws.map(f => new Merit(f.name, f.value, this.locked)));\r\n\r\n        this.size = ko.observable(json.size).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n        this.speed = ko.computed(() => this.strength() + this.dexterity() + 5, this);\r\n        this.defense = ko.computed(() => Math.min(this.dexterity(), this.wits()), this);\r\n        this.armor = ko.observable(json.armor).extend({ numeric: { precision: 0 } }).extend({ lockable: this.locked });\r\n        this.initiative = ko.computed(() => this.dexterity() + this.composure(), this);\r\n        this.experience = ko.observable(json.experience).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.morality = ko.observable(json.morality).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n\r\n        this.weapons = ko.observableArray(json.weapons.map(w => new Equipment(w.name, w.description, this.locked)));\r\n        this.equipment = ko.observableArray(json.equipment.map(e => new Equipment(e.name, e.description, this.locked)));\r\n        this.inventory = ko.observableArray(json.inventory.map(i => new InventoryItem(i.name, i.description, i.quantity, this.locked)));\r\n\r\n        this.notes = ko.observableArray(json.notes.map(n => new Note(n, this.locked)));\r\n\r\n        this.health = ko.computed(() => this.stamina() + this.size(), this);\r\n        this.damage = new Damage(this.health, json.bashing, json.lethal, json.aggravated, this.locked);\r\n\r\n        this.magic = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedMagic = ko.observable(json.usedMagic || 0).extend({ lockable: this.locked });\r\n        this.magic.subscribe(val => {\r\n            if (this.usedMagic() > val) this.usedMagic(val);\r\n        }, this);\r\n\r\n        this.willpower = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedWillpower = ko.observable(json.usedWillpower || 0).extend({ lockable: this.locked });\r\n        this.willpower.subscribe(val => {\r\n            if (this.usedWillpower() > val) this.usedWillpower(val);\r\n        }, this);\r\n    }\r\n\r\n    public static newCharacter(): Character {\r\n        return new Character({\r\n            name: randomName(),\r\n            player: \"\",\r\n            age: 0,\r\n            vice: \"\",\r\n            virtue: \"\",\r\n            origins: \"\",\r\n            gender: \"\",\r\n            concept: \"\",\r\n            chronicle: \"\",\r\n\r\n            intelligence: 1,\r\n            strength: 1,\r\n            presence: 1,\r\n            wits: 1,\r\n            dexterity: 1,\r\n            manipulation: 1,\r\n            resolve: 1,\r\n            stamina: 1,\r\n            composure: 1,\r\n\r\n            academics: 0,\r\n            robotics: 0,\r\n            crafts: 0,\r\n            investigation: 0,\r\n            medicine: 0,\r\n            occult: 0,\r\n            politics: 0,\r\n            science: 0,\r\n\r\n            athletics: 0,\r\n            brawl: 0,\r\n            drive: 0,\r\n            ranged: 0,\r\n            larceny: 0,\r\n            stealth: 0,\r\n            survival: 0,\r\n            weaponry: 0,\r\n\r\n            animalKen: 0,\r\n            empathy: 0,\r\n            expression: 0,\r\n            intimidation: 0,\r\n            persuasion: 0,\r\n            socialize: 0,\r\n            streetwise: 0,\r\n            subterfuge: 0,\r\n\r\n            merits: [],\r\n            spells: [],\r\n            flaws: [],\r\n\r\n            size: 5,\r\n            armor: 0,\r\n            experience: 0,\r\n            morality: 7,\r\n\r\n            weapons: [],\r\n            equipment: [],\r\n            inventory: [],\r\n\r\n            notes: []\r\n        });\r\n    }\r\n\r\n    public static fromJson(json: CharacterJson): Character {\r\n        return new Character(json);\r\n    }\r\n\r\n    public onComponentClick(_: any, e: Event): void {\r\n        const element = <HTMLElement>e.currentTarget;\r\n        element.getElementsByTagName(\"input\")[0].focus();\r\n    }\r\n\r\n    public newItem<T>(observableArray: KnockoutObservableArray<T>, constructor: { createLockable(locked: KnockoutObservable<boolean>): T}): () => void {\r\n        return () => {\r\n            if (this.locked()) return;\r\n            observableArray.push(constructor.createLockable(this.locked));\r\n        };\r\n    }\r\n\r\n    public removeItem<T>(observableArray: KnockoutObservableArray<T>): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            observableArray.remove(item);\r\n        };\r\n    }\r\n\r\n    public moveItem<T>(observableArray: KnockoutObservableArray<T>, direction: number): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            const index = observableArray.indexOf(item);\r\n            const newIndex = index + direction;\r\n\r\n            if (newIndex < 0 || newIndex >= observableArray().length) return;\r\n\r\n            observableArray.splice(index, 1);\r\n            observableArray.splice(newIndex, 0, item);\r\n        };\r\n    }\r\n\r\n    public clearUsed(usedObservable: KnockoutObservable<number>): () => void {\r\n        return () => {\r\n            usedObservable(0);\r\n        };\r\n    }\r\n\r\n    public toJson(): CharacterJson {\r\n        return {\r\n            name: this.name(),\r\n            player: this.player(),\r\n            age: this.age(),\r\n            vice: this.vice(),\r\n            virtue: this.virtue(),\r\n            origins: this.origins(),\r\n            gender: this.gender(),\r\n            concept: this.concept(),\r\n            chronicle: this.chronicle(),\r\n\r\n            intelligence: this.intelligence(),\r\n            wits: this.wits(),\r\n            resolve: this.resolve(),\r\n            strength: this.strength(),\r\n            dexterity: this.dexterity(),\r\n            stamina: this.stamina(),\r\n            presence: this.presence(),\r\n            manipulation: this.manipulation(),\r\n            composure: this.composure(),\r\n\r\n            bashing: this.damage.bashing(),\r\n            lethal: this.damage.lethal(),\r\n            aggravated: this.damage.aggravated(),\r\n            usedMagic: this.usedMagic(),\r\n            usedWillpower: this.usedWillpower(),\r\n\r\n            academics: this.academics(),\r\n            robotics: this.robotics(),\r\n            crafts: this.crafts(),\r\n            investigation: this.investigation(),\r\n            medicine: this.medicine(),\r\n            occult: this.occult(),\r\n            politics: this.politics(),\r\n            science: this.science(),\r\n\r\n            athletics: this.athletics(),\r\n            brawl: this.brawl(),\r\n            drive: this.drive(),\r\n            ranged: this.ranged(),\r\n            larceny: this.larceny(),\r\n            stealth: this.stealth(),\r\n            survival: this.survival(),\r\n            weaponry: this.weaponry(),\r\n\r\n            animalKen: this.animalKen(),\r\n            empathy: this.empathy(),\r\n            expression: this.expression(),\r\n            intimidation: this.intimidation(),\r\n            persuasion: this.persuasion(),\r\n            socialize: this.socialize(),\r\n            streetwise: this.streetwise(),\r\n            subterfuge: this.subterfuge(),\r\n\r\n            merits: this.merits().map(m => { return { name: m.name(), value: m.value() }; }),\r\n            spells: this.spells().map(s => { return { name: s.name(), value: s.value() }; }),\r\n            flaws: this.flaws().map(f => { return { name: f.name(), value: f.value() }; }),\r\n\r\n            size: this.size(),\r\n            armor: this.armor(),\r\n            experience: this.experience(),\r\n            morality: this.morality(),\r\n\r\n            weapons: this.weapons().map(w => { return { name: w.name(), description: w.description() }; }),\r\n            equipment: this.equipment().map(e => { return { name: e.name(), description: e.description() }; }),\r\n            inventory: this.inventory().map(i => { return { name: i.name(), description: i.description(), quantity: i.quantity() }; }),\r\n\r\n            notes: this.notes().map(n => n.value())\r\n        };\r\n    }\r\n}\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\nfunction randomName() {\r\n    const firstNameLength = randomInteger(5, 12);\r\n    const lastNameLength = randomInteger(5, 12);\r\n    let firstName = \"\";\r\n    let lastName = \"\";\r\n\r\n    for (let i = 0; i < firstNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        firstName += newLetter;\r\n    }\r\n\r\n    for (let i = 0; i < lastNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        lastName += newLetter;\r\n    }\r\n\r\n    return `${firstName} ${lastName}`;\r\n}\r\n\r\ntype CharacterJson = {\r\n    name: string,\r\n    player: string,\r\n    age: number,\r\n    vice: string,\r\n    virtue: string,\r\n    origins: string,\r\n    gender: string,\r\n    concept: string,\r\n    chronicle: string,\r\n\r\n    intelligence: number,\r\n    strength: number,\r\n    presence: number,\r\n    wits: number,\r\n    dexterity: number,\r\n    manipulation: number,\r\n    resolve: number,\r\n    stamina: number,\r\n    composure: number,\r\n\r\n    academics: number,\r\n    robotics: number,\r\n    crafts: number,\r\n    investigation: number,\r\n    medicine: number,\r\n    occult: number,\r\n    politics: number,\r\n    science: number,\r\n\r\n    athletics: number,\r\n    brawl: number,\r\n    drive: number,\r\n    ranged: number,\r\n    larceny: number,\r\n    stealth: number,\r\n    survival: number,\r\n    weaponry: number,\r\n\r\n    animalKen: number,\r\n    empathy: number,\r\n    expression: number,\r\n    intimidation: number,\r\n    persuasion: number,\r\n    socialize: number,\r\n    streetwise: number,\r\n    subterfuge: number,\r\n\r\n    merits: Array<{ name: string, value: number }>,\r\n    spells: Array<{ name: string, value: number }>,\r\n    flaws: Array<{ name: string, value: number }>,\r\n\r\n    size: number,\r\n    armor: number,\r\n    experience: number,\r\n    morality: number,\r\n\r\n    weapons: Array<{ name: string, description: string }>,\r\n    equipment: Array<{ name: string, description: string }>,\r\n    inventory: Array<{ name: string, description: string, quantity: number }>,\r\n\r\n    notes: Array<string>,\r\n\r\n    bashing?: number,\r\n    lethal?: number,\r\n    aggravated?: number,\r\n\r\n    usedMagic?: number,\r\n    usedWillpower?: number\r\n};","export default class Damage {\r\n    public totalHealth: KnockoutComputed<number>;\r\n    public bashing: KnockoutObservable<number>;\r\n    public lethal: KnockoutObservable<number>;\r\n    public aggravated: KnockoutObservable<number>;\r\n\r\n    public constructor(totalHealthObservable: KnockoutComputed<number>, bashing?: number, lethal?: number, aggravated?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.totalHealth = totalHealthObservable;\r\n        this.bashing = ko.observable(bashing || 0);\r\n        this.lethal = ko.observable(lethal || 0);\r\n        this.aggravated = ko.observable(aggravated || 0);\r\n\r\n        if (locked) {\r\n            this.bashing = this.bashing.extend({ lockable: locked });\r\n            this.lethal = this.lethal.extend({ lockable: locked });\r\n            this.aggravated = this.aggravated.extend({ lockable: locked });\r\n        }\r\n\r\n        totalHealthObservable.subscribe(val => {\r\n            while (this.bashing() + this.lethal() + this.aggravated() > val) {\r\n                if (this.bashing() > 0) {\r\n                    this.bashing(this.bashing() - 1);\r\n                }\r\n                else if (this.lethal() > 0) {\r\n                    this.lethal(this.lethal() - 1);\r\n                }\r\n                else {\r\n                    this.aggravated(this.aggravated() - 1);\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    public anyEmpty(): boolean {\r\n        return this.bashing() + this.lethal() + this.aggravated() < this.totalHealth();\r\n    }\r\n\r\n    public addBashing(): void {\r\n        if (this.anyEmpty()) {\r\n            this.bashing(this.bashing() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addLethal(): void {\r\n        if (this.anyEmpty()) {\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addAggravated(): void {\r\n        if (this.anyEmpty()) {\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public clearAll(): void {\r\n        this.bashing(0);\r\n        this.lethal(0);\r\n        this.aggravated(0);\r\n    }\r\n}","export default class Equipment {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n\r\n    public constructor(name?: string, description?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Equipment(null, null, locked);\r\n    }\r\n}","export default class InventoryItem {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n    public quantity: KnockoutObservable<number>;\r\n    public displayText: KnockoutComputed<string>;\r\n\r\n    public constructor(name?: string, description?: string, quantity?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n        this.quantity = ko.observable(quantity || 1);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n            this.quantity = this.quantity.extend({ lockable: locked });\r\n        }\r\n\r\n        this.displayText = ko.computed(this.getDisplayText, this);\r\n    }\r\n\r\n    public getDisplayText() : string {\r\n        return `${this.quantity()} ${this.name()}`;\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new InventoryItem(null, null, null, locked);\r\n    }\r\n}","export default class Merit {\r\n    public name: KnockoutObservable<string>;\r\n    public value: KnockoutObservable<number>;\r\n\r\n    public constructor(name?: string, value?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.value = ko.observable(value || 0);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Merit(null, null, locked);\r\n    }\r\n}","export default class Note {\r\n    public value: KnockoutObservable<string>;\r\n\r\n    public constructor(value?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.value = ko.observable(value || \"\");\r\n\r\n        if (locked) {\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Note(null, locked);\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class AttributeCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _newValue: number;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>, newValue: number, oldValue: number) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CommandStack {\r\n    private static _instance: CommandStack;\r\n    \r\n    private _undoStack: KnockoutObservableArray<ICommand>;\r\n    private _redoStack: KnockoutObservableArray<ICommand>;\r\n\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n\r\n    private constructor() {\r\n        this._undoStack = ko.observableArray([]);\r\n        this._redoStack = ko.observableArray([]);\r\n\r\n        this.canUndo = ko.computed(() => this._undoStack().length > 0, this);\r\n        this.canRedo = ko.computed(() => this._redoStack().length > 0, this);\r\n    }\r\n\r\n    public static get instance(): CommandStack {\r\n        if (!CommandStack._instance) CommandStack._instance = new CommandStack();\r\n\r\n        return CommandStack._instance;\r\n    }\r\n\r\n    // TODO: Maybe don't have this as singleton...\r\n    // Could have an instance for each character\r\n    // to preserve the stack across character selection\r\n    public reset(): void {\r\n        this._undoStack.removeAll();\r\n        this._redoStack.removeAll();\r\n    }\r\n\r\n    public execute(command: ICommand): void {\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n        this._redoStack.removeAll();\r\n    }\r\n\r\n    public undo(): void {\r\n        if (this._undoStack().length === 0) return;\r\n        \r\n        const command = this._undoStack.pop();\r\n        command.undo();\r\n        this._redoStack.push(command);\r\n    }\r\n\r\n    public redo(): void {\r\n        if (this._redoStack().length === 0) return;\r\n\r\n        const command = this._redoStack.pop();\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n    }\r\n}","import { randomFloat, randomInteger } from \"./utils\";\r\n\r\nexport default class Dice {\r\n    public dicePool: KnockoutObservable<number>;\r\n    public rollRounds: KnockoutObservableArray<Array<number>>;\r\n    public rollingInProgress: KnockoutObservable<boolean>;\r\n    public totalDiceSuccesses: KnockoutComputed<number>;\r\n    public totalDiceSuccessesDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        this.dicePool = ko.observable(1);\r\n        this.rollRounds = ko.observableArray([]);\r\n        this.rollingInProgress = ko.observable(false);\r\n        this.totalDiceSuccesses = ko.computed(() => {\r\n            if (this.rollingInProgress() || this.rollRounds().length === 0) return -1;\r\n\r\n            return this.rollRounds().reduce((total: number, r: Array<number>) => {\r\n                return total + r.reduce((total: number, d: number) => total + (d > 7 ? 1 : 0), 0);\r\n            }, 0);\r\n        }, this);\r\n        this.totalDiceSuccessesDisplay = ko.computed(() => {\r\n            return this.totalDiceSuccesses() >= 0 ? \"\" + this.totalDiceSuccesses() : \"???\";\r\n        }, this);\r\n    }\r\n\r\n    public incrementDicePool(amount: number): () => void {\r\n        return () => {\r\n            let newAmount = this.dicePool() + amount;\r\n            if (newAmount < 1) newAmount = 1;\r\n            this.dicePool(newAmount);\r\n        };\r\n    }\r\n\r\n    public rollDice(): void {\r\n        const roller = new RollState(this);\r\n        roller.beginRoll();\r\n    }\r\n}\r\n\r\nclass RollState {\r\n    private _diceObj: Dice;\r\n    private _currentRound: number;\r\n    private _currentDice: number;\r\n    private _currentRoundRolls: number;\r\n    private _currentRoundResults: Array<number>;\r\n    private _nextRoundRolls: number;\r\n    private _intervalHandle: number;\r\n\r\n    public constructor(diceObj: Dice) {\r\n        this._diceObj = diceObj;\r\n        this._currentRound = 0;\r\n        this._currentDice = 0;\r\n        this._currentRoundRolls = diceObj.dicePool();\r\n        this._currentRoundResults = [];\r\n        this._nextRoundRolls = 0;\r\n        this._intervalHandle = null;\r\n    }\r\n\r\n    public beginRoll(): void {\r\n        this._diceObj.rollingInProgress(true);\r\n        this._diceObj.rollRounds.removeAll();\r\n        for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n        this._diceObj.rollRounds.push(this._currentRoundResults);\r\n\r\n        this._intervalHandle = window.setInterval(() => {\r\n            const nextRoll = randomInteger(1, 11);\r\n            if (nextRoll === 10) {\r\n                this._nextRoundRolls++;\r\n                const diceContainer = document.getElementsByClassName(\"diceContainer\")[0];\r\n                const critMessage = document.createElement(\"div\");\r\n                critMessage.classList.add(\"crit-message\");\r\n                critMessage.innerText = \"Crit!\";\r\n                critMessage.id = \"critMessage\";\r\n                diceContainer.appendChild(critMessage);\r\n                window.setTimeout(() => diceContainer.removeChild(critMessage), 1010);\r\n            }\r\n            this._currentRoundResults[this._currentDice] = nextRoll;\r\n            this._diceObj.rollRounds.replace(this._diceObj.rollRounds()[this._currentRound], this._currentRoundResults);\r\n            this._currentDice++;\r\n\r\n            if (this._currentDice === this._currentRoundRolls) {\r\n                if (this._nextRoundRolls === 0) {\r\n                    window.clearInterval(this._intervalHandle);\r\n                    this._diceObj.rollingInProgress(false);\r\n                    const critMessage = document.getElementById(\"critMessage\");\r\n                    if (critMessage) {\r\n                        critMessage.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                else {\r\n                    this._currentRound++;\r\n                    this._currentRoundRolls = this._nextRoundRolls;\r\n                    this._nextRoundRolls = 0;\r\n                    this._currentDice = 0;\r\n                    this._currentRoundResults = [];\r\n                    for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n                    this._diceObj.rollRounds.push(this._currentRoundResults);\r\n                }\r\n            }\r\n        }, 100);\r\n    }\r\n}","import Application from \"./Application\";\r\nimport Equipment from \"./Character/Equipment\";\r\nimport InventoryItem from \"./Character/InventoryItem\";\r\nimport Merit from \"./Character/Merit\";\r\nimport Note from \"./Character/Note\";\r\nimport { applyCustomKnockoutCode } from \"./utils\";\r\n\r\napplyCustomKnockoutCode();\r\n\r\nconst constructors = {\r\n    Equipment: Equipment,\r\n    InventoryItem: InventoryItem,\r\n    Merit: Merit,\r\n    Note: Note\r\n};\r\nObject.defineProperty(window, \"constructors\", { value: constructors });\r\n\r\nconst app = new Application();\r\nko.applyBindings(app);\r\n\r\n// Exposing the view model to the global state in case manual changes need to be applied\r\nObject.defineProperty(window, \"app\", { value: app });\r\n\r\nfunction toggleTooltips(enable: boolean): void {\r\n    if (enable) $(\"[data-toggle='tooltip']\").tooltip();\r\n    else $(\"[data-toggle='tooltip']\").tooltip(\"dispose\");\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    toggleTooltips(window.outerWidth >= 992);\r\n});\r\ntoggleTooltips(window.outerWidth >= 992);","import Damage from \"./Character/Damage\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\nimport AttributeCommand from \"./Command/AttributeCommand\";\r\n\r\nexport function randomInteger(minInclusive = 0, maxExclusive = 10): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function randomFloat(minInclusive = 0, maxExclusive = 1): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.random() * (maxExclusive - minInclusive) + minInclusive;\r\n}\r\n\r\nexport function applyCustomKnockoutCode() {\r\n    ko.bindingHandlers.dice = {\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservableArray<Array<number>>) => {\r\n            const rollRounds = valueAccessor()();\r\n            if (rollRounds.length === 0) {\r\n                element.innerHTML = \"\";\r\n                return;\r\n            }\r\n    \r\n            let divs = element.getElementsByClassName(\"dice-round\");\r\n            if (divs.length !== rollRounds.length) {\r\n                const newRound = document.createElement(\"div\");\r\n                newRound.classList.add(\"dice-round\");\r\n                const rolls = rollRounds[rollRounds.length - 1];\r\n                for (let i = 0; i < rolls.length; i++) {\r\n                    const span = document.createElement(\"span\");\r\n                    const delay = randomFloat(0, 0.5);\r\n                    span.style.animation = `rollingDice 0.5s linear -${delay}s infinite alternate`;\r\n                    span.classList.add(\"dice\");\r\n                    newRound.appendChild(span);\r\n                }\r\n                element.appendChild(newRound);\r\n                divs = element.getElementsByClassName(\"dice-round\");\r\n            }\r\n    \r\n            for (let i = 0; i < rollRounds.length; i++) {\r\n                const rolls = rollRounds[i];\r\n                const spans = divs[i].getElementsByClassName(\"dice\");\r\n                for (let j = 0; j < rolls.length; j++) {\r\n                    const roll = rolls[j];\r\n                    const span = <HTMLSpanElement>spans[j];\r\n    \r\n                    if (roll !== -1) {\r\n                        span.style.animation = null;\r\n                        span.style.backgroundImage = `url('images/dice-${roll}.png')`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.damageDisplay = {\r\n        init: (element: HTMLElement) => {\r\n            for (let i = 0; i < 15; i++) {\r\n                const span = document.createElement(\"span\");\r\n                span.classList.add(\"damage\");\r\n                span.classList.add(\"none\");\r\n                element.appendChild(span);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => Damage) => {\r\n            const damageObj = valueAccessor();\r\n            const spans = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < spans.length; i++) {\r\n                if (i < damageObj.aggravated()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.add(\"aggravated\");\r\n                }\r\n                else if (i - damageObj.aggravated() < damageObj.lethal()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"lethal\");\r\n                }\r\n                else if (i - damageObj.aggravated() - damageObj.lethal() < damageObj.bashing()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"bashing\");\r\n                }\r\n                else {\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"none\");\r\n                }\r\n    \r\n                if (i < damageObj.totalHealth()) {\r\n                    spans[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else {\r\n                    spans[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.attribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, canClear?: boolean }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                dot.classList.add(\"pointer\");\r\n                dot.dataset.toggle = \"tooltip\";\r\n                dot.title = \"\" + (i + 1);\r\n                $(dot).tooltip();\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n    \r\n            const canClear = valueAccessor().canClear;\r\n            if (canClear === true || typeof canClear === \"undefined\") {\r\n                const clearDot = document.createElement(\"div\");\r\n                clearDot.classList.add(\"clear-dot\");\r\n                clearDot.innerHTML = \"&times;\";\r\n                clearDot.dataset.toggle = \"tooltip\";\r\n                clearDot.title = \"Clear\";\r\n                clearDot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, 0, valueAccessor().value()));\r\n                });\r\n                element.appendChild(clearDot);\r\n                $(clearDot).tooltip();\r\n            }\r\n    \r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                element.appendChild(dot);\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByClassName(\"attribute-dot\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                const dot = <HTMLSpanElement>dots[i];\r\n                dot.style.backgroundColor = null;\r\n                dot.style.borderColor = null;\r\n                if (i < value) {\r\n                    dot.style.backgroundColor = \"var(--body-color)\";\r\n                    dot.style.borderColor = \"var(--body-color)\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.readOnlyAttribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, hideUnfilled?: boolean }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                dots[i].classList.remove(\"filled\");\r\n                if (i < value) {\r\n                    dots[i].classList.add(\"filled\");\r\n                    dots[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else if (valueAccessor().hideUnfilled) {\r\n                    dots[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.used = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < 12; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                dot.addEventListener(\"click\", () => {\r\n                    valueAccessor().value(index + 1);\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const used = valueAccessor().value();\r\n            const total = valueAccessor().total();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                if (i < used) dots[i].classList.add(\"filled-red\");\r\n                else dots[i].classList.remove(\"filled-red\");\r\n    \r\n                if (i < total) dots[i].classList.remove(\"HIDDEN\");\r\n                else dots[i].classList.add(\"HIDDEN\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.focusOnCreation = {\r\n        init: (element: HTMLInputElement | HTMLTextAreaElement) => {\r\n            window.setTimeout(() => {\r\n                if (element.value) return;\r\n                element.focus();\r\n            }, 1);\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.contextMenu = {\r\n        init: (element: HTMLElement, valueAccessor: () => () => void) => {\r\n            element.addEventListener(\"contextmenu\", e => {\r\n                e.preventDefault();\r\n                valueAccessor()();\r\n            });\r\n        }\r\n    };\r\n    \r\n    (<any>ko.extenders).lockable = (target: any, locked: KnockoutObservable<boolean>) => {\r\n        const result = ko.pureComputed({\r\n            read: target,\r\n            write: (newValue: any) => {\r\n                if (locked()) {\r\n                    target.notifySubscribers(target());\r\n                }\r\n                else {\r\n                    target(newValue);\r\n                    target.notifySubscribers(newValue);\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        return result;\r\n    };\r\n    \r\n    (<any>ko.extenders).numeric = (target: any, args: { precision?: number, min?: number, max?: number }) => {\r\n        const precision = args.precision || 0;\r\n        const min = args.min || -Infinity;\r\n        const max = args.max || Infinity;\r\n    \r\n        // Create a writeable computed observable to intercept writes to our observable\r\n        const result = ko.pureComputed({\r\n            read: target, // Always return the original observable's value\r\n            write: (newValue: any) => {\r\n                const current = target();\r\n                const roundingMultiplier = Math.pow(10, precision);\r\n                const newValueAsNum = isNaN(newValue) ? 0 : +newValue;\r\n                let valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\r\n                if (valueToWrite < min) valueToWrite = min;\r\n                else if (valueToWrite > max) valueToWrite = max;\r\n    \r\n                // Only write if it changed\r\n                if (valueToWrite !== current) {\r\n                    target(valueToWrite);\r\n                }\r\n                else {\r\n                    // If the rounded value is the same, but a different value was written,\r\n                    // force a notification for the current field\r\n                    if (newValue !== current) {\r\n                        target.notifySubscribers(valueToWrite);\r\n                    }\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        // Initialize with current value to make sure it is rounded appropriately\r\n        result(target());\r\n    \r\n        // Return the new computed observable\r\n        return result;\r\n    };\r\n}"]}