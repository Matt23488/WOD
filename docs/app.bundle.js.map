{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/Application.ts","src/ts/Character/Character.ts","src/ts/Character/Damage.ts","src/ts/Character/Equipment.ts","src/ts/Character/InventoryItem.ts","src/ts/Character/Merit.ts","src/ts/Character/Note.ts","src/ts/Command/AttributeCommand.ts","src/ts/Command/CommandStack.ts","src/ts/Dice.ts","src/ts/main.ts","src/ts/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Character_1","Dice_1","CommandStack_1","Application","prototype","toggleClock","this","showClock","goBack","mode","_previousSection","window","location","hash","newCharacter","newChar","default","locked","characters","push","characterId","selectCharacter","character","indexOf","deleteCharacter","confirm","name","id","remove","saveCharacters","localStorage","setItem","JSON","stringify","realCharacters","map","toJson","alert","downloadCharacter","json","dl","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","uploadCharacter","_this","ul","type","accept","addEventListener","file","files","reader","FileReader","onload","target","result","fromJson","parse","readAsText","toggleCharacterLock","switchMode","getElementById","savedCharacters","getItem","unshift","ghost","ko","observable","observableArray","computed","filter","dice","lockButtonClass","lockButtonIcon","currentTime","Date","currentTimeDisplay","time","hours","getHours","minutes","getMinutes","seconds","getSeconds","suffix","setInterval","ctrlKey","key","preventDefault","instance","undo","redo","substring","$domElement","$","scrollTop","offset","top","Damage_1","Equipment_1","InventoryItem_1","Merit_1","Note_1","utils_1","Character","firstNameLength","randomInteger","lastNameLength","firstName","lastName","newLetter","alphabet","charAt","toUpperCase","randomName","player","age","vice","virtue","origins","gender","concept","chronicle","intelligence","strength","presence","wits","dexterity","manipulation","resolve","stamina","composure","academics","robotics","crafts","investigation","medicine","occult","politics","science","athletics","brawl","drive","ranged","larceny","stealth","survival","weaponry","animalKen","empathy","expression","intimidation","persuasion","socialize","streetwise","subterfuge","merits","spells","flaws","size","armor","experience","morality","weapons","equipment","inventory","notes","onComponentClick","_","currentTarget","getElementsByTagName","focus","newItem","constructor","createLockable","removeItem","item","moveItem","direction","index","newIndex","splice","clearUsed","usedObservable","bashing","damage","lethal","aggravated","usedMagic","usedWillpower","m","value","s","w","description","quantity","extend","lockable","numeric","precision","min","max","speed","defense","Math","initiative","health","magic","subscribe","val","willpower","Damage","anyEmpty","totalHealth","addBashing","addLethal","addAggravated","clearAll","totalHealthObservable","Equipment","InventoryItem","getDisplayText","displayText","Merit","Note","AttributeCommand","execute","_observable","_newValue","_oldValue","newValue","oldValue","CommandStack","Object","defineProperty","_instance","command","_undoStack","_redoStack","pop","Dice","incrementDicePool","amount","dicePool","rollDice","RollState","beginRoll","rollRounds","rollingInProgress","totalDiceSuccesses","reduce","total","d","totalDiceSuccessesDisplay","_diceObj","removeAll","_currentRoundRolls","_currentRoundResults","_intervalHandle","nextRoll","_nextRoundRolls","diceContainer_1","getElementsByClassName","critMessage_1","classList","add","innerText","setTimeout","_currentDice","replace","_currentRound","clearInterval","critMessage","diceObj","Application_1","applyCustomKnockoutCode","constructors","app","toggleTooltips","enable","tooltip","applyBindings","outerWidth","AttributeCommand_1","randomFloat","minInclusive","maxExclusive","_a","random","floor","bindingHandlers","update","element","valueAccessor","divs","newRound","rolls","span","delay","animation","spans","j","roll","backgroundImage","innerHTML","damageDisplay","init","damageObj","attribute","dots","dot","dataset","toggle","title","forEach","canClear","clearDot","backgroundColor","borderColor","readOnlyAttribute","hideUnfilled","used","focusOnCreation","extenders","pureComputed","read","write","notifySubscribers","notify","args","Infinity","current","roundingMultiplier","pow","newValueAsNum","isNaN","valueToWrite","round"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,iECAA,IAAAK,EAAAX,EAAA,yBACAY,EAAAZ,EAAA,UAEAa,EAAAb,EAAA,0BAEAc,GA4EWA,EAAAC,UAAAC,YAAP,WACIC,KAAKC,WAAWD,KAAKC,cAGlBJ,EAAAC,UAAAI,OAAP,WACwB,UAAhBF,KAAKG,OAAoBH,KAAKG,KAAK,SAEnCH,KAAKG,KAAK,SAENH,KAAKI,mBAAkBC,OAAOC,SAASC,KAAOP,KAAKI,oBAIxDP,EAAAC,UAAAU,aAAP,WACI,IAAMC,EAAUf,EAAAgB,QAAUF,eAC1BC,EAAQE,QAAO,GACfX,KAAKY,WAAWC,KAAKJ,GACrBT,KAAKc,YAAYd,KAAKY,aAAarB,OAAS,GAC5CS,KAAKG,KAAK,UAGPN,EAAAC,UAAAiB,gBAAP,SAAuBC,GACnBhB,KAAKc,YAAYd,KAAKY,WAAWK,QAAQD,IACzChB,KAAKG,KAAK,UAGPN,EAAAC,UAAAoB,gBAAP,SAAuBF,GAgBnB,IAAIhB,KAAKgB,YAAYL,UACjBQ,QAAQ,mCAAmCnB,KAAKgB,YAAYI,OAAM,gEAAiE,CACnI,IAAMC,EAAKrB,KAAKc,cAChBd,KAAKc,YAAY,GACjBd,KAAKY,WAAWU,OAAOtB,KAAKY,aAAaS,IACzCrB,KAAKG,KAAK,UAIXN,EAAAC,UAAAyB,eAAP,WACIlB,OAAOmB,aAAaC,QAAQ,aAAcC,KAAKC,UAAU3B,KAAK4B,iBAAiBC,IAAI,SAAA/C,GAAK,OAAAA,EAAEgD,aAM1FC,MAAM,mCAGHlC,EAAAC,UAAAkC,kBAAP,WACI,IAAMC,EAAOP,KAAKC,UAAU3B,KAAKgB,YAAYc,UAEvCI,EAAKC,SAASC,cAAc,KAClCF,EAAGG,aAAa,OAAQ,iCAAiCC,mBAAmBL,IAC5EC,EAAGG,aAAa,WAAerC,KAAKgB,YAAYI,OAAM,SAEtDc,EAAGK,MAAMC,QAAU,OACnBL,SAASM,KAAKC,YAAYR,GAE1BA,EAAGS,QAEHR,SAASM,KAAKG,YAAYV,IAGvBrC,EAAAC,UAAA+C,gBAAP,WAAA,IAAAC,EAAA9C,KACU+C,EAAKZ,SAASC,cAAc,SAClCW,EAAGC,KAAO,OACVD,EAAGE,OAAS,QACZF,EAAGR,MAAMC,QAAU,OAEnBO,EAAGG,iBAAiB,SAAU,SAAA1E,GAC1B,IAAM2E,EAAOJ,EAAGK,MAAM,GACtB,GAAKD,EAAL,CAEA,IAAME,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAC/E,GACb,IAAMyD,EAAOzD,EAAEgF,OAAOC,OACtBX,EAAKlC,WAAWC,KAAKnB,EAAAgB,QAAUgD,SAAShC,KAAKiC,MAAM1B,KACnDa,EAAKhC,YAAYgC,EAAKlC,aAAarB,OAAS,GAC5CuD,EAAK3C,KAAK,UAEdkD,EAAOO,WAAWT,MAGtBhB,SAASM,KAAKC,YAAYK,GAE1BA,EAAGJ,QAEHR,SAASM,KAAKG,YAAYG,IAGvBlD,EAAAC,UAAA+D,oBAAP,WACI,IAAM7C,EAAYhB,KAAKgB,YACvBA,EAAUL,QAAQK,EAAUL,WAGzBd,EAAAC,UAAAgE,WAAP,SAAkB3D,GAAlB,IAAA2C,EAAA9C,KACI,OAAO,WACiB,SAAhB8C,EAAK3C,QAAqBgC,SAAS4B,eAAe5D,GAClD2C,EAAK1C,iBAAmBD,EAEvB2C,EAAK1C,iBAAmB,KAE7BC,OAAOC,SAASC,KAAO,GACvBuC,EAAK3C,KAAKA,KAGtBN,GArLI,SAAAA,IAAA,IAAAiD,EAAA9C,KACUgE,GAAqCtC,KAAKiC,MAAMtD,OAAOmB,aAAayC,QAAQ,gBAAkB,IAAIpC,IAAInC,EAAAgB,QAAUgD,UACtHM,EAAgBE,QAAQxE,EAAAgB,QAAUF,gBAClCwD,EAAgB,GAAGG,OAAQ,EAE3BnE,KAAKG,KAAOiE,GAAGC,WAAW,QAC1BrE,KAAKc,YAAcsD,GAAGC,WAAW,GACjCrE,KAAKY,WAAawD,GAAGE,gBAAgBN,GACrChE,KAAK4B,eAAiBwC,GAAGG,SAAS,WAAM,OAAAzB,EAAKlC,aAAa4D,OAAO,SAAA1F,GAAK,OAACA,EAAEqF,SAAQnE,MACjFA,KAAKgB,UAAYoD,GAAGG,SAAS,WAAM,OAAAzB,EAAKlC,aAAakC,EAAKhC,gBAAgBd,MAC1EA,KAAKyE,KAAO,IAAI9E,EAAAe,QAChBV,KAAK0E,gBAAkBN,GAAGG,SAAS,WAAM,OAAAzB,EAAK9B,YAAYL,SAAW,aAAe,uBAAuBX,MAC3GA,KAAK2E,eAAiBP,GAAGG,SAAS,WAAM,OAAAzB,EAAK9B,YAAYL,SAAW,cAAgB,oBAAoBX,MACxGA,KAAKI,iBAAmB,KACxBJ,KAAKC,UAAYmE,GAAGC,YAAW,GAC/BrE,KAAK4E,YAAcR,GAAGC,WAAW,IAAIQ,MAErC7E,KAAK8E,mBAAqBV,GAAGG,SAAS,WAClC,IAAMQ,EAAOjC,EAAK8B,cACdI,EAAQD,EAAKE,WACXC,EAAUH,EAAKI,aACfC,EAAUL,EAAKM,aACfC,EAASN,EAAQ,GAAK,KAAO,KAInC,OADY,GAARA,IAAYA,GAAS,IACfA,EAAK,KAHME,EAAU,GAAK,IAAM,IAGRA,EAAO,KAFpBE,EAAU,GAAK,IAAM,IAEkBA,EAAO,IAAIE,GACxEtF,MAEHK,OAAOkF,YAAY,WACfzC,EAAK8B,YAAY,IAAIC,OACtB,KAEHxE,OAAO6C,iBAAiB,UAAW,SAAA1E,GAC/B,IAAkB,IAAdA,EAAEgH,QAEN,OAAQhH,EAAEiH,KACN,IAAK,IACDjH,EAAEkH,iBACF5C,EAAKvB,iBACL,MACJ,IAAK,IACD/C,EAAEkH,iBACF9F,EAAAc,QAAaiF,SAASC,OACtB,MACJ,IAAK,IACDpH,EAAEkH,iBACF9F,EAAAc,QAAaiF,SAASE,UAKlCxF,OAAO6C,iBAAiB,aAAc,SAAA1E,GAClC,IAAM+B,EAAOF,OAAOC,SAASC,KAAKuF,UAAU,GAC5C,GAAKvF,EAAL,CAEA,IACIwF,EAAcC,EAAE,IAAIzF,GACxByF,EAAE3F,QAAQ4F,UAAUF,EAAYG,SAASC,IAF5B,yKC3EzB,IAAAC,EAAArH,EAAA,YACAsH,EAAAtH,EAAA,eACAuH,EAAAvH,EAAA,mBACAwH,EAAAxH,EAAA,WACAyH,EAAAzH,EAAA,UACA0H,EAAA1H,EAAA,YAEA2H,GAgKkBA,EAAAlG,aAAd,WACI,OAAO,IAAIkG,EAAU,CACjBtF,KAoLZ,WAMI,IALA,IAAMuF,EAAkBF,EAAAG,cAAc,EAAG,IACnCC,EAAiBJ,EAAAG,cAAc,EAAG,IACpCE,EAAY,GACZC,EAAW,GAENnI,EAAI,EAAGA,EAAI+H,EAAiB/H,IAAK,CACtC,IAAIoI,EAAYC,EAASC,OAAOT,EAAAG,cAAc,EAAGK,EAAS1H,SAChD,IAANX,IAASoI,EAAYA,EAAUG,eAEnCL,GAAaE,EAGjB,IAAK,IAAIpI,EAAI,EAAGA,EAAIiI,EAAgBjI,IAAK,CACrC,IAAIoI,EAAYC,EAASC,OAAOT,EAAAG,cAAc,EAAGK,EAAS1H,SAChD,IAANX,IAASoI,EAAYA,EAAUG,eAEnCJ,GAAYC,EAGhB,OAAUF,EAAS,IAAIC,EAxMTK,GACNC,OAAQ,GACRC,IAAK,EACLC,KAAM,GACNC,OAAQ,GACRC,QAAS,GACTC,OAAQ,GACRC,QAAS,GACTC,UAAW,GAEXC,aAAc,EACdC,SAAU,EACVC,SAAU,EACVC,KAAM,EACNC,UAAW,EACXC,aAAc,EACdC,QAAS,EACTC,QAAS,EACTC,UAAW,EAEXC,UAAW,EACXC,SAAU,EACVC,OAAQ,EACRC,cAAe,EACfC,SAAU,EACVC,OAAQ,EACRC,SAAU,EACVC,QAAS,EAETC,UAAW,EACXC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,SAAU,EAEVC,UAAW,EACXC,QAAS,EACTC,WAAY,EACZC,aAAc,EACdC,WAAY,EACZC,UAAW,EACXC,WAAY,EACZC,WAAY,EAEZC,OAAQ,GACRC,OAAQ,GACRC,MAAO,GAEPC,KAAM,EACNC,MAAO,EACPC,WAAY,EACZC,SAAU,EAEVC,QAAS,GACTC,UAAW,GACXC,UAAW,GAEXC,MAAO,MAID9D,EAAAhD,SAAd,SAAuBzB,GACnB,OAAO,IAAIyE,EAAUzE,IAGlByE,EAAA5G,UAAA2K,iBAAP,SAAwBC,EAAQlM,GACCA,EAAEmM,cACvBC,qBAAqB,SAAS,GAAGC,SAGtCnE,EAAA5G,UAAAgL,QAAP,SAAkBxG,EAA6CyG,GAA/D,IAAAjI,EAAA9C,KACI,OAAO,WACC8C,EAAKnC,UACT2D,EAAgBzD,KAAKkK,EAAYC,eAAelI,EAAKnC,WAItD+F,EAAA5G,UAAAmL,WAAP,SAAqB3G,GAArB,IAAAxB,EAAA9C,KACI,OAAO,SAACkL,GACApI,EAAKnC,UACT2D,EAAgBhD,OAAO4J,KAIxBxE,EAAA5G,UAAAqL,SAAP,SAAmB7G,EAA6C8G,GAAhE,IAAAtI,EAAA9C,KACI,OAAO,SAACkL,GACJ,IAAIpI,EAAKnC,SAAT,CACA,IAAM0K,EAAQ/G,EAAgBrD,QAAQiK,GAChCI,EAAWD,EAAQD,EAErBE,EAAW,GAAKA,GAAYhH,IAAkB/E,SAElD+E,EAAgBiH,OAAOF,EAAO,GAC9B/G,EAAgBiH,OAAOD,EAAU,EAAGJ,OAIrCxE,EAAA5G,UAAA0L,UAAP,SAAiBC,GACb,OAAO,WACHA,EAAe,KAIhB/E,EAAA5G,UAAAgC,OAAP,WACI,MAAO,CACHV,KAAMpB,KAAKoB,OACXiG,OAAQrH,KAAKqH,SACbC,IAAKtH,KAAKsH,MACVC,KAAMvH,KAAKuH,OACXC,OAAQxH,KAAKwH,SACbC,QAASzH,KAAKyH,UACdC,OAAQ1H,KAAK0H,SACbC,QAAS3H,KAAK2H,UACdC,UAAW5H,KAAK4H,YAEhBC,aAAc7H,KAAK6H,eACnBG,KAAMhI,KAAKgI,OACXG,QAASnI,KAAKmI,UACdL,SAAU9H,KAAK8H,WACfG,UAAWjI,KAAKiI,YAChBG,QAASpI,KAAKoI,UACdL,SAAU/H,KAAK+H,WACfG,aAAclI,KAAKkI,eACnBG,UAAWrI,KAAKqI,YAEhBqD,QAAS1L,KAAK2L,OAAOD,UACrBE,OAAQ5L,KAAK2L,OAAOC,SACpBC,WAAY7L,KAAK2L,OAAOE,aACxBC,UAAW9L,KAAK8L,YAChBC,cAAe/L,KAAK+L,gBAEpBzD,UAAWtI,KAAKsI,YAChBC,SAAUvI,KAAKuI,WACfC,OAAQxI,KAAKwI,SACbC,cAAezI,KAAKyI,gBACpBC,SAAU1I,KAAK0I,WACfC,OAAQ3I,KAAK2I,SACbC,SAAU5I,KAAK4I,WACfC,QAAS7I,KAAK6I,UAEdC,UAAW9I,KAAK8I,YAChBC,MAAO/I,KAAK+I,QACZC,MAAOhJ,KAAKgJ,QACZC,OAAQjJ,KAAKiJ,SACbC,QAASlJ,KAAKkJ,UACdC,QAASnJ,KAAKmJ,UACdC,SAAUpJ,KAAKoJ,WACfC,SAAUrJ,KAAKqJ,WAEfC,UAAWtJ,KAAKsJ,YAChBC,QAASvJ,KAAKuJ,UACdC,WAAYxJ,KAAKwJ,aACjBC,aAAczJ,KAAKyJ,eACnBC,WAAY1J,KAAK0J,aACjBC,UAAW3J,KAAK2J,YAChBC,WAAY5J,KAAK4J,aACjBC,WAAY7J,KAAK6J,aAEjBC,OAAQ9J,KAAK8J,SAASjI,IAAI,SAAAmK,GAAO,MAAO,CAAE5K,KAAM4K,EAAE5K,OAAQ6K,MAAOD,EAAEC,WACnElC,OAAQ/J,KAAK+J,SAASlI,IAAI,SAAAqK,GAAO,MAAO,CAAE9K,KAAM8K,EAAE9K,OAAQ6K,MAAOC,EAAED,WACnEjC,MAAOhK,KAAKgK,QAAQnI,IAAI,SAAAhD,GAAO,MAAO,CAAEuC,KAAMvC,EAAEuC,OAAQ6K,MAAOpN,EAAEoN,WAEjEhC,KAAMjK,KAAKiK,OACXC,MAAOlK,KAAKkK,QACZC,WAAYnK,KAAKmK,aACjBC,SAAUpK,KAAKoK,WAEfC,QAASrK,KAAKqK,UAAUxI,IAAI,SAAAsK,GAAO,MAAO,CAAE/K,KAAM+K,EAAE/K,OAAQgL,YAAaD,EAAEC,iBAC3E9B,UAAWtK,KAAKsK,YAAYzI,IAAI,SAAArD,GAAO,MAAO,CAAE4C,KAAM5C,EAAE4C,OAAQgL,YAAa5N,EAAE4N,iBAC/E7B,UAAWvK,KAAKuK,YAAY1I,IAAI,SAAAjD,GAAO,MAAO,CAAEwC,KAAMxC,EAAEwC,OAAQgL,YAAaxN,EAAEwN,cAAeC,SAAUzN,EAAEyN,cAE1G7B,MAAOxK,KAAKwK,QAAQ3I,IAAI,SAAApD,GAAK,OAAAA,EAAEwN,YAG3CvF,GArQI,SAAAA,EAAmBzE,GAAnB,IAAAa,EAAA9C,KA7EOA,KAAAmE,OAAiB,EACjBnE,KAAAW,OAAsCyD,GAAGC,YAAW,GA6EvDrE,KAAKoB,KAAOgD,GAAGC,WAAWpC,EAAKb,MAAMkL,OAAO,CAAEC,SAAUvM,KAAKW,SAC7DX,KAAKqH,OAASjD,GAAGC,WAAWpC,EAAKoF,QAAQiF,OAAO,CAAEC,SAAUvM,KAAKW,SACjEX,KAAKsH,IAAMlD,GAAGC,WAAWpC,EAAKqF,KAAKgF,OAAO,CAAEE,QAAS,CAAEC,UAAW,GAAKF,SAAUvM,KAAKW,SACtFX,KAAKuH,KAAOnD,GAAGC,WAAWpC,EAAKsF,MAAM+E,OAAO,CAAEC,SAAUvM,KAAKW,SAC7DX,KAAKwH,OAASpD,GAAGC,WAAWpC,EAAKuF,QAAQ8E,OAAO,CAAEC,SAAUvM,KAAKW,SACjEX,KAAKyH,QAAUrD,GAAGC,WAAWpC,EAAKwF,SAAS6E,OAAO,CAAEC,SAAUvM,KAAKW,SACnEX,KAAK0H,OAAStD,GAAGC,WAAWpC,EAAKyF,QAAQ4E,OAAO,CAAEC,SAAUvM,KAAKW,SACjEX,KAAK2H,QAAUvD,GAAGC,WAAWpC,EAAK0F,SAAS2E,OAAO,CAAEC,SAAUvM,KAAKW,SACnEX,KAAK4H,UAAYxD,GAAGC,WAAWpC,EAAK2F,WAAW0E,OAAO,CAAEC,SAAUvM,KAAKW,SAEvEX,KAAK6H,aAAezD,GAAGC,WAAWpC,EAAK4F,cAAcyE,OAAO,CAAEC,SAAUvM,KAAKW,SAC7EX,KAAK8H,SAAW1D,GAAGC,WAAWpC,EAAK6F,UAAUwE,OAAO,CAAEC,SAAUvM,KAAKW,SACrEX,KAAK+H,SAAW3D,GAAGC,WAAWpC,EAAK8F,UAAUuE,OAAO,CAAEC,SAAUvM,KAAKW,SACrEX,KAAKgI,KAAO5D,GAAGC,WAAWpC,EAAK+F,MAAMsE,OAAO,CAAEC,SAAUvM,KAAKW,SAC7DX,KAAKiI,UAAY7D,GAAGC,WAAWpC,EAAKgG,WAAWqE,OAAO,CAAEC,SAAUvM,KAAKW,SACvEX,KAAKkI,aAAe9D,GAAGC,WAAWpC,EAAKiG,cAAcoE,OAAO,CAAEC,SAAUvM,KAAKW,SAC7EX,KAAKmI,QAAU/D,GAAGC,WAAWpC,EAAKkG,SAASmE,OAAO,CAAEC,SAAUvM,KAAKW,SACnEX,KAAKoI,QAAUhE,GAAGC,WAAWpC,EAAKmG,SAASkE,OAAO,CAAEC,SAAUvM,KAAKW,SACnEX,KAAKqI,UAAYjE,GAAGC,WAAWpC,EAAKoG,WAAWiE,OAAO,CAAEC,SAAUvM,KAAKW,SAEvEX,KAAKsI,UAAYlE,GAAGC,WAAWpC,EAAKqG,WAAWgE,OAAO,CAAEC,SAAUvM,KAAKW,SACvEX,KAAKuI,SAAWnE,GAAGC,WAAWpC,EAAKsG,UAAU+D,OAAO,CAAEC,SAAUvM,KAAKW,SACrEX,KAAKwI,OAASpE,GAAGC,WAAWpC,EAAKuG,QAAQ8D,OAAO,CAAEC,SAAUvM,KAAKW,SACjEX,KAAKyI,cAAgBrE,GAAGC,WAAWpC,EAAKwG,eAAe6D,OAAO,CAAEC,SAAUvM,KAAKW,SAC/EX,KAAK0I,SAAWtE,GAAGC,WAAWpC,EAAKyG,UAAU4D,OAAO,CAAEC,SAAUvM,KAAKW,SACrEX,KAAK2I,OAASvE,GAAGC,WAAWpC,EAAK0G,QAAQ2D,OAAO,CAAEC,SAAUvM,KAAKW,SACjEX,KAAK4I,SAAWxE,GAAGC,WAAWpC,EAAK2G,UAAU0D,OAAO,CAAEC,SAAUvM,KAAKW,SACrEX,KAAK6I,QAAUzE,GAAGC,WAAWpC,EAAK4G,SAASyD,OAAO,CAAEC,SAAUvM,KAAKW,SAEnEX,KAAK8I,UAAY1E,GAAGC,WAAWpC,EAAK6G,WAAWwD,OAAO,CAAEC,SAAUvM,KAAKW,SACvEX,KAAK+I,MAAQ3E,GAAGC,WAAWpC,EAAK8G,OAAOuD,OAAO,CAAEC,SAAUvM,KAAKW,SAC/DX,KAAKgJ,MAAQ5E,GAAGC,WAAWpC,EAAK+G,OAAOsD,OAAO,CAAEC,SAAUvM,KAAKW,SAC/DX,KAAKiJ,OAAS7E,GAAGC,WAAWpC,EAAKgH,QAAQqD,OAAO,CAAEC,SAAUvM,KAAKW,SACjEX,KAAKkJ,QAAU9E,GAAGC,WAAWpC,EAAKiH,SAASoD,OAAO,CAAEC,SAAUvM,KAAKW,SACnEX,KAAKmJ,QAAU/E,GAAGC,WAAWpC,EAAKkH,SAASmD,OAAO,CAAEC,SAAUvM,KAAKW,SACnEX,KAAKoJ,SAAWhF,GAAGC,WAAWpC,EAAKmH,UAAUkD,OAAO,CAAEC,SAAUvM,KAAKW,SACrEX,KAAKqJ,SAAWjF,GAAGC,WAAWpC,EAAKoH,UAAUiD,OAAO,CAAEC,SAAUvM,KAAKW,SAErEX,KAAKsJ,UAAYlF,GAAGC,WAAWpC,EAAKqH,WAAWgD,OAAO,CAAEC,SAAUvM,KAAKW,SACvEX,KAAKuJ,QAAUnF,GAAGC,WAAWpC,EAAKsH,SAAS+C,OAAO,CAAEC,SAAUvM,KAAKW,SACnEX,KAAKwJ,WAAapF,GAAGC,WAAWpC,EAAKuH,YAAY8C,OAAO,CAAEC,SAAUvM,KAAKW,SACzEX,KAAKyJ,aAAerF,GAAGC,WAAWpC,EAAKwH,cAAc6C,OAAO,CAAEC,SAAUvM,KAAKW,SAC7EX,KAAK0J,WAAatF,GAAGC,WAAWpC,EAAKyH,YAAY4C,OAAO,CAAEC,SAAUvM,KAAKW,SACzEX,KAAK2J,UAAYvF,GAAGC,WAAWpC,EAAK0H,WAAW2C,OAAO,CAAEC,SAAUvM,KAAKW,SACvEX,KAAK4J,WAAaxF,GAAGC,WAAWpC,EAAK2H,YAAY0C,OAAO,CAAEC,SAAUvM,KAAKW,SACzEX,KAAK6J,WAAazF,GAAGC,WAAWpC,EAAK4H,YAAYyC,OAAO,CAAEC,SAAUvM,KAAKW,SAEzEX,KAAK8J,OAAS1F,GAAGE,gBAAgBrC,EAAK6H,OAAOjI,IAAI,SAAAmK,GAAK,OAAA,IAAIzF,EAAA7F,QAAMsL,EAAE5K,KAAM4K,EAAEC,MAAOnJ,EAAKnC,WACtFX,KAAK+J,OAAS3F,GAAGE,gBAAgBrC,EAAK8H,OAAOlI,IAAI,SAAAqK,GAAK,OAAA,IAAI3F,EAAA7F,QAAMwL,EAAE9K,KAAM8K,EAAED,MAAOnJ,EAAKnC,WACtFX,KAAKgK,MAAQ5F,GAAGE,gBAAgBrC,EAAK+H,MAAMnI,IAAI,SAAAhD,GAAK,OAAA,IAAI0H,EAAA7F,QAAM7B,EAAEuC,KAAMvC,EAAEoN,MAAOnJ,EAAKnC,WAEpFX,KAAKiK,KAAO7F,GAAGC,WAAWpC,EAAKgI,MAAMqC,OAAO,CAAEE,QAAS,CAAEC,UAAW,EAAGC,IAAK,EAAGC,IAAK,IAAMJ,SAAUvM,KAAKW,SACzGX,KAAK4M,MAAQxI,GAAGG,SAAS,WAAM,OAAAzB,EAAKgF,WAAahF,EAAKmF,YAAc,GAAGjI,MACvEA,KAAK6M,QAAUzI,GAAGG,SAAS,WAAM,OAAAuI,KAAKJ,IAAI5J,EAAKmF,YAAanF,EAAKkF,SAAShI,MAC1EA,KAAKkK,MAAQ9F,GAAGC,WAAWpC,EAAKiI,OAAOoC,OAAO,CAAEE,QAAS,CAAEC,UAAW,KAAOH,OAAO,CAAEC,SAAUvM,KAAKW,SACrGX,KAAK+M,WAAa3I,GAAGG,SAAS,WAAM,OAAAzB,EAAKmF,YAAcnF,EAAKuF,aAAarI,MACzEA,KAAKmK,WAAa/F,GAAGC,WAAWpC,EAAKkI,YAAYmC,OAAO,CAAEE,QAAS,CAAEC,UAAW,GAAKF,SAAUvM,KAAKW,SACpGX,KAAKoK,SAAWhG,GAAGC,WAAWpC,EAAKmI,UAAUkC,OAAO,CAAEE,QAAS,CAAEC,UAAW,EAAGC,IAAK,EAAGC,IAAK,IAAMJ,SAAUvM,KAAKW,SAEjHX,KAAKqK,QAAUjG,GAAGE,gBAAgBrC,EAAKoI,QAAQxI,IAAI,SAAAsK,GAAK,OAAA,IAAI9F,EAAA3F,QAAUyL,EAAE/K,KAAM+K,EAAEC,YAAatJ,EAAKnC,WAClGX,KAAKsK,UAAYlG,GAAGE,gBAAgBrC,EAAKqI,UAAUzI,IAAI,SAAArD,GAAK,OAAA,IAAI6H,EAAA3F,QAAUlC,EAAE4C,KAAM5C,EAAE4N,YAAatJ,EAAKnC,WACtGX,KAAKuK,UAAYnG,GAAGE,gBAAgBrC,EAAKsI,UAAU1I,IAAI,SAAAjD,GAAK,OAAA,IAAI0H,EAAA5F,QAAc9B,EAAEwC,KAAMxC,EAAEwN,YAAaxN,EAAEyN,SAAUvJ,EAAKnC,WAEtHX,KAAKwK,MAAQpG,GAAGE,gBAAgBrC,EAAKuI,MAAM3I,IAAI,SAAApD,GAAK,OAAA,IAAI+H,EAAA9F,QAAKjC,EAAGqE,EAAKnC,WAErEX,KAAKgN,OAAS5I,GAAGG,SAAS,WAAM,OAAAzB,EAAKsF,UAAYtF,EAAKmH,QAAQjK,MAC9DA,KAAK2L,OAAS,IAAIvF,EAAA1F,QAAOV,KAAKgN,OAAQ/K,EAAKyJ,QAASzJ,EAAK2J,OAAQ3J,EAAK4J,WAAY7L,KAAKW,QAEvFX,KAAKiN,MAAQ7I,GAAGG,SAAS,WAAM,OAAAzB,EAAKqF,UAAYrF,EAAKuF,aAAarI,MAClEA,KAAK8L,UAAY1H,GAAGC,WAAWpC,EAAK6J,WAAa,GAAGQ,OAAO,CAAEC,SAAUvM,KAAKW,SAC5EX,KAAKiN,MAAMC,UAAU,SAAAC,GACbrK,EAAKgJ,YAAcqB,GAAKrK,EAAKgJ,UAAUqB,IAC5CnN,MAEHA,KAAKoN,UAAYhJ,GAAGG,SAAS,WAAM,OAAAzB,EAAKqF,UAAYrF,EAAKuF,aAAarI,MACtEA,KAAK+L,cAAgB3H,GAAGC,WAAWpC,EAAK8J,eAAiB,GAAGO,OAAO,CAAEC,SAAUvM,KAAKW,SACpFX,KAAKoN,UAAUF,UAAU,SAAAC,GACjBrK,EAAKiJ,gBAAkBoB,GAAKrK,EAAKiJ,cAAcoB,IACpDnN,kBAwLX,IAAMiH,EAAW,wMC5VjB,IAAAoG,GAiCWA,EAAAvN,UAAAwN,SAAP,WACI,OAAOtN,KAAK0L,UAAY1L,KAAK4L,SAAW5L,KAAK6L,aAAe7L,KAAKuN,eAG9DF,EAAAvN,UAAA0N,WAAP,WACQxN,KAAKsN,WACLtN,KAAK0L,QAAQ1L,KAAK0L,UAAY,GAER,EAAjB1L,KAAK0L,WACV1L,KAAK0L,QAAQ1L,KAAK0L,UAAY,GAC9B1L,KAAK4L,OAAO5L,KAAK4L,SAAW,IAEP,EAAhB5L,KAAK4L,UACV5L,KAAK4L,OAAO5L,KAAK4L,SAAW,GAC5B5L,KAAK6L,WAAW7L,KAAK6L,aAAe,IAGpC9J,MAAM,YAIPsL,EAAAvN,UAAA2N,UAAP,WACQzN,KAAKsN,WACLtN,KAAK4L,OAAO5L,KAAK4L,SAAW,GAEN,EAAjB5L,KAAK0L,WACV1L,KAAK0L,QAAQ1L,KAAK0L,UAAY,GAC9B1L,KAAK4L,OAAO5L,KAAK4L,SAAW,IAEP,EAAhB5L,KAAK4L,UACV5L,KAAK4L,OAAO5L,KAAK4L,SAAW,GAC5B5L,KAAK6L,WAAW7L,KAAK6L,aAAe,IAGpC9J,MAAM,YAIPsL,EAAAvN,UAAA4N,cAAP,WACQ1N,KAAKsN,WACLtN,KAAK6L,WAAW7L,KAAK6L,aAAe,GAEd,EAAjB7L,KAAK0L,WACV1L,KAAK0L,QAAQ1L,KAAK0L,UAAY,GAC9B1L,KAAK6L,WAAW7L,KAAK6L,aAAe,IAEf,EAAhB7L,KAAK4L,UACV5L,KAAK4L,OAAO5L,KAAK4L,SAAW,GAC5B5L,KAAK6L,WAAW7L,KAAK6L,aAAe,IAGpC9J,MAAM,YAIPsL,EAAAvN,UAAA6N,SAAP,WACI3N,KAAK0L,QAAQ,GACb1L,KAAK4L,OAAO,GACZ5L,KAAK6L,WAAW,IAExBwB,GAvFI,SAAAA,EAAmBO,EAAiDlC,EAAkBE,EAAiBC,EAAqBlL,GAA5H,IAAAmC,EAAA9C,KACIA,KAAKuN,YAAcK,EACnB5N,KAAK0L,QAAUtH,GAAGC,WAAWqH,GAAW,GACxC1L,KAAK4L,OAASxH,GAAGC,WAAWuH,GAAU,GACtC5L,KAAK6L,WAAazH,GAAGC,WAAWwH,GAAc,GAE1ClL,IACAX,KAAK0L,QAAU1L,KAAK0L,QAAQY,OAAO,CAAEC,SAAU5L,IAC/CX,KAAK4L,OAAS5L,KAAK4L,OAAOU,OAAO,CAAEC,SAAU5L,IAC7CX,KAAK6L,WAAa7L,KAAK6L,WAAWS,OAAO,CAAEC,SAAU5L,KAGzDiN,EAAsBV,UAAU,SAAAC,GAC5B,KAAOrK,EAAK4I,UAAY5I,EAAK8I,SAAW9I,EAAK+I,aAAesB,GACnC,EAAjBrK,EAAK4I,UACL5I,EAAK4I,QAAQ5I,EAAK4I,UAAY,GAET,EAAhB5I,EAAK8I,SACV9I,EAAK8I,OAAO9I,EAAK8I,SAAW,GAG5B9I,EAAK+I,WAAW/I,EAAK+I,aAAe,IAG7C7L,wGC9BX,IAAA6N,GAckBA,EAAA7C,eAAd,SAA6BrK,GACzB,OAAO,IAAIkN,EAAU,KAAM,KAAMlN,IAEzCkN,GAbI,SAAAA,EAAmBzM,EAAegL,EAAsBzL,GACpDX,KAAKoB,KAAOgD,GAAGC,WAAWjD,GAAQ,IAClCpB,KAAKoM,YAAchI,GAAGC,WAAW+H,GAAe,IAE5CzL,IACAX,KAAKoB,KAAOpB,KAAKoB,KAAKkL,OAAO,CAAEC,SAAU5L,IACzCX,KAAKoM,YAAcpM,KAAKoM,YAAYE,OAAO,CAAEC,SAAU5L,uGCVnE,IAAAmN,GAoBWA,EAAAhO,UAAAiO,eAAP,WACI,OAAU/N,KAAKqM,WAAU,IAAIrM,KAAKoB,QAGxB0M,EAAA9C,eAAd,SAA6BrK,GACzB,OAAO,IAAImN,EAAc,KAAM,KAAM,KAAMnN,IAEnDmN,GArBI,SAAAA,EAAmB1M,EAAegL,EAAsBC,EAAmB1L,GACvEX,KAAKoB,KAAOgD,GAAGC,WAAWjD,GAAQ,IAClCpB,KAAKoM,YAAchI,GAAGC,WAAW+H,GAAe,IAChDpM,KAAKqM,SAAWjI,GAAGC,WAAWgI,GAAY,GAEtC1L,IACAX,KAAKoB,KAAOpB,KAAKoB,KAAKkL,OAAO,CAAEC,SAAU5L,IACzCX,KAAKoM,YAAcpM,KAAKoM,YAAYE,OAAO,CAAEC,SAAU5L,IACvDX,KAAKqM,SAAWrM,KAAKqM,SAASC,OAAO,CAAEC,SAAU5L,KAGrDX,KAAKgO,YAAc5J,GAAGG,SAASvE,KAAK+N,eAAgB/N,wGCjB5D,IAAAiO,GAckBA,EAAAjD,eAAd,SAA6BrK,GACzB,OAAO,IAAIsN,EAAM,KAAM,KAAMtN,IAErCsN,GAbI,SAAAA,EAAmB7M,EAAe6K,EAAgBtL,GAC9CX,KAAKoB,KAAOgD,GAAGC,WAAWjD,GAAQ,IAClCpB,KAAKiM,MAAQ7H,GAAGC,WAAW4H,GAAS,GAEhCtL,IACAX,KAAKoB,KAAOpB,KAAKoB,KAAKkL,OAAO,CAAEC,SAAU5L,IACzCX,KAAKiM,MAAQjM,KAAKiM,MAAMK,OAAO,CAAEC,SAAU5L,uGCVvD,IAAAuN,GAWkBA,EAAAlD,eAAd,SAA6BrK,GACzB,OAAO,IAAIuN,EAAK,KAAMvN,IAE9BuN,GAXI,SAAAA,EAAmBjC,EAAgBtL,GAC/BX,KAAKiM,MAAQ7H,GAAGC,WAAW4H,GAAS,IAEhCtL,IACAX,KAAKiM,MAAQjM,KAAKiM,MAAMK,OAAO,CAAEC,SAAU5L,uGCLvD,IAAAwN,GAWWA,EAAArO,UAAAsO,QAAP,WACIpO,KAAKqO,YAAYrO,KAAKsO,YAGnBH,EAAArO,UAAA8F,KAAP,WACI5F,KAAKqO,YAAYrO,KAAKuO,YAE9BJ,GAbI,SAAAA,EAAmB9J,EAAwCmK,EAAkBC,GACzEzO,KAAKqO,YAAchK,EACnBrE,KAAKsO,UAAYE,EACjBxO,KAAKuO,UAAYE,oGCRzB,IAAAC,GAWIC,OAAAC,eAAkBF,EAAA,WAAQ,KAA1B,WAGI,OAFKA,EAAaG,YAAWH,EAAaG,UAAY,IAAIH,GAEnDA,EAAaG,2CAGjBH,EAAA5O,UAAAsO,QAAP,SAAeU,GACXA,EAAQV,UACRpO,KAAK+O,WAAWlO,KAAKiO,GACrB9O,KAAKgP,WAAa,IAGfN,EAAA5O,UAAA8F,KAAP,WACI,GAA+B,IAA3B5F,KAAK+O,WAAWxP,OAApB,CAEA,IAAMuP,EAAU9O,KAAK+O,WAAWE,MAChCH,EAAQlJ,OACR5F,KAAKgP,WAAWnO,KAAKiO,KAGlBJ,EAAA5O,UAAA+F,KAAP,WACI,GAA+B,IAA3B7F,KAAKgP,WAAWzP,OAApB,CAEA,IAAMuP,EAAU9O,KAAKgP,WAAWC,MAChCH,EAAQV,UACRpO,KAAK+O,WAAWlO,KAAKiO,KAE7BJ,GAhCI,SAAAA,IACI1O,KAAK+O,WAAa,GAClB/O,KAAKgP,WAAa,sGCV1B,IAAAvI,EAAA1H,EAAA,WAEAmQ,GAuBWA,EAAApP,UAAAqP,kBAAP,SAAyBC,GAAzB,IAAAtM,EAAA9C,KACI,OAAO,WACH8C,EAAKuM,SAASvM,EAAKuM,WAAaD,KAIjCF,EAAApP,UAAAwP,SAAP,WACmB,IAAIC,EAAUvP,MACtBwP,aAEfN,GA1BI,SAAAA,IAAA,IAAApM,EAAA9C,KACIA,KAAKqP,SAAWjL,GAAGC,WAAW,GAC9BrE,KAAKyP,WAAarL,GAAGE,gBAAgB,IACrCtE,KAAK0P,kBAAoBtL,GAAGC,YAAW,GACvCrE,KAAK2P,mBAAqBvL,GAAGG,SAAS,WAClC,OAAIzB,EAAK4M,qBAAoD,IAA7B5M,EAAK2M,aAAalQ,QAAsB,EAEjEuD,EAAK2M,aAAaG,OAAO,SAACC,EAAetR,GAC5C,OAAOsR,EAAQtR,EAAEqR,OAAO,SAACC,EAAeC,GAAc,OAAAD,GAAa,EAAJC,EAAQ,EAAI,IAAI,IAChF,IACJ9P,MACHA,KAAK+P,0BAA4B3L,GAAGG,SAAS,WACzC,OAAoC,GAA7BzB,EAAK6M,qBAA4B,GAAK7M,EAAK6M,qBAAuB,OAC1E3P,kBAeX,IAAAuP,GAmBWA,EAAAzP,UAAA0P,UAAP,WAAA,IAAA1M,EAAA9C,KACIA,KAAKgQ,SAASN,mBAAkB,GAChC1P,KAAKgQ,SAASP,WAAWQ,YACzB,IAAK,IAAIrR,EAAI,EAAGA,EAAIoB,KAAKkQ,mBAAoBtR,IAAKoB,KAAKmQ,qBAAqBtP,MAAM,GAClFb,KAAKgQ,SAASP,WAAW5O,KAAKb,KAAKmQ,sBAEnCnQ,KAAKoQ,gBAAkB/P,OAAOkF,YAAY,WACtC,IAAM8K,EAAW5J,EAAAG,cAAc,EAAG,IAClC,GAAiB,KAAbyJ,EAAiB,CACjBvN,EAAKwN,kBACL,IAAMC,EAAgBpO,SAASqO,uBAAuB,iBAAiB,GACjEC,EAActO,SAASC,cAAc,OAC3CqO,EAAYC,UAAUC,IAAI,gBAC1BF,EAAYG,UAAY,QACxBH,EAAYpP,GAAK,cACjBkP,EAAc7N,YAAY+N,GAC1BpQ,OAAOwQ,WAAW,WAAM,OAAAN,EAAc3N,YAAY6N,IAAc,MAMpE,GAJA3N,EAAKqN,qBAAqBrN,EAAKgO,cAAgBT,EAC/CvN,EAAKkN,SAASP,WAAWsB,QAAQjO,EAAKkN,SAASP,aAAa3M,EAAKkO,eAAgBlO,EAAKqN,sBACtFrN,EAAKgO,eAEDhO,EAAKgO,eAAiBhO,EAAKoN,mBAAoB,CAC/C,GAA6B,IAAzBpN,EAAKwN,gBAAuB,CAC5BjQ,OAAO4Q,cAAcnO,EAAKsN,iBAC1BtN,EAAKkN,SAASN,mBAAkB,GAChC,IAAMwB,EAAc/O,SAAS4B,eAAe,eAI5C,YAHImN,GACAA,EAAY5P,UAKhBwB,EAAKkO,gBACLlO,EAAKoN,mBAAqBpN,EAAKwN,gBAC/BxN,EAAKwN,gBAAkB,EACvBxN,EAAKgO,aAAe,EACpBhO,EAAKqN,qBAAuB,GAC5B,IAAK,IAAIvR,EAAI,EAAGA,EAAIkE,EAAKoN,mBAAoBtR,IAAKkE,EAAKqN,qBAAqBtP,MAAM,GAClFiC,EAAKkN,SAASP,WAAW5O,KAAKiC,EAAKqN,wBAG5C,MAEXZ,GAtDI,SAAAA,EAAmB4B,GACfnR,KAAKgQ,SAAWmB,EAChBnR,KAAKgR,cAAgB,EACrBhR,KAAK8Q,aAAe,EACpB9Q,KAAKkQ,mBAAqBiB,EAAQ9B,WAClCrP,KAAKmQ,qBAAuB,GAC5BnQ,KAAKsQ,gBAAkB,EACvBtQ,KAAKoQ,gBAAkB,yGCrD/B,IAAAgB,EAAArS,EAAA,iBACAsH,EAAAtH,EAAA,yBACAuH,EAAAvH,EAAA,6BACAwH,EAAAxH,EAAA,qBACAyH,EAAAzH,EAAA,oBACAA,EAAA,WAEAsS,0BAEA,IAAMC,EAAe,CACjBzD,UAAWxH,EAAA3F,QACXoN,cAAexH,EAAA5F,QACfuN,MAAO1H,EAAA7F,QACPwN,KAAM1H,EAAA9F,SAEViO,OAAOC,eAAevO,OAAQ,eAAgB,CAAE4L,MAAOqF,IAEvD,IAAMC,EAAM,IAAIH,EAAA1Q,QAMhB,SAAS8Q,EAAeC,GAChBA,EAAQzL,EAAE,2BAA2B0L,UACpC1L,EAAE,2BAA2B0L,QAAQ,WAP9CtN,GAAGuN,cAAcJ,GAGjB5C,OAAOC,eAAevO,OAAQ,MAAO,CAAE4L,MAAOsF,IAO9ClR,OAAO6C,iBAAiB,SAAU,WAC9BsO,EAAoC,KAArBnR,OAAOuR,cAE1BJ,EAAoC,KAArBnR,OAAOuR,oOC9BtB,IAAAhS,EAAAb,EAAA,0BACA8S,EAAA9S,EAAA,8BAUA,SAAgB+S,EAAYC,EAAkBC,SAK1C,YALwB,IAAAD,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,GACtCA,EAAeD,IACdA,GAADE,EAAA,CAAAD,EAAAD,IAAC,GAAcC,EAAAC,EAAA,IAGZnF,KAAKoF,UAAYF,EAAeD,GAAgBA,EAb3D1S,EAAAuH,cAAA,SAA8BmL,EAAkBC,SAK5C,YAL0B,IAAAD,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,IACxCA,EAAeD,IACdA,GAADE,EAAA,CAAAD,EAAAD,IAAC,GAAcC,EAAAC,EAAA,IAGZnF,KAAKqF,MAAMrF,KAAKoF,UAAYF,EAAeD,IAAiBA,GAGvE1S,EAAAyS,YAAAA,EAQAzS,EAAAgS,wBAAA,WACIjN,GAAGgO,gBAAgB3N,KAAO,CACtB4N,OAAQ,SAACC,EAAsBC,GAC3B,IAAM9C,EAAa8C,GAAAA,GACnB,GAA0B,IAAtB9C,EAAWlQ,OAAf,CAKA,IAAIiT,EAAOF,EAAQ9B,uBAAuB,cAC1C,GAAIgC,EAAKjT,SAAWkQ,EAAWlQ,OAAQ,CACnC,IAAMkT,EAAWtQ,SAASC,cAAc,OACxCqQ,EAAS/B,UAAUC,IAAI,cAEvB,IADA,IAAM+B,EAAQjD,EAAWA,EAAWlQ,OAAS,GACpCX,EAAI,EAAGA,EAAI8T,EAAMnT,OAAQX,IAAK,CACnC,IAAM+T,EAAOxQ,SAASC,cAAc,QAC9BwQ,EAAQd,EAAY,EAAG,IAC7Ba,EAAKpQ,MAAMsQ,UAAY,4BAA4BD,EAAK,uBACxDD,EAAKjC,UAAUC,IAAI,QACnB8B,EAAS/P,YAAYiQ,GAEzBL,EAAQ5P,YAAY+P,GACpBD,EAAOF,EAAQ9B,uBAAuB,cAG1C,IAAS5R,EAAI,EAAGA,EAAI6Q,EAAWlQ,OAAQX,IACnC,CAAM8T,EAAQjD,EAAW7Q,GAEzB,IAFA,IACMkU,EAAQN,EAAK5T,GAAG4R,uBAAuB,QACpCuC,EAAI,EAAGA,EAAIL,EAAMnT,OAAQwT,IAAK,CACnC,IAAMC,EAAON,EAAMK,GACbJ,EAAwBG,EAAMC,IAEtB,IAAVC,IACAL,EAAKpQ,MAAMsQ,UAAY,KACvBF,EAAKpQ,MAAM0Q,gBAAkB,oBAAoBD,EAAI,iBA7B7DV,EAAQY,UAAY,KAoChC9O,GAAGgO,gBAAgBe,cAAgB,CAC/BC,KAAM,SAACd,GACH,IAAK,IAAI1T,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAM+T,EAAOxQ,SAASC,cAAc,QACpCuQ,EAAKjC,UAAUC,IAAI,UACnBgC,EAAKjC,UAAUC,IAAI,QACnB2B,EAAQ5P,YAAYiQ,KAG5BN,OAAQ,SAACC,EAAsBC,GAG3B,IAFA,IAAMc,EAAYd,IACZO,EAAQR,EAAQ1H,qBAAqB,QAClChM,EAAI,EAAGA,EAAIkU,EAAMvT,OAAQX,IAC1BA,EAAIyU,EAAUxH,cACdiH,EAAMlU,GAAG8R,UAAUpP,OAAO,QAC1BwR,EAAMlU,GAAG8R,UAAUpP,OAAO,WAC1BwR,EAAMlU,GAAG8R,UAAUpP,OAAO,UAC1BwR,EAAMlU,GAAG8R,UAAUC,IAAI,eAElB/R,EAAIyU,EAAUxH,aAAewH,EAAUzH,UAC5CkH,EAAMlU,GAAG8R,UAAUpP,OAAO,QAC1BwR,EAAMlU,GAAG8R,UAAUpP,OAAO,WAC1BwR,EAAMlU,GAAG8R,UAAUpP,OAAO,cAC1BwR,EAAMlU,GAAG8R,UAAUC,IAAI,WAElB/R,EAAIyU,EAAUxH,aAAewH,EAAUzH,SAAWyH,EAAU3H,WACjEoH,EAAMlU,GAAG8R,UAAUpP,OAAO,QAC1BwR,EAAMlU,GAAG8R,UAAUpP,OAAO,UAC1BwR,EAAMlU,GAAG8R,UAAUpP,OAAO,cAC1BwR,EAAMlU,GAAG8R,UAAUC,IAAI,aAGvBmC,EAAMlU,GAAG8R,UAAUpP,OAAO,WAC1BwR,EAAMlU,GAAG8R,UAAUpP,OAAO,UAC1BwR,EAAMlU,GAAG8R,UAAUpP,OAAO,cAC1BwR,EAAMlU,GAAG8R,UAAUC,IAAI,SAGvB/R,EAAIyU,EAAU9F,cACduF,EAAMlU,GAAG8R,UAAUpP,OAAO,UAG1BwR,EAAMlU,GAAG8R,UAAUC,IAAI,YAMvCvM,GAAGgO,gBAAgBkB,UAAY,CAC3BF,KAAM,SAACd,EAAsBC,GAEzB,IADA,IAAMgB,EAA+B,cAC5B3U,GACL,IAAM4U,EAAMrR,SAASC,cAAc,QACnCoR,EAAI9C,UAAUC,IAAI,iBAClB6C,EAAI9C,UAAUC,IAAI,WAClB6C,EAAIC,QAAQC,OAAS,UACrBF,EAAIG,MAAQ,IAAM/U,EAAI,GACtBoH,EAAEwN,GAAK9B,UAEP6B,EAAK1S,KAAK2S,GAEVA,EAAItQ,iBAAiB,eAAgB,WACjCqQ,EAAKK,QAAQ,SAACJ,EAAsBnI,GAC5BA,GAASzM,GAAG4U,EAAI9C,UAAUC,IAAI,mBAG1C6C,EAAItQ,iBAAiB,eAAgB,WACjCqQ,EAAKK,QAAQ,SAACJ,GACVA,EAAI9C,UAAUpP,OAAO,oBAjBxB1C,EAAI,EAAGA,EAAI2T,IAAgB5F,IAAK/N,MAAhCA,GAsBT,IAAMiV,EAAWtB,IAAgBsB,SACjC,IAAiB,IAAbA,QAAyC,IAAbA,EAA0B,CACtD,IAAMC,EAAW3R,SAASC,cAAc,OACxC0R,EAASpD,UAAUC,IAAI,aACvBmD,EAASZ,UAAY,UACrBY,EAASL,QAAQC,OAAS,UAC1BI,EAASH,MAAQ,QACjBG,EAAS5Q,iBAAiB,QAAS,WAC/BtD,EAAAc,QAAaiF,SAASyI,QAAQ,IAAIyD,EAAAnR,QAAiB6R,IAAgBtG,MAAO,EAAGsG,IAAgBtG,YAEjGqG,EAAQ5P,YAAYoR,GACpB9N,EAAE8N,GAAUpC,UAGhB6B,EAAKK,QAAQ,SAACJ,EAAsBnI,GAChCiH,EAAQ5P,YAAY8Q,GACpBA,EAAItQ,iBAAiB,QAAS,WAC1BtD,EAAAc,QAAaiF,SAASyI,QAAQ,IAAIyD,EAAAnR,QAAiB6R,IAAgBtG,MAAOZ,EAAQ,EAAGkH,IAAgBtG,eAIjHoG,OAAQ,SAACC,EAAsBC,GAG3B,IAFA,IAAMtG,EAAQsG,IAAgBtG,QACxBsH,EAAOjB,EAAQ9B,uBAAuB,iBACnC5R,EAAI,EAAGA,EAAI2U,EAAKhU,OAAQX,IAAK,CAClC,IAAM4U,EAAuBD,EAAK3U,GAClC4U,EAAIjR,MAAMwR,gBAAkB,KAC5BP,EAAIjR,MAAMyR,YAAc,KACpBpV,EAAIqN,IACJuH,EAAIjR,MAAMwR,gBAAkB,oBAC5BP,EAAIjR,MAAMyR,YAAc,wBAMxC5P,GAAGgO,gBAAgB6B,kBAAoB,CACnCb,KAAM,SAACd,EAAsBC,GACzB,IAAK,IAAI3T,EAAI,EAAGA,EAAI2T,IAAgB5F,IAAK/N,IAAK,CAC1C,IAAM4U,EAAMrR,SAASC,cAAc,QACnCoR,EAAI9C,UAAUC,IAAI,iBAClB2B,EAAQ5P,YAAY8Q,KAG5BnB,OAAQ,SAACC,EAAsBC,GAG3B,IAFA,IAAMtG,EAAQsG,IAAgBtG,QACxBsH,EAAOjB,EAAQ1H,qBAAqB,QACjChM,EAAI,EAAGA,EAAI2U,EAAKhU,OAAQX,IAC7B2U,EAAK3U,GAAG8R,UAAUpP,OAAO,UACrB1C,EAAIqN,GACJsH,EAAK3U,GAAG8R,UAAUC,IAAI,UACtB4C,EAAK3U,GAAG8R,UAAUpP,OAAO,WAEpBiR,IAAgB2B,cACrBX,EAAK3U,GAAG8R,UAAUC,IAAI,YAMtCvM,GAAGgO,gBAAgB+B,KAAO,CACtBf,KAAM,SAACd,EAAsBC,GAEzB,IADA,IAAMgB,EAA+B,cAC5B3U,GACL,IAAM4U,EAAMrR,SAASC,cAAc,QACnCoR,EAAI9C,UAAUC,IAAI,iBAClB2B,EAAQ5P,YAAY8Q,GAEpBD,EAAK1S,KAAK2S,GAEVA,EAAItQ,iBAAiB,eAAgB,WACjCqQ,EAAKK,QAAQ,SAACJ,EAAsBnI,GAC5BA,GAASzM,GAAG4U,EAAI9C,UAAUC,IAAI,mBAG1C6C,EAAItQ,iBAAiB,eAAgB,WACjCqQ,EAAKK,QAAQ,SAACJ,GACVA,EAAI9C,UAAUpP,OAAO,oBAdxB1C,EAAI,EAAGA,EAAI,GAAIA,MAAfA,GAkBT2U,EAAKK,QAAQ,SAACJ,EAAsBnI,GAChCmI,EAAItQ,iBAAiB,QAAS,WAC1BqP,IAAgBtG,MAAMZ,EAAQ,QAI1CgH,OAAQ,SAACC,EAAsBC,GAI3B,IAHA,IAAM4B,EAAO5B,IAAgBtG,QACvB4D,EAAQ0C,IAAgB1C,QACxB0D,EAAOjB,EAAQ1H,qBAAqB,QACjChM,EAAI,EAAGA,EAAI2U,EAAKhU,OAAQX,IACzBA,EAAIuV,EAAMZ,EAAK3U,GAAG8R,UAAUC,IAAI,cAC/B4C,EAAK3U,GAAG8R,UAAUpP,OAAO,cAE1B1C,EAAIiR,EAAO0D,EAAK3U,GAAG8R,UAAUpP,OAAO,UACnCiS,EAAK3U,GAAG8R,UAAUC,IAAI,YAKvCvM,GAAGgO,gBAAgBgC,gBAAkB,CACjChB,KAAM,SAACd,GACHjS,OAAOwQ,WAAW,WACVyB,EAAQrG,OACZqG,EAAQzH,SACT,KAILzG,GAAGiQ,UAAW9H,SAAW,SAAC/I,EAAa7C,GAczC,OAbeyD,GAAGkQ,aAAa,CAC3BC,KAAM/Q,EACNgR,MAAO,SAAChG,GACA7N,IACA6C,EAAOiR,kBAAkBjR,MAGzBA,EAAOgL,GACPhL,EAAOiR,kBAAkBjG,OAGlClC,OAAO,CAAEoI,OAAQ,YAKlBtQ,GAAGiQ,UAAW7H,QAAU,SAAChJ,EAAamR,GACxC,IAAMlI,EAAYkI,EAAKlI,WAAa,EAC9BC,EAAMiI,EAAKjI,MAAO,EAAA,EAClBC,EAAMgI,EAAKhI,KAAOiI,EAAAA,EAGlBnR,EAASW,GAAGkQ,aAAa,CAC3BC,KAAM/Q,EACNgR,MAAO,SAAChG,GACJ,IAAMqG,EAAUrR,IACVsR,EAAqBhI,KAAKiI,IAAI,GAAItI,GAClCuI,EAAgBC,MAAMzG,GAAY,GAAKA,EACzC0G,EAAepI,KAAKqI,MAAMH,EAAgBF,GAAsBA,EAChEI,EAAexI,EAAKwI,EAAexI,EACfC,EAAfuI,IAAoBA,EAAevI,GAGxCuI,IAAiBL,EACjBrR,EAAO0R,GAKH1G,IAAaqG,GACbrR,EAAOiR,kBAAkBS,MAItC5I,OAAO,CAAEoI,OAAQ,WAMpB,OAHAjR,EAAOD,KAGAC","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Character from \"./Character/Character\";\r\nimport Dice from \"./Dice\";\r\nimport swal from \"sweetalert\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\n\r\nexport default class Application {\r\n    public mode: KnockoutObservable<string>;\r\n    public characterId: KnockoutObservable<number>;\r\n    public characters: KnockoutObservableArray<Character>;\r\n    public realCharacters: KnockoutComputed<Array<Character>>;\r\n    public character: KnockoutComputed<Character>;\r\n    public dice: Dice;\r\n    public lockButtonClass: KnockoutComputed<string>;\r\n    public lockButtonIcon: KnockoutComputed<string>;\r\n    private _previousSection: string;\r\n    public showClock: KnockoutObservable<boolean>;\r\n    public currentTime: KnockoutObservable<Date>;\r\n    public currentTimeDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        const savedCharacters: Array<Character> = (JSON.parse(window.localStorage.getItem(\"characters\")) || []).map(Character.fromJson);\r\n        savedCharacters.unshift(Character.newCharacter());\r\n        savedCharacters[0].ghost = true;\r\n\r\n        this.mode = ko.observable(\"list\");\r\n        this.characterId = ko.observable(0);\r\n        this.characters = ko.observableArray(savedCharacters);\r\n        this.realCharacters = ko.computed(() => this.characters().filter(c => !c.ghost), this);\r\n        this.character = ko.computed(() => this.characters()[this.characterId()], this);\r\n        this.dice = new Dice();\r\n        this.lockButtonClass = ko.computed(() => this.character().locked() ? \"btn-danger\" : \"btn-outline-success\", this);\r\n        this.lockButtonIcon = ko.computed(() => this.character().locked() ? \"fas fa-lock\" : \"fas fa-lock-open\", this);\r\n        this._previousSection = null;\r\n        this.showClock = ko.observable(false);\r\n        this.currentTime = ko.observable(new Date());\r\n\r\n        this.currentTimeDisplay = ko.computed(() => {\r\n            const time = this.currentTime();\r\n            let hours = time.getHours();\r\n            const minutes = time.getMinutes();\r\n            const seconds = time.getSeconds();\r\n            const suffix = hours < 12 ? \"AM\" : \"PM\";\r\n            const minutePrefix = minutes < 10 ? \"0\" : \"\";\r\n            const secondPrefix = seconds < 10 ? \"0\" : \"\";\r\n            if (hours > 12) hours -= 12;\r\n            return `${hours}:${minutePrefix}${minutes}:${secondPrefix}${seconds} ${suffix}`;\r\n        }, this);\r\n\r\n        window.setInterval(() => {\r\n            this.currentTime(new Date());\r\n        }, 1000);\r\n\r\n        window.addEventListener(\"keydown\", e => {\r\n            if (e.ctrlKey !== true) return;\r\n\r\n            switch (e.key) {\r\n                case \"s\":\r\n                    e.preventDefault();\r\n                    this.saveCharacters();\r\n                    break;\r\n                case \"z\":\r\n                    e.preventDefault();\r\n                    CommandStack.instance.undo();\r\n                    break;\r\n                case \"Z\":\r\n                    e.preventDefault();\r\n                    CommandStack.instance.redo();\r\n                    break;\r\n            }\r\n        });\r\n\r\n        window.addEventListener(\"hashchange\", e => {\r\n            const hash = window.location.hash.substring(1);\r\n            if (!hash) return;\r\n\r\n            var offset = 80; // TODO: Don't hardcode this maybe?\r\n            var $domElement = $(`#${hash}`);\r\n            $(window).scrollTop($domElement.offset().top - offset);\r\n        });\r\n    }\r\n\r\n    public toggleClock(): void {\r\n        this.showClock(!this.showClock());\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.mode() === \"sheet\") this.mode(\"list\");\r\n        else {\r\n            this.mode(\"sheet\");\r\n\r\n            if (this._previousSection) window.location.hash = this._previousSection;\r\n        }\r\n    }\r\n\r\n    public newCharacter(): void {\r\n        const newChar = Character.newCharacter();\r\n        newChar.locked(false);\r\n        this.characters.push(newChar);\r\n        this.characterId(this.characters().length - 1);\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public selectCharacter(character: Character): void {\r\n        this.characterId(this.characters.indexOf(character));\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public deleteCharacter(character: Character): void {\r\n        // swal({\r\n        //     title: `Delete ${this.character().name()}`,\r\n        //     text: \"Are you sure? (As long as you don't save, your character won't be gone.)\",\r\n        //     icon: \"warning\",\r\n        //     buttons: [\"Cancel\", \"Delete\"],\r\n        //     dangerMode: true\r\n        // })\r\n        // .then((willDelete: boolean) => {\r\n        //     if (willDelete) {\r\n        //         const id = this.characterId();\r\n        //         this.characterId(0);\r\n        //         this.characters.remove(this.characters()[id]);\r\n        //         this.mode(\"list\");\r\n        //     }\r\n        // });\r\n        if (this.character().locked()) return;\r\n        if (confirm(`Are you sure you want to delete ${this.character().name()}? (As long as you don't save, your character won't be gone.)`)) {\r\n            const id = this.characterId();\r\n            this.characterId(0);\r\n            this.characters.remove(this.characters()[id]);\r\n            this.mode(\"list\");\r\n        }\r\n    }\r\n\r\n    public saveCharacters(): void {\r\n        window.localStorage.setItem(\"characters\", JSON.stringify(this.realCharacters().map(c => c.toJson())));\r\n        // swal(\"Characters saved successfully!\", {\r\n        //     buttons: [],\r\n        //     timer: 1000,\r\n        //     icon: \"success\"\r\n        // });\r\n        alert(\"Characters saved successfully!\");\r\n    }\r\n\r\n    public downloadCharacter(): void {\r\n        const json = JSON.stringify(this.character().toJson());\r\n\r\n        const dl = document.createElement(\"a\");\r\n        dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${encodeURIComponent(json)}`);\r\n        dl.setAttribute(\"download\", `${this.character().name()}.json`);\r\n\r\n        dl.style.display = \"none\";\r\n        document.body.appendChild(dl);\r\n\r\n        dl.click();\r\n\r\n        document.body.removeChild(dl);\r\n    }\r\n\r\n    public uploadCharacter(): void {\r\n        const ul = document.createElement(\"input\");\r\n        ul.type = \"file\";\r\n        ul.accept = \".json\";\r\n        ul.style.display = \"none\";\r\n\r\n        ul.addEventListener(\"change\", e => {\r\n            const file = ul.files[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const json = e.target.result;\r\n                this.characters.push(Character.fromJson(JSON.parse(json)));\r\n                this.characterId(this.characters().length - 1);\r\n                this.mode(\"sheet\");\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n\r\n        document.body.appendChild(ul);\r\n\r\n        ul.click();\r\n\r\n        document.body.removeChild(ul);\r\n    }\r\n\r\n    public toggleCharacterLock(): void {\r\n        const character = this.character();\r\n        character.locked(!character.locked());\r\n    }\r\n\r\n    public switchMode(mode: string): () => void {\r\n        return () => {\r\n            if (this.mode() !== \"list\" && document.getElementById(mode)) {\r\n                this._previousSection = mode;\r\n            }\r\n            else this._previousSection = null;\r\n\r\n            window.location.hash = \"\";\r\n            this.mode(mode);\r\n        }\r\n    }\r\n}","import Damage from \"./Damage\";\r\nimport Equipment from \"./Equipment\";\r\nimport InventoryItem from \"./InventoryItem\";\r\nimport Merit from \"./Merit\";\r\nimport Note from \"./Note\";\r\nimport { randomInteger } from \"../utils\";\r\n\r\nexport default class Character {\r\n    public ghost: boolean = false;\r\n    public locked: KnockoutObservable<boolean> = ko.observable(true);\r\n\r\n    public name: KnockoutObservable<string>;\r\n    public player: KnockoutObservable<string>;\r\n    public age: KnockoutObservable<number>;\r\n    public vice: KnockoutObservable<string>;\r\n    public virtue: KnockoutObservable<string>;\r\n    public origins: KnockoutObservable<string>;\r\n    public gender: KnockoutObservable<string>;\r\n    public concept: KnockoutObservable<string>;\r\n    public chronicle: KnockoutObservable<string>;\r\n\r\n    public intelligence: KnockoutObservable<number>;\r\n    public strength: KnockoutObservable<number>;\r\n    public presence: KnockoutObservable<number>;\r\n    public wits: KnockoutObservable<number>;\r\n    public dexterity: KnockoutObservable<number>;\r\n    public manipulation: KnockoutObservable<number>;\r\n    public resolve: KnockoutObservable<number>;\r\n    public stamina: KnockoutObservable<number>;\r\n    public composure: KnockoutObservable<number>;\r\n\r\n    public academics: KnockoutObservable<number>;\r\n    public robotics: KnockoutObservable<number>;\r\n    public crafts: KnockoutObservable<number>;\r\n    public investigation: KnockoutObservable<number>;\r\n    public medicine: KnockoutObservable<number>;\r\n    public occult: KnockoutObservable<number>;\r\n    public politics: KnockoutObservable<number>;\r\n    public science: KnockoutObservable<number>;\r\n    \r\n    public athletics: KnockoutObservable<number>;\r\n    public brawl: KnockoutObservable<number>;\r\n    public drive: KnockoutObservable<number>;\r\n    public ranged: KnockoutObservable<number>;\r\n    public larceny: KnockoutObservable<number>;\r\n    public stealth: KnockoutObservable<number>;\r\n    public survival: KnockoutObservable<number>;\r\n    public weaponry: KnockoutObservable<number>;\r\n\r\n    public animalKen: KnockoutObservable<number>;\r\n    public empathy: KnockoutObservable<number>;\r\n    public expression: KnockoutObservable<number>;\r\n    public intimidation: KnockoutObservable<number>;\r\n    public persuasion: KnockoutObservable<number>;\r\n    public socialize: KnockoutObservable<number>;\r\n    public streetwise: KnockoutObservable<number>;\r\n    public subterfuge: KnockoutObservable<number>;\r\n\r\n    public merits: KnockoutObservableArray<Merit>;\r\n    public spells: KnockoutObservableArray<Merit>;\r\n    public flaws: KnockoutObservableArray<Merit>;\r\n\r\n    public size: KnockoutObservable<number>;\r\n    public speed: KnockoutComputed<number>;\r\n    public defense: KnockoutComputed<number>;\r\n    public armor: KnockoutObservable<number>;\r\n    public initiative: KnockoutComputed<number>;\r\n    public experience: KnockoutObservable<number>;\r\n    public morality: KnockoutObservable<number>;\r\n\r\n    public weapons: KnockoutObservableArray<Equipment>;\r\n    public equipment: KnockoutObservableArray<Equipment>;\r\n    public inventory: KnockoutObservableArray<InventoryItem>;\r\n\r\n    public notes: KnockoutObservableArray<Note>;\r\n\r\n    public health: KnockoutComputed<number>;\r\n    public damage: Damage;\r\n\r\n    public magic: KnockoutComputed<number>;\r\n    public usedMagic: KnockoutObservable<number>;\r\n\r\n    public willpower: KnockoutComputed<number>;\r\n    public usedWillpower: KnockoutObservable<number>;\r\n\r\n    public constructor(json: CharacterJson) {\r\n        this.name = ko.observable(json.name).extend({ lockable: this.locked });\r\n        this.player = ko.observable(json.player).extend({ lockable: this.locked });\r\n        this.age = ko.observable(json.age).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.vice = ko.observable(json.vice).extend({ lockable: this.locked });\r\n        this.virtue = ko.observable(json.virtue).extend({ lockable: this.locked });\r\n        this.origins = ko.observable(json.origins).extend({ lockable: this.locked });\r\n        this.gender = ko.observable(json.gender).extend({ lockable: this.locked });\r\n        this.concept = ko.observable(json.concept).extend({ lockable: this.locked });\r\n        this.chronicle = ko.observable(json.chronicle).extend({ lockable: this.locked });\r\n\r\n        this.intelligence = ko.observable(json.intelligence).extend({ lockable: this.locked });\r\n        this.strength = ko.observable(json.strength).extend({ lockable: this.locked });\r\n        this.presence = ko.observable(json.presence).extend({ lockable: this.locked });\r\n        this.wits = ko.observable(json.wits).extend({ lockable: this.locked });\r\n        this.dexterity = ko.observable(json.dexterity).extend({ lockable: this.locked });\r\n        this.manipulation = ko.observable(json.manipulation).extend({ lockable: this.locked });\r\n        this.resolve = ko.observable(json.resolve).extend({ lockable: this.locked });\r\n        this.stamina = ko.observable(json.stamina).extend({ lockable: this.locked });\r\n        this.composure = ko.observable(json.composure).extend({ lockable: this.locked });\r\n\r\n        this.academics = ko.observable(json.academics).extend({ lockable: this.locked });\r\n        this.robotics = ko.observable(json.robotics).extend({ lockable: this.locked });\r\n        this.crafts = ko.observable(json.crafts).extend({ lockable: this.locked });\r\n        this.investigation = ko.observable(json.investigation).extend({ lockable: this.locked });\r\n        this.medicine = ko.observable(json.medicine).extend({ lockable: this.locked });\r\n        this.occult = ko.observable(json.occult).extend({ lockable: this.locked });\r\n        this.politics = ko.observable(json.politics).extend({ lockable: this.locked });\r\n        this.science = ko.observable(json.science).extend({ lockable: this.locked });\r\n\r\n        this.athletics = ko.observable(json.athletics).extend({ lockable: this.locked });\r\n        this.brawl = ko.observable(json.brawl).extend({ lockable: this.locked });\r\n        this.drive = ko.observable(json.drive).extend({ lockable: this.locked });\r\n        this.ranged = ko.observable(json.ranged).extend({ lockable: this.locked });\r\n        this.larceny = ko.observable(json.larceny).extend({ lockable: this.locked });\r\n        this.stealth = ko.observable(json.stealth).extend({ lockable: this.locked });\r\n        this.survival = ko.observable(json.survival).extend({ lockable: this.locked });\r\n        this.weaponry = ko.observable(json.weaponry).extend({ lockable: this.locked });\r\n\r\n        this.animalKen = ko.observable(json.animalKen).extend({ lockable: this.locked });\r\n        this.empathy = ko.observable(json.empathy).extend({ lockable: this.locked });\r\n        this.expression = ko.observable(json.expression).extend({ lockable: this.locked });\r\n        this.intimidation = ko.observable(json.intimidation).extend({ lockable: this.locked });\r\n        this.persuasion = ko.observable(json.persuasion).extend({ lockable: this.locked });\r\n        this.socialize = ko.observable(json.socialize).extend({ lockable: this.locked });\r\n        this.streetwise = ko.observable(json.streetwise).extend({ lockable: this.locked });\r\n        this.subterfuge = ko.observable(json.subterfuge).extend({ lockable: this.locked });\r\n\r\n        this.merits = ko.observableArray(json.merits.map(m => new Merit(m.name, m.value, this.locked)));\r\n        this.spells = ko.observableArray(json.spells.map(s => new Merit(s.name, s.value, this.locked)));\r\n        this.flaws = ko.observableArray(json.flaws.map(f => new Merit(f.name, f.value, this.locked)));\r\n\r\n        this.size = ko.observable(json.size).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n        this.speed = ko.computed(() => this.strength() + this.dexterity() + 5, this);\r\n        this.defense = ko.computed(() => Math.min(this.dexterity(), this.wits()), this);\r\n        this.armor = ko.observable(json.armor).extend({ numeric: { precision: 0 } }).extend({ lockable: this.locked });\r\n        this.initiative = ko.computed(() => this.dexterity() + this.composure(), this);\r\n        this.experience = ko.observable(json.experience).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.morality = ko.observable(json.morality).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n\r\n        this.weapons = ko.observableArray(json.weapons.map(w => new Equipment(w.name, w.description, this.locked)));\r\n        this.equipment = ko.observableArray(json.equipment.map(e => new Equipment(e.name, e.description, this.locked)));\r\n        this.inventory = ko.observableArray(json.inventory.map(i => new InventoryItem(i.name, i.description, i.quantity, this.locked)));\r\n\r\n        this.notes = ko.observableArray(json.notes.map(n => new Note(n, this.locked)));\r\n\r\n        this.health = ko.computed(() => this.stamina() + this.size(), this);\r\n        this.damage = new Damage(this.health, json.bashing, json.lethal, json.aggravated, this.locked);\r\n\r\n        this.magic = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedMagic = ko.observable(json.usedMagic || 0).extend({ lockable: this.locked });\r\n        this.magic.subscribe(val => {\r\n            if (this.usedMagic() > val) this.usedMagic(val);\r\n        }, this);\r\n\r\n        this.willpower = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedWillpower = ko.observable(json.usedWillpower || 0).extend({ lockable: this.locked });\r\n        this.willpower.subscribe(val => {\r\n            if (this.usedWillpower() > val) this.usedWillpower(val);\r\n        }, this);\r\n    }\r\n\r\n    public static newCharacter(): Character {\r\n        return new Character({\r\n            name: randomName(),\r\n            player: \"\",\r\n            age: 0,\r\n            vice: \"\",\r\n            virtue: \"\",\r\n            origins: \"\",\r\n            gender: \"\",\r\n            concept: \"\",\r\n            chronicle: \"\",\r\n\r\n            intelligence: 1,\r\n            strength: 1,\r\n            presence: 1,\r\n            wits: 1,\r\n            dexterity: 1,\r\n            manipulation: 1,\r\n            resolve: 1,\r\n            stamina: 1,\r\n            composure: 1,\r\n\r\n            academics: 0,\r\n            robotics: 0,\r\n            crafts: 0,\r\n            investigation: 0,\r\n            medicine: 0,\r\n            occult: 0,\r\n            politics: 0,\r\n            science: 0,\r\n\r\n            athletics: 0,\r\n            brawl: 0,\r\n            drive: 0,\r\n            ranged: 0,\r\n            larceny: 0,\r\n            stealth: 0,\r\n            survival: 0,\r\n            weaponry: 0,\r\n\r\n            animalKen: 0,\r\n            empathy: 0,\r\n            expression: 0,\r\n            intimidation: 0,\r\n            persuasion: 0,\r\n            socialize: 0,\r\n            streetwise: 0,\r\n            subterfuge: 0,\r\n\r\n            merits: [],\r\n            spells: [],\r\n            flaws: [],\r\n\r\n            size: 5,\r\n            armor: 0,\r\n            experience: 0,\r\n            morality: 7,\r\n\r\n            weapons: [],\r\n            equipment: [],\r\n            inventory: [],\r\n\r\n            notes: []\r\n        });\r\n    }\r\n\r\n    public static fromJson(json: CharacterJson): Character {\r\n        return new Character(json);\r\n    }\r\n\r\n    public onComponentClick(_: any, e: Event): void {\r\n        const element = <HTMLElement>e.currentTarget;\r\n        element.getElementsByTagName(\"input\")[0].focus();\r\n    }\r\n\r\n    public newItem<T>(observableArray: KnockoutObservableArray<T>, constructor: { createLockable(locked: KnockoutObservable<boolean>): T}): () => void {\r\n        return () => {\r\n            if (this.locked()) return;\r\n            observableArray.push(constructor.createLockable(this.locked));\r\n        };\r\n    }\r\n\r\n    public removeItem<T>(observableArray: KnockoutObservableArray<T>): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            observableArray.remove(item);\r\n        };\r\n    }\r\n\r\n    public moveItem<T>(observableArray: KnockoutObservableArray<T>, direction: number): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            const index = observableArray.indexOf(item);\r\n            const newIndex = index + direction;\r\n\r\n            if (newIndex < 0 || newIndex >= observableArray().length) return;\r\n\r\n            observableArray.splice(index, 1);\r\n            observableArray.splice(newIndex, 0, item);\r\n        };\r\n    }\r\n\r\n    public clearUsed(usedObservable: KnockoutObservable<number>): () => void {\r\n        return () => {\r\n            usedObservable(0);\r\n        };\r\n    }\r\n\r\n    public toJson(): CharacterJson {\r\n        return {\r\n            name: this.name(),\r\n            player: this.player(),\r\n            age: this.age(),\r\n            vice: this.vice(),\r\n            virtue: this.virtue(),\r\n            origins: this.origins(),\r\n            gender: this.gender(),\r\n            concept: this.concept(),\r\n            chronicle: this.chronicle(),\r\n\r\n            intelligence: this.intelligence(),\r\n            wits: this.wits(),\r\n            resolve: this.resolve(),\r\n            strength: this.strength(),\r\n            dexterity: this.dexterity(),\r\n            stamina: this.stamina(),\r\n            presence: this.presence(),\r\n            manipulation: this.manipulation(),\r\n            composure: this.composure(),\r\n\r\n            bashing: this.damage.bashing(),\r\n            lethal: this.damage.lethal(),\r\n            aggravated: this.damage.aggravated(),\r\n            usedMagic: this.usedMagic(),\r\n            usedWillpower: this.usedWillpower(),\r\n\r\n            academics: this.academics(),\r\n            robotics: this.robotics(),\r\n            crafts: this.crafts(),\r\n            investigation: this.investigation(),\r\n            medicine: this.medicine(),\r\n            occult: this.occult(),\r\n            politics: this.politics(),\r\n            science: this.science(),\r\n\r\n            athletics: this.athletics(),\r\n            brawl: this.brawl(),\r\n            drive: this.drive(),\r\n            ranged: this.ranged(),\r\n            larceny: this.larceny(),\r\n            stealth: this.stealth(),\r\n            survival: this.survival(),\r\n            weaponry: this.weaponry(),\r\n\r\n            animalKen: this.animalKen(),\r\n            empathy: this.empathy(),\r\n            expression: this.expression(),\r\n            intimidation: this.intimidation(),\r\n            persuasion: this.persuasion(),\r\n            socialize: this.socialize(),\r\n            streetwise: this.streetwise(),\r\n            subterfuge: this.subterfuge(),\r\n\r\n            merits: this.merits().map(m => { return { name: m.name(), value: m.value() }; }),\r\n            spells: this.spells().map(s => { return { name: s.name(), value: s.value() }; }),\r\n            flaws: this.flaws().map(f => { return { name: f.name(), value: f.value() }; }),\r\n\r\n            size: this.size(),\r\n            armor: this.armor(),\r\n            experience: this.experience(),\r\n            morality: this.morality(),\r\n\r\n            weapons: this.weapons().map(w => { return { name: w.name(), description: w.description() }; }),\r\n            equipment: this.equipment().map(e => { return { name: e.name(), description: e.description() }; }),\r\n            inventory: this.inventory().map(i => { return { name: i.name(), description: i.description(), quantity: i.quantity() }; }),\r\n\r\n            notes: this.notes().map(n => n.value())\r\n        };\r\n    }\r\n}\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\nfunction randomName() {\r\n    const firstNameLength = randomInteger(5, 12);\r\n    const lastNameLength = randomInteger(5, 12);\r\n    let firstName = \"\";\r\n    let lastName = \"\";\r\n\r\n    for (let i = 0; i < firstNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        firstName += newLetter;\r\n    }\r\n\r\n    for (let i = 0; i < lastNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        lastName += newLetter;\r\n    }\r\n\r\n    return `${firstName} ${lastName}`;\r\n}\r\n\r\ntype CharacterJson = {\r\n    name: string,\r\n    player: string,\r\n    age: number,\r\n    vice: string,\r\n    virtue: string,\r\n    origins: string,\r\n    gender: string,\r\n    concept: string,\r\n    chronicle: string,\r\n\r\n    intelligence: number,\r\n    strength: number,\r\n    presence: number,\r\n    wits: number,\r\n    dexterity: number,\r\n    manipulation: number,\r\n    resolve: number,\r\n    stamina: number,\r\n    composure: number,\r\n\r\n    academics: number,\r\n    robotics: number,\r\n    crafts: number,\r\n    investigation: number,\r\n    medicine: number,\r\n    occult: number,\r\n    politics: number,\r\n    science: number,\r\n\r\n    athletics: number,\r\n    brawl: number,\r\n    drive: number,\r\n    ranged: number,\r\n    larceny: number,\r\n    stealth: number,\r\n    survival: number,\r\n    weaponry: number,\r\n\r\n    animalKen: number,\r\n    empathy: number,\r\n    expression: number,\r\n    intimidation: number,\r\n    persuasion: number,\r\n    socialize: number,\r\n    streetwise: number,\r\n    subterfuge: number,\r\n\r\n    merits: Array<{ name: string, value: number }>,\r\n    spells: Array<{ name: string, value: number }>,\r\n    flaws: Array<{ name: string, value: number }>,\r\n\r\n    size: number,\r\n    armor: number,\r\n    experience: number,\r\n    morality: number,\r\n\r\n    weapons: Array<{ name: string, description: string }>,\r\n    equipment: Array<{ name: string, description: string }>,\r\n    inventory: Array<{ name: string, description: string, quantity: number }>,\r\n\r\n    notes: Array<string>,\r\n\r\n    bashing?: number,\r\n    lethal?: number,\r\n    aggravated?: number,\r\n\r\n    usedMagic?: number,\r\n    usedWillpower?: number\r\n};","export default class Damage {\r\n    public totalHealth: KnockoutComputed<number>;\r\n    public bashing: KnockoutObservable<number>;\r\n    public lethal: KnockoutObservable<number>;\r\n    public aggravated: KnockoutObservable<number>;\r\n\r\n    public constructor(totalHealthObservable: KnockoutComputed<number>, bashing?: number, lethal?: number, aggravated?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.totalHealth = totalHealthObservable;\r\n        this.bashing = ko.observable(bashing || 0);\r\n        this.lethal = ko.observable(lethal || 0);\r\n        this.aggravated = ko.observable(aggravated || 0);\r\n\r\n        if (locked) {\r\n            this.bashing = this.bashing.extend({ lockable: locked });\r\n            this.lethal = this.lethal.extend({ lockable: locked });\r\n            this.aggravated = this.aggravated.extend({ lockable: locked });\r\n        }\r\n\r\n        totalHealthObservable.subscribe(val => {\r\n            while (this.bashing() + this.lethal() + this.aggravated() > val) {\r\n                if (this.bashing() > 0) {\r\n                    this.bashing(this.bashing() - 1);\r\n                }\r\n                else if (this.lethal() > 0) {\r\n                    this.lethal(this.lethal() - 1);\r\n                }\r\n                else {\r\n                    this.aggravated(this.aggravated() - 1);\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    public anyEmpty(): boolean {\r\n        return this.bashing() + this.lethal() + this.aggravated() < this.totalHealth();\r\n    }\r\n\r\n    public addBashing(): void {\r\n        if (this.anyEmpty()) {\r\n            this.bashing(this.bashing() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addLethal(): void {\r\n        if (this.anyEmpty()) {\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addAggravated(): void {\r\n        if (this.anyEmpty()) {\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public clearAll(): void {\r\n        this.bashing(0);\r\n        this.lethal(0);\r\n        this.aggravated(0);\r\n    }\r\n}","export default class Equipment {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n\r\n    public constructor(name?: string, description?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Equipment(null, null, locked);\r\n    }\r\n}","export default class InventoryItem {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n    public quantity: KnockoutObservable<number>;\r\n    public displayText: KnockoutComputed<string>;\r\n\r\n    public constructor(name?: string, description?: string, quantity?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n        this.quantity = ko.observable(quantity || 1);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n            this.quantity = this.quantity.extend({ lockable: locked });\r\n        }\r\n\r\n        this.displayText = ko.computed(this.getDisplayText, this);\r\n    }\r\n\r\n    public getDisplayText() : string {\r\n        return `${this.quantity()} ${this.name()}`;\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new InventoryItem(null, null, null, locked);\r\n    }\r\n}","export default class Merit {\r\n    public name: KnockoutObservable<string>;\r\n    public value: KnockoutObservable<number>;\r\n\r\n    public constructor(name?: string, value?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.value = ko.observable(value || 0);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Merit(null, null, locked);\r\n    }\r\n}","export default class Note {\r\n    public value: KnockoutObservable<string>;\r\n\r\n    public constructor(value?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.value = ko.observable(value || \"\");\r\n\r\n        if (locked) {\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Note(null, locked);\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class AttributeCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _newValue: number;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>, newValue: number, oldValue: number) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CommandStack {\r\n    private static _instance: CommandStack;\r\n    \r\n    private _undoStack: ICommand[];\r\n    private _redoStack: ICommand[];\r\n\r\n    private constructor() {\r\n        this._undoStack = [];\r\n        this._redoStack = [];\r\n    }\r\n\r\n    public static get instance(): CommandStack {\r\n        if (!CommandStack._instance) CommandStack._instance = new CommandStack();\r\n\r\n        return CommandStack._instance;\r\n    }\r\n\r\n    public execute(command: ICommand): void {\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n        this._redoStack = [];\r\n    }\r\n\r\n    public undo(): void {\r\n        if (this._undoStack.length === 0) return;\r\n        \r\n        const command = this._undoStack.pop();\r\n        command.undo();\r\n        this._redoStack.push(command);\r\n    }\r\n\r\n    public redo(): void {\r\n        if (this._redoStack.length === 0) return;\r\n\r\n        const command = this._redoStack.pop();\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n    }\r\n}","import { randomFloat, randomInteger } from \"./utils\";\r\n\r\nexport default class Dice {\r\n    public dicePool: KnockoutObservable<number>;\r\n    public rollRounds: KnockoutObservableArray<Array<number>>;\r\n    public rollingInProgress: KnockoutObservable<boolean>;\r\n    public totalDiceSuccesses: KnockoutComputed<number>;\r\n    public totalDiceSuccessesDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        this.dicePool = ko.observable(1);\r\n        this.rollRounds = ko.observableArray([]);\r\n        this.rollingInProgress = ko.observable(false);\r\n        this.totalDiceSuccesses = ko.computed(() => {\r\n            if (this.rollingInProgress() || this.rollRounds().length === 0) return -1;\r\n\r\n            return this.rollRounds().reduce((total: number, r: Array<number>) => {\r\n                return total + r.reduce((total: number, d: number) => total + (d > 7 ? 1 : 0), 0);\r\n            }, 0);\r\n        }, this);\r\n        this.totalDiceSuccessesDisplay = ko.computed(() => {\r\n            return this.totalDiceSuccesses() >= 0 ? \"\" + this.totalDiceSuccesses() : \"???\";\r\n        }, this);\r\n    }\r\n\r\n    public incrementDicePool(amount: number): () => void {\r\n        return () => {\r\n            this.dicePool(this.dicePool() + amount);\r\n        };\r\n    }\r\n\r\n    public rollDice(): void {\r\n        const roller = new RollState(this);\r\n        roller.beginRoll();\r\n    }\r\n}\r\n\r\nclass RollState {\r\n    private _diceObj: Dice;\r\n    private _currentRound: number;\r\n    private _currentDice: number;\r\n    private _currentRoundRolls: number;\r\n    private _currentRoundResults: Array<number>;\r\n    private _nextRoundRolls: number;\r\n    private _intervalHandle: number;\r\n\r\n    public constructor(diceObj: Dice) {\r\n        this._diceObj = diceObj;\r\n        this._currentRound = 0;\r\n        this._currentDice = 0;\r\n        this._currentRoundRolls = diceObj.dicePool();\r\n        this._currentRoundResults = [];\r\n        this._nextRoundRolls = 0;\r\n        this._intervalHandle = null;\r\n    }\r\n\r\n    public beginRoll(): void {\r\n        this._diceObj.rollingInProgress(true);\r\n        this._diceObj.rollRounds.removeAll();\r\n        for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n        this._diceObj.rollRounds.push(this._currentRoundResults);\r\n\r\n        this._intervalHandle = window.setInterval(() => {\r\n            const nextRoll = randomInteger(1, 11);\r\n            if (nextRoll === 10) {\r\n                this._nextRoundRolls++;\r\n                const diceContainer = document.getElementsByClassName(\"diceContainer\")[0];\r\n                const critMessage = document.createElement(\"div\");\r\n                critMessage.classList.add(\"crit-message\");\r\n                critMessage.innerText = \"Crit!\";\r\n                critMessage.id = \"critMessage\";\r\n                diceContainer.appendChild(critMessage);\r\n                window.setTimeout(() => diceContainer.removeChild(critMessage), 1010);\r\n            }\r\n            this._currentRoundResults[this._currentDice] = nextRoll;\r\n            this._diceObj.rollRounds.replace(this._diceObj.rollRounds()[this._currentRound], this._currentRoundResults);\r\n            this._currentDice++;\r\n\r\n            if (this._currentDice === this._currentRoundRolls) {\r\n                if (this._nextRoundRolls === 0) {\r\n                    window.clearInterval(this._intervalHandle);\r\n                    this._diceObj.rollingInProgress(false);\r\n                    const critMessage = document.getElementById(\"critMessage\");\r\n                    if (critMessage) {\r\n                        critMessage.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                else {\r\n                    this._currentRound++;\r\n                    this._currentRoundRolls = this._nextRoundRolls;\r\n                    this._nextRoundRolls = 0;\r\n                    this._currentDice = 0;\r\n                    this._currentRoundResults = [];\r\n                    for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n                    this._diceObj.rollRounds.push(this._currentRoundResults);\r\n                }\r\n            }\r\n        }, 250);\r\n    }\r\n}","import Application from \"./Application\";\r\nimport Equipment from \"./Character/Equipment\";\r\nimport InventoryItem from \"./Character/InventoryItem\";\r\nimport Merit from \"./Character/Merit\";\r\nimport Note from \"./Character/Note\";\r\nimport { applyCustomKnockoutCode } from \"./utils\";\r\n\r\napplyCustomKnockoutCode();\r\n\r\nconst constructors = {\r\n    Equipment: Equipment,\r\n    InventoryItem: InventoryItem,\r\n    Merit: Merit,\r\n    Note: Note\r\n};\r\nObject.defineProperty(window, \"constructors\", { value: constructors });\r\n\r\nconst app = new Application();\r\nko.applyBindings(app);\r\n\r\n// Exposing the view model to the global state in case manual changes need to be applied\r\nObject.defineProperty(window, \"app\", { value: app });\r\n\r\nfunction toggleTooltips(enable: boolean): void {\r\n    if (enable) $(\"[data-toggle='tooltip']\").tooltip();\r\n    else $(\"[data-toggle='tooltip']\").tooltip(\"dispose\");\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    toggleTooltips(window.outerWidth >= 992);\r\n});\r\ntoggleTooltips(window.outerWidth >= 992);","import Damage from \"./Character/Damage\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\nimport AttributeCommand from \"./Command/AttributeCommand\";\r\n\r\nexport function randomInteger(minInclusive = 0, maxExclusive = 10): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function randomFloat(minInclusive = 0, maxExclusive = 1): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.random() * (maxExclusive - minInclusive) + minInclusive;\r\n}\r\n\r\nexport function applyCustomKnockoutCode() {\r\n    ko.bindingHandlers.dice = {\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservableArray<Array<number>>) => {\r\n            const rollRounds = valueAccessor()();\r\n            if (rollRounds.length === 0) {\r\n                element.innerHTML = \"\";\r\n                return;\r\n            }\r\n    \r\n            let divs = element.getElementsByClassName(\"dice-round\");\r\n            if (divs.length !== rollRounds.length) {\r\n                const newRound = document.createElement(\"div\");\r\n                newRound.classList.add(\"dice-round\");\r\n                const rolls = rollRounds[rollRounds.length - 1];\r\n                for (let i = 0; i < rolls.length; i++) {\r\n                    const span = document.createElement(\"span\");\r\n                    const delay = randomFloat(0, 0.5);\r\n                    span.style.animation = `rollingDice 0.5s linear -${delay}s infinite alternate`;\r\n                    span.classList.add(\"dice\");\r\n                    newRound.appendChild(span);\r\n                }\r\n                element.appendChild(newRound);\r\n                divs = element.getElementsByClassName(\"dice-round\");\r\n            }\r\n    \r\n            for (let i = 0; i < rollRounds.length; i++) {\r\n                const rolls = rollRounds[i];\r\n                const spans = divs[i].getElementsByClassName(\"dice\");\r\n                for (let j = 0; j < rolls.length; j++) {\r\n                    const roll = rolls[j];\r\n                    const span = <HTMLSpanElement>spans[j];\r\n    \r\n                    if (roll !== -1) {\r\n                        span.style.animation = null;\r\n                        span.style.backgroundImage = `url('images/dice-${roll}.png')`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.damageDisplay = {\r\n        init: (element: HTMLElement) => {\r\n            for (let i = 0; i < 15; i++) {\r\n                const span = document.createElement(\"span\");\r\n                span.classList.add(\"damage\");\r\n                span.classList.add(\"none\");\r\n                element.appendChild(span);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => Damage) => {\r\n            const damageObj = valueAccessor();\r\n            const spans = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < spans.length; i++) {\r\n                if (i < damageObj.aggravated()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.add(\"aggravated\");\r\n                }\r\n                else if (i - damageObj.aggravated() < damageObj.lethal()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"lethal\");\r\n                }\r\n                else if (i - damageObj.aggravated() - damageObj.lethal() < damageObj.bashing()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"bashing\");\r\n                }\r\n                else {\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"none\");\r\n                }\r\n    \r\n                if (i < damageObj.totalHealth()) {\r\n                    spans[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else {\r\n                    spans[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.attribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, canClear?: boolean }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                dot.classList.add(\"pointer\");\r\n                dot.dataset.toggle = \"tooltip\";\r\n                dot.title = \"\" + (i + 1);\r\n                $(dot).tooltip();\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n    \r\n            const canClear = valueAccessor().canClear;\r\n            if (canClear === true || typeof canClear === \"undefined\") {\r\n                const clearDot = document.createElement(\"div\");\r\n                clearDot.classList.add(\"clear-dot\");\r\n                clearDot.innerHTML = \"&times;\";\r\n                clearDot.dataset.toggle = \"tooltip\";\r\n                clearDot.title = \"Clear\";\r\n                clearDot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, 0, valueAccessor().value()));\r\n                });\r\n                element.appendChild(clearDot);\r\n                $(clearDot).tooltip();\r\n            }\r\n    \r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                element.appendChild(dot);\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByClassName(\"attribute-dot\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                const dot = <HTMLSpanElement>dots[i];\r\n                dot.style.backgroundColor = null;\r\n                dot.style.borderColor = null;\r\n                if (i < value) {\r\n                    dot.style.backgroundColor = \"var(--body-color)\";\r\n                    dot.style.borderColor = \"var(--body-color)\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.readOnlyAttribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, hideUnfilled?: boolean }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                dots[i].classList.remove(\"filled\");\r\n                if (i < value) {\r\n                    dots[i].classList.add(\"filled\");\r\n                    dots[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else if (valueAccessor().hideUnfilled) {\r\n                    dots[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.used = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < 12; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                dot.addEventListener(\"click\", () => {\r\n                    valueAccessor().value(index + 1);\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const used = valueAccessor().value();\r\n            const total = valueAccessor().total();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                if (i < used) dots[i].classList.add(\"filled-red\");\r\n                else dots[i].classList.remove(\"filled-red\");\r\n    \r\n                if (i < total) dots[i].classList.remove(\"HIDDEN\");\r\n                else dots[i].classList.add(\"HIDDEN\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.focusOnCreation = {\r\n        init: (element: HTMLInputElement | HTMLTextAreaElement) => {\r\n            window.setTimeout(() => {\r\n                if (element.value) return;\r\n                element.focus();\r\n            }, 1);\r\n        }\r\n    };\r\n    \r\n    (<any>ko.extenders).lockable = (target: any, locked: KnockoutObservable<boolean>) => {\r\n        const result = ko.pureComputed({\r\n            read: target,\r\n            write: (newValue: any) => {\r\n                if (locked()) {\r\n                    target.notifySubscribers(target());\r\n                }\r\n                else {\r\n                    target(newValue);\r\n                    target.notifySubscribers(newValue);\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        return result;\r\n    };\r\n    \r\n    (<any>ko.extenders).numeric = (target: any, args: { precision?: number, min?: number, max?: number }) => {\r\n        const precision = args.precision || 0;\r\n        const min = args.min || -Infinity;\r\n        const max = args.max || Infinity;\r\n    \r\n        // Create a writeable computed observable to intercept writes to our observable\r\n        const result = ko.pureComputed({\r\n            read: target, // Always return the original observable's value\r\n            write: (newValue: any) => {\r\n                const current = target();\r\n                const roundingMultiplier = Math.pow(10, precision);\r\n                const newValueAsNum = isNaN(newValue) ? 0 : +newValue;\r\n                let valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\r\n                if (valueToWrite < min) valueToWrite = min;\r\n                else if (valueToWrite > max) valueToWrite = max;\r\n    \r\n                // Only write if it changed\r\n                if (valueToWrite !== current) {\r\n                    target(valueToWrite);\r\n                }\r\n                else {\r\n                    // If the rounded value is the same, but a different value was written,\r\n                    // force a notification for the current field\r\n                    if (newValue !== current) {\r\n                        target.notifySubscribers(valueToWrite);\r\n                    }\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        // Initialize with current value to make sure it is rounded appropriately\r\n        result(target());\r\n    \r\n        // Return the new computed observable\r\n        return result;\r\n    };\r\n}"]}