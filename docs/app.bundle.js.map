{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/Application.ts","src/ts/Character/Character.ts","src/ts/Character/Damage.ts","src/ts/Character/Equipment.ts","src/ts/Character/InventoryItem.ts","src/ts/Character/Merit.ts","src/ts/Character/Note.ts","src/ts/Dice.ts","src/ts/main.ts","src/ts/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Character_1","Dice_1","Application","prototype","toggleClock","this","showClock","goBack","mode","_previousSection","window","location","hash","newCharacter","newChar","default","locked","characters","push","characterId","selectCharacter","character","indexOf","deleteCharacter","confirm","name","id","remove","saveCharacters","localStorage","setItem","JSON","stringify","realCharacters","map","toJson","alert","downloadCharacter","json","dl","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","uploadCharacter","_this","ul","type","accept","addEventListener","file","files","reader","FileReader","onload","target","result","fromJson","parse","readAsText","toggleCharacterLock","switchMode","getElementById","savedCharacters","getItem","unshift","ghost","ko","observable","observableArray","computed","filter","dice","lockButtonClass","lockButtonIcon","currentTime","Date","currentTimeDisplay","time","hours","getHours","minutes","getMinutes","seconds","getSeconds","suffix","hourPrefix","setInterval","Damage_1","Equipment_1","InventoryItem_1","Merit_1","Note_1","utils_1","Character","firstNameLength","randomInteger","lastNameLength","firstName","lastName","newLetter","alphabet","charAt","toUpperCase","randomName","player","age","vice","virtue","origins","gender","concept","chronicle","intelligence","strength","presence","wits","dexterity","manipulation","resolve","stamina","composure","academics","robotics","crafts","investigation","medicine","occult","politics","science","athletics","brawl","drive","ranged","larceny","stealth","survival","weaponry","animalKen","empathy","expression","intimidation","persuasion","socialize","streetwise","subterfuge","merits","spells","flaws","size","armor","experience","morality","weapons","equipment","inventory","notes","onComponentClick","_","currentTarget","getElementsByTagName","focus","newItem","constructor","createLockable","removeItem","item","moveItem","direction","index","newIndex","splice","clearUsed","usedObservable","bashing","damage","lethal","aggravated","usedMagic","usedWillpower","m","value","s","w","description","quantity","extend","lockable","numeric","precision","min","max","speed","defense","Math","initiative","health","magic","subscribe","val","willpower","Damage","anyEmpty","totalHealth","addBashing","addLethal","addAggravated","clearAll","totalHealthObservable","Equipment","InventoryItem","getDisplayText","displayText","Merit","Note","Dice","incrementDicePool","amount","dicePool","rollDice","RollState","beginRoll","rollRounds","rollingInProgress","totalDiceSuccesses","reduce","total","d","totalDiceSuccessesDisplay","_diceObj","removeAll","_currentRoundRolls","_currentRoundResults","_intervalHandle","nextRoll","_nextRoundRolls","diceContainer_1","getElementsByClassName","critMessage_1","classList","add","innerText","setTimeout","_currentDice","replace","_currentRound","clearInterval","critMessage","diceObj","Application_1","applyCustomKnockoutCode","constructors","Object","defineProperty","app","toggleTooltips","enable","$","tooltip","applyBindings","outerWidth","randomFloat","minInclusive","maxExclusive","_a","random","floor","bindingHandlers","update","element","valueAccessor","divs","newRound","rolls","span","delay","animation","spans","j","roll","backgroundImage","innerHTML","damageDisplay","init","damageObj","attribute","dots","dot","dataset","toggle","title","forEach","clearDot","backgroundColor","borderColor","readOnlyAttribute","hideUnfilled","used","focusOnCreation","extenders","pureComputed","read","write","newValue","notifySubscribers","notify","args","Infinity","current","roundingMultiplier","pow","newValueAsNum","isNaN","valueToWrite","round"],"mappings":"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","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Character from \"./Character/Character\";\r\nimport Dice from \"./Dice\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport default class Application {\r\n    public mode: KnockoutObservable<string>;\r\n    public characterId: KnockoutObservable<number>;\r\n    public characters: KnockoutObservableArray<Character>;\r\n    public realCharacters: KnockoutComputed<Array<Character>>;\r\n    public character: KnockoutComputed<Character>;\r\n    public dice: Dice;\r\n    public lockButtonClass: KnockoutComputed<string>;\r\n    public lockButtonIcon: KnockoutComputed<string>;\r\n    private _previousSection: string;\r\n    public showClock: KnockoutObservable<boolean>;\r\n    public currentTime: KnockoutObservable<Date>;\r\n    public currentTimeDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        const savedCharacters: Array<Character> = (JSON.parse(window.localStorage.getItem(\"characters\")) || []).map(Character.fromJson);\r\n        savedCharacters.unshift(Character.newCharacter());\r\n        savedCharacters[0].ghost = true;\r\n\r\n        this.mode = ko.observable(\"list\");\r\n        this.characterId = ko.observable(0);\r\n        this.characters = ko.observableArray(savedCharacters);\r\n        this.realCharacters = ko.computed(() => this.characters().filter(c => !c.ghost), this);\r\n        this.character = ko.computed(() => this.characters()[this.characterId()], this);\r\n        this.dice = new Dice();\r\n        this.lockButtonClass = ko.computed(() => this.character().locked() ? \"btn-danger\" : \"btn-outline-success\", this);\r\n        this.lockButtonIcon = ko.computed(() => this.character().locked() ? \"fas fa-lock\" : \"fas fa-lock-open\", this);\r\n        this._previousSection = null;\r\n        this.showClock = ko.observable(false);\r\n        this.currentTime = ko.observable(new Date());\r\n\r\n        this.currentTimeDisplay = ko.computed(() => {\r\n            const time = this.currentTime();\r\n            let hours = time.getHours();\r\n            const minutes = time.getMinutes();\r\n            const seconds = time.getSeconds();\r\n            const suffix = hours < 12 ? \"AM\" : \"PM\";\r\n            const hourPrefix = hours < 10 ? \"0\" : \"\";\r\n            const minutePrefix = minutes < 10 ? \"0\" : \"\";\r\n            const secondPrefix = seconds < 10 ? \"0\" : \"\";\r\n            if (hours > 12) hours -= 12;\r\n            return `${hourPrefix}${hours}:${minutePrefix}${minutes}:${secondPrefix}${seconds} ${suffix}`;\r\n        }, this);\r\n\r\n        window.setInterval(() => {\r\n            this.currentTime(new Date());\r\n        }, 1000);\r\n    }\r\n\r\n    public toggleClock(): void {\r\n        this.showClock(!this.showClock());\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.mode() === \"sheet\") this.mode(\"list\");\r\n        else {\r\n            this.mode(\"sheet\");\r\n\r\n            if (this._previousSection) window.location.hash = this._previousSection;\r\n        }\r\n    }\r\n\r\n    public newCharacter(): void {\r\n        const newChar = Character.newCharacter();\r\n        newChar.locked(false);\r\n        this.characters.push(newChar);\r\n        this.characterId(this.characters().length - 1);\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public selectCharacter(character: Character): void {\r\n        this.characterId(this.characters.indexOf(character));\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public deleteCharacter(character: Character): void {\r\n        // swal({\r\n        //     title: `Delete ${this.character().name()}`,\r\n        //     text: \"Are you sure? (As long as you don't save, your character won't be gone.)\",\r\n        //     icon: \"warning\",\r\n        //     buttons: [\"Cancel\", \"Delete\"],\r\n        //     dangerMode: true\r\n        // })\r\n        // .then((willDelete: boolean) => {\r\n        //     if (willDelete) {\r\n        //         const id = this.characterId();\r\n        //         this.characterId(0);\r\n        //         this.characters.remove(this.characters()[id]);\r\n        //         this.mode(\"list\");\r\n        //     }\r\n        // });\r\n        if (this.character().locked()) return;\r\n        if (confirm(`Are you sure you want to delete ${this.character().name()}? (As long as you don't save, your character won't be gone.)`)) {\r\n            const id = this.characterId();\r\n            this.characterId(0);\r\n            this.characters.remove(this.characters()[id]);\r\n            this.mode(\"list\");\r\n        }\r\n    }\r\n\r\n    public saveCharacters(): void {\r\n        window.localStorage.setItem(\"characters\", JSON.stringify(this.realCharacters().map(c => c.toJson())));\r\n        // swal(\"Characters saved successfully!\", {\r\n        //     buttons: [],\r\n        //     timer: 1000,\r\n        //     icon: \"success\"\r\n        // });\r\n        alert(\"Characters saved successfully!\");\r\n    }\r\n\r\n    public downloadCharacter(): void {\r\n        const json = JSON.stringify(this.character().toJson());\r\n\r\n        const dl = document.createElement(\"a\");\r\n        dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${encodeURIComponent(json)}`);\r\n        dl.setAttribute(\"download\", `${this.character().name()}.json`);\r\n\r\n        dl.style.display = \"none\";\r\n        document.body.appendChild(dl);\r\n\r\n        dl.click();\r\n\r\n        document.body.removeChild(dl);\r\n    }\r\n\r\n    public uploadCharacter(): void {\r\n        const ul = document.createElement(\"input\");\r\n        ul.type = \"file\";\r\n        ul.accept = \".json\";\r\n        ul.style.display = \"none\";\r\n\r\n        ul.addEventListener(\"change\", e => {\r\n            const file = ul.files[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const json = e.target.result;\r\n                this.characters.push(Character.fromJson(JSON.parse(json)));\r\n                this.characterId(this.characters().length - 1);\r\n                this.mode(\"sheet\");\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n\r\n        document.body.appendChild(ul);\r\n\r\n        ul.click();\r\n\r\n        document.body.removeChild(ul);\r\n    }\r\n\r\n    public toggleCharacterLock(): void {\r\n        const character = this.character();\r\n        character.locked(!character.locked());\r\n    }\r\n\r\n    public switchMode(mode: string): () => void {\r\n        return () => {\r\n            if (this.mode() !== \"list\" && document.getElementById(mode)) {\r\n                this._previousSection = mode;\r\n            }\r\n            else this._previousSection = null;\r\n\r\n            window.location.hash = \"\";\r\n            this.mode(mode);\r\n        }\r\n    }\r\n}","import Damage from \"./Damage\";\r\nimport Equipment from \"./Equipment\";\r\nimport InventoryItem from \"./InventoryItem\";\r\nimport Merit from \"./Merit\";\r\nimport Note from \"./Note\";\r\nimport { randomInteger } from \"../utils\";\r\n\r\nexport default class Character {\r\n    public ghost: boolean = false;\r\n    public locked: KnockoutObservable<boolean> = ko.observable(true);\r\n\r\n    public name: KnockoutObservable<string>;\r\n    public player: KnockoutObservable<string>;\r\n    public age: KnockoutObservable<number>;\r\n    public vice: KnockoutObservable<string>;\r\n    public virtue: KnockoutObservable<string>;\r\n    public origins: KnockoutObservable<string>;\r\n    public gender: KnockoutObservable<string>;\r\n    public concept: KnockoutObservable<string>;\r\n    public chronicle: KnockoutObservable<string>;\r\n\r\n    public intelligence: KnockoutObservable<number>;\r\n    public strength: KnockoutObservable<number>;\r\n    public presence: KnockoutObservable<number>;\r\n    public wits: KnockoutObservable<number>;\r\n    public dexterity: KnockoutObservable<number>;\r\n    public manipulation: KnockoutObservable<number>;\r\n    public resolve: KnockoutObservable<number>;\r\n    public stamina: KnockoutObservable<number>;\r\n    public composure: KnockoutObservable<number>;\r\n\r\n    public academics: KnockoutObservable<number>;\r\n    public robotics: KnockoutObservable<number>;\r\n    public crafts: KnockoutObservable<number>;\r\n    public investigation: KnockoutObservable<number>;\r\n    public medicine: KnockoutObservable<number>;\r\n    public occult: KnockoutObservable<number>;\r\n    public politics: KnockoutObservable<number>;\r\n    public science: KnockoutObservable<number>;\r\n    \r\n    public athletics: KnockoutObservable<number>;\r\n    public brawl: KnockoutObservable<number>;\r\n    public drive: KnockoutObservable<number>;\r\n    public ranged: KnockoutObservable<number>;\r\n    public larceny: KnockoutObservable<number>;\r\n    public stealth: KnockoutObservable<number>;\r\n    public survival: KnockoutObservable<number>;\r\n    public weaponry: KnockoutObservable<number>;\r\n\r\n    public animalKen: KnockoutObservable<number>;\r\n    public empathy: KnockoutObservable<number>;\r\n    public expression: KnockoutObservable<number>;\r\n    public intimidation: KnockoutObservable<number>;\r\n    public persuasion: KnockoutObservable<number>;\r\n    public socialize: KnockoutObservable<number>;\r\n    public streetwise: KnockoutObservable<number>;\r\n    public subterfuge: KnockoutObservable<number>;\r\n\r\n    public merits: KnockoutObservableArray<Merit>;\r\n    public spells: KnockoutObservableArray<Merit>;\r\n    public flaws: KnockoutObservableArray<Merit>;\r\n\r\n    public size: KnockoutObservable<number>;\r\n    public speed: KnockoutComputed<number>;\r\n    public defense: KnockoutComputed<number>;\r\n    public armor: KnockoutObservable<number>;\r\n    public initiative: KnockoutComputed<number>;\r\n    public experience: KnockoutObservable<number>;\r\n    public morality: KnockoutObservable<number>;\r\n\r\n    public weapons: KnockoutObservableArray<Equipment>;\r\n    public equipment: KnockoutObservableArray<Equipment>;\r\n    public inventory: KnockoutObservableArray<InventoryItem>;\r\n\r\n    public notes: KnockoutObservableArray<Note>;\r\n\r\n    public health: KnockoutComputed<number>;\r\n    public damage: Damage;\r\n\r\n    public magic: KnockoutComputed<number>;\r\n    public usedMagic: KnockoutObservable<number>;\r\n\r\n    public willpower: KnockoutComputed<number>;\r\n    public usedWillpower: KnockoutObservable<number>;\r\n\r\n    public constructor(json: CharacterJson) {\r\n        this.name = ko.observable(json.name).extend({ lockable: this.locked });\r\n        this.player = ko.observable(json.player).extend({ lockable: this.locked });\r\n        this.age = ko.observable(json.age).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.vice = ko.observable(json.vice).extend({ lockable: this.locked });\r\n        this.virtue = ko.observable(json.virtue).extend({ lockable: this.locked });\r\n        this.origins = ko.observable(json.origins).extend({ lockable: this.locked });\r\n        this.gender = ko.observable(json.gender).extend({ lockable: this.locked });\r\n        this.concept = ko.observable(json.concept).extend({ lockable: this.locked });\r\n        this.chronicle = ko.observable(json.chronicle).extend({ lockable: this.locked });\r\n\r\n        this.intelligence = ko.observable(json.intelligence).extend({ lockable: this.locked });\r\n        this.strength = ko.observable(json.strength).extend({ lockable: this.locked });\r\n        this.presence = ko.observable(json.presence).extend({ lockable: this.locked });\r\n        this.wits = ko.observable(json.wits).extend({ lockable: this.locked });\r\n        this.dexterity = ko.observable(json.dexterity).extend({ lockable: this.locked });\r\n        this.manipulation = ko.observable(json.manipulation).extend({ lockable: this.locked });\r\n        this.resolve = ko.observable(json.resolve).extend({ lockable: this.locked });\r\n        this.stamina = ko.observable(json.stamina).extend({ lockable: this.locked });\r\n        this.composure = ko.observable(json.composure).extend({ lockable: this.locked });\r\n\r\n        this.academics = ko.observable(json.academics).extend({ lockable: this.locked });\r\n        this.robotics = ko.observable(json.robotics).extend({ lockable: this.locked });\r\n        this.crafts = ko.observable(json.crafts).extend({ lockable: this.locked });\r\n        this.investigation = ko.observable(json.investigation).extend({ lockable: this.locked });\r\n        this.medicine = ko.observable(json.medicine).extend({ lockable: this.locked });\r\n        this.occult = ko.observable(json.occult).extend({ lockable: this.locked });\r\n        this.politics = ko.observable(json.politics).extend({ lockable: this.locked });\r\n        this.science = ko.observable(json.science).extend({ lockable: this.locked });\r\n\r\n        this.athletics = ko.observable(json.athletics).extend({ lockable: this.locked });\r\n        this.brawl = ko.observable(json.brawl).extend({ lockable: this.locked });\r\n        this.drive = ko.observable(json.drive).extend({ lockable: this.locked });\r\n        this.ranged = ko.observable(json.ranged).extend({ lockable: this.locked });\r\n        this.larceny = ko.observable(json.larceny).extend({ lockable: this.locked });\r\n        this.stealth = ko.observable(json.stealth).extend({ lockable: this.locked });\r\n        this.survival = ko.observable(json.survival).extend({ lockable: this.locked });\r\n        this.weaponry = ko.observable(json.weaponry).extend({ lockable: this.locked });\r\n\r\n        this.animalKen = ko.observable(json.animalKen).extend({ lockable: this.locked });\r\n        this.empathy = ko.observable(json.empathy).extend({ lockable: this.locked });\r\n        this.expression = ko.observable(json.expression).extend({ lockable: this.locked });\r\n        this.intimidation = ko.observable(json.intimidation).extend({ lockable: this.locked });\r\n        this.persuasion = ko.observable(json.persuasion).extend({ lockable: this.locked });\r\n        this.socialize = ko.observable(json.socialize).extend({ lockable: this.locked });\r\n        this.streetwise = ko.observable(json.streetwise).extend({ lockable: this.locked });\r\n        this.subterfuge = ko.observable(json.subterfuge).extend({ lockable: this.locked });\r\n\r\n        this.merits = ko.observableArray(json.merits.map(m => new Merit(m.name, m.value, this.locked)));\r\n        this.spells = ko.observableArray(json.spells.map(s => new Merit(s.name, s.value, this.locked)));\r\n        this.flaws = ko.observableArray(json.flaws.map(f => new Merit(f.name, f.value, this.locked)));\r\n\r\n        this.size = ko.observable(json.size).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n        this.speed = ko.computed(() => this.strength() + this.dexterity() + 5, this);\r\n        this.defense = ko.computed(() => Math.min(this.dexterity(), this.wits()), this);\r\n        this.armor = ko.observable(json.armor).extend({ numeric: { precision: 0 } }).extend({ lockable: this.locked });\r\n        this.initiative = ko.computed(() => this.dexterity() + this.composure(), this);\r\n        this.experience = ko.observable(json.experience).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.morality = ko.observable(json.morality).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n\r\n        this.weapons = ko.observableArray(json.weapons.map(w => new Equipment(w.name, w.description, this.locked)));\r\n        this.equipment = ko.observableArray(json.equipment.map(e => new Equipment(e.name, e.description, this.locked)));\r\n        this.inventory = ko.observableArray(json.inventory.map(i => new InventoryItem(i.name, i.description, i.quantity, this.locked)));\r\n\r\n        this.notes = ko.observableArray(json.notes.map(n => new Note(n, this.locked)));\r\n\r\n        this.health = ko.computed(() => this.stamina() + this.size(), this);\r\n        this.damage = new Damage(this.health, json.bashing, json.lethal, json.aggravated, this.locked);\r\n\r\n        this.magic = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedMagic = ko.observable(json.usedMagic || 0).extend({ lockable: this.locked });\r\n        this.magic.subscribe(val => {\r\n            if (this.usedMagic() > val) this.usedMagic(val);\r\n        }, this);\r\n\r\n        this.willpower = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedWillpower = ko.observable(json.usedWillpower || 0).extend({ lockable: this.locked });\r\n        this.willpower.subscribe(val => {\r\n            if (this.usedWillpower() > val) this.usedWillpower(val);\r\n        }, this);\r\n    }\r\n\r\n    public static newCharacter(): Character {\r\n        return new Character({\r\n            name: randomName(),\r\n            player: \"\",\r\n            age: 0,\r\n            vice: \"\",\r\n            virtue: \"\",\r\n            origins: \"\",\r\n            gender: \"\",\r\n            concept: \"\",\r\n            chronicle: \"\",\r\n\r\n            intelligence: 1,\r\n            strength: 1,\r\n            presence: 1,\r\n            wits: 1,\r\n            dexterity: 1,\r\n            manipulation: 1,\r\n            resolve: 1,\r\n            stamina: 1,\r\n            composure: 1,\r\n\r\n            academics: 0,\r\n            robotics: 0,\r\n            crafts: 0,\r\n            investigation: 0,\r\n            medicine: 0,\r\n            occult: 0,\r\n            politics: 0,\r\n            science: 0,\r\n\r\n            athletics: 0,\r\n            brawl: 0,\r\n            drive: 0,\r\n            ranged: 0,\r\n            larceny: 0,\r\n            stealth: 0,\r\n            survival: 0,\r\n            weaponry: 0,\r\n\r\n            animalKen: 0,\r\n            empathy: 0,\r\n            expression: 0,\r\n            intimidation: 0,\r\n            persuasion: 0,\r\n            socialize: 0,\r\n            streetwise: 0,\r\n            subterfuge: 0,\r\n\r\n            merits: [],\r\n            spells: [],\r\n            flaws: [],\r\n\r\n            size: 5,\r\n            armor: 0,\r\n            experience: 0,\r\n            morality: 7,\r\n\r\n            weapons: [],\r\n            equipment: [],\r\n            inventory: [],\r\n\r\n            notes: []\r\n        });\r\n    }\r\n\r\n    public static fromJson(json: CharacterJson): Character {\r\n        return new Character(json);\r\n    }\r\n\r\n    public onComponentClick(_: any, e: Event): void {\r\n        const element = <HTMLElement>e.currentTarget;\r\n        element.getElementsByTagName(\"input\")[0].focus();\r\n    }\r\n\r\n    public newItem<T>(observableArray: KnockoutObservableArray<T>, constructor: { createLockable(locked: KnockoutObservable<boolean>): T}): () => void {\r\n        return () => {\r\n            if (this.locked()) return;\r\n            observableArray.push(constructor.createLockable(this.locked));\r\n        };\r\n    }\r\n\r\n    public removeItem<T>(observableArray: KnockoutObservableArray<T>): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            observableArray.remove(item);\r\n        };\r\n    }\r\n\r\n    public moveItem<T>(observableArray: KnockoutObservableArray<T>, direction: number): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            const index = observableArray.indexOf(item);\r\n            const newIndex = index + direction;\r\n\r\n            if (newIndex < 0 || newIndex >= observableArray().length) return;\r\n\r\n            observableArray.splice(index, 1);\r\n            observableArray.splice(newIndex, 0, item);\r\n        };\r\n    }\r\n\r\n    public clearUsed(usedObservable: KnockoutObservable<number>): () => void {\r\n        return () => {\r\n            usedObservable(0);\r\n        };\r\n    }\r\n\r\n    public toJson(): CharacterJson {\r\n        return {\r\n            name: this.name(),\r\n            player: this.player(),\r\n            age: this.age(),\r\n            vice: this.vice(),\r\n            virtue: this.virtue(),\r\n            origins: this.origins(),\r\n            gender: this.gender(),\r\n            concept: this.concept(),\r\n            chronicle: this.chronicle(),\r\n\r\n            intelligence: this.intelligence(),\r\n            wits: this.wits(),\r\n            resolve: this.resolve(),\r\n            strength: this.strength(),\r\n            dexterity: this.dexterity(),\r\n            stamina: this.stamina(),\r\n            presence: this.presence(),\r\n            manipulation: this.manipulation(),\r\n            composure: this.composure(),\r\n\r\n            bashing: this.damage.bashing(),\r\n            lethal: this.damage.lethal(),\r\n            aggravated: this.damage.aggravated(),\r\n            usedMagic: this.usedMagic(),\r\n            usedWillpower: this.usedWillpower(),\r\n\r\n            academics: this.academics(),\r\n            robotics: this.robotics(),\r\n            crafts: this.crafts(),\r\n            investigation: this.investigation(),\r\n            medicine: this.medicine(),\r\n            occult: this.occult(),\r\n            politics: this.politics(),\r\n            science: this.science(),\r\n\r\n            athletics: this.athletics(),\r\n            brawl: this.brawl(),\r\n            drive: this.drive(),\r\n            ranged: this.ranged(),\r\n            larceny: this.larceny(),\r\n            stealth: this.stealth(),\r\n            survival: this.survival(),\r\n            weaponry: this.weaponry(),\r\n\r\n            animalKen: this.animalKen(),\r\n            empathy: this.empathy(),\r\n            expression: this.expression(),\r\n            intimidation: this.intimidation(),\r\n            persuasion: this.persuasion(),\r\n            socialize: this.socialize(),\r\n            streetwise: this.streetwise(),\r\n            subterfuge: this.subterfuge(),\r\n\r\n            merits: this.merits().map(m => { return { name: m.name(), value: m.value() }; }),\r\n            spells: this.spells().map(s => { return { name: s.name(), value: s.value() }; }),\r\n            flaws: this.flaws().map(f => { return { name: f.name(), value: f.value() }; }),\r\n\r\n            size: this.size(),\r\n            armor: this.armor(),\r\n            experience: this.experience(),\r\n            morality: this.morality(),\r\n\r\n            weapons: this.weapons().map(w => { return { name: w.name(), description: w.description() }; }),\r\n            equipment: this.equipment().map(e => { return { name: e.name(), description: e.description() }; }),\r\n            inventory: this.inventory().map(i => { return { name: i.name(), description: i.description(), quantity: i.quantity() }; }),\r\n\r\n            notes: this.notes().map(n => n.value())\r\n        };\r\n    }\r\n}\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\nfunction randomName() {\r\n    const firstNameLength = randomInteger(5, 12);\r\n    const lastNameLength = randomInteger(5, 12);\r\n    let firstName = \"\";\r\n    let lastName = \"\";\r\n\r\n    for (let i = 0; i < firstNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        firstName += newLetter;\r\n    }\r\n\r\n    for (let i = 0; i < lastNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        lastName += newLetter;\r\n    }\r\n\r\n    return `${firstName} ${lastName}`;\r\n}\r\n\r\ntype CharacterJson = {\r\n    name: string,\r\n    player: string,\r\n    age: number,\r\n    vice: string,\r\n    virtue: string,\r\n    origins: string,\r\n    gender: string,\r\n    concept: string,\r\n    chronicle: string,\r\n\r\n    intelligence: number,\r\n    strength: number,\r\n    presence: number,\r\n    wits: number,\r\n    dexterity: number,\r\n    manipulation: number,\r\n    resolve: number,\r\n    stamina: number,\r\n    composure: number,\r\n\r\n    academics: number,\r\n    robotics: number,\r\n    crafts: number,\r\n    investigation: number,\r\n    medicine: number,\r\n    occult: number,\r\n    politics: number,\r\n    science: number,\r\n\r\n    athletics: number,\r\n    brawl: number,\r\n    drive: number,\r\n    ranged: number,\r\n    larceny: number,\r\n    stealth: number,\r\n    survival: number,\r\n    weaponry: number,\r\n\r\n    animalKen: number,\r\n    empathy: number,\r\n    expression: number,\r\n    intimidation: number,\r\n    persuasion: number,\r\n    socialize: number,\r\n    streetwise: number,\r\n    subterfuge: number,\r\n\r\n    merits: Array<{ name: string, value: number }>,\r\n    spells: Array<{ name: string, value: number }>,\r\n    flaws: Array<{ name: string, value: number }>,\r\n\r\n    size: number,\r\n    armor: number,\r\n    experience: number,\r\n    morality: number,\r\n\r\n    weapons: Array<{ name: string, description: string }>,\r\n    equipment: Array<{ name: string, description: string }>,\r\n    inventory: Array<{ name: string, description: string, quantity: number }>,\r\n\r\n    notes: Array<string>,\r\n\r\n    bashing?: number,\r\n    lethal?: number,\r\n    aggravated?: number,\r\n\r\n    usedMagic?: number,\r\n    usedWillpower?: number\r\n};","export default class Damage {\r\n    public totalHealth: KnockoutComputed<number>;\r\n    public bashing: KnockoutObservable<number>;\r\n    public lethal: KnockoutObservable<number>;\r\n    public aggravated: KnockoutObservable<number>;\r\n\r\n    public constructor(totalHealthObservable: KnockoutComputed<number>, bashing?: number, lethal?: number, aggravated?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.totalHealth = totalHealthObservable;\r\n        this.bashing = ko.observable(bashing || 0);\r\n        this.lethal = ko.observable(lethal || 0);\r\n        this.aggravated = ko.observable(aggravated || 0);\r\n\r\n        if (locked) {\r\n            this.bashing = this.bashing.extend({ lockable: locked });\r\n            this.lethal = this.lethal.extend({ lockable: locked });\r\n            this.aggravated = this.aggravated.extend({ lockable: locked });\r\n        }\r\n\r\n        totalHealthObservable.subscribe(val => {\r\n            while (this.bashing() + this.lethal() + this.aggravated() > val) {\r\n                if (this.bashing() > 0) {\r\n                    this.bashing(this.bashing() - 1);\r\n                }\r\n                else if (this.lethal() > 0) {\r\n                    this.lethal(this.lethal() - 1);\r\n                }\r\n                else {\r\n                    this.aggravated(this.aggravated() - 1);\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    public anyEmpty(): boolean {\r\n        return this.bashing() + this.lethal() + this.aggravated() < this.totalHealth();\r\n    }\r\n\r\n    public addBashing(): void {\r\n        if (this.anyEmpty()) {\r\n            this.bashing(this.bashing() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addLethal(): void {\r\n        if (this.anyEmpty()) {\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addAggravated(): void {\r\n        if (this.anyEmpty()) {\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public clearAll(): void {\r\n        this.bashing(0);\r\n        this.lethal(0);\r\n        this.aggravated(0);\r\n    }\r\n}","export default class Equipment {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n\r\n    public constructor(name?: string, description?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Equipment(null, null, locked);\r\n    }\r\n}","export default class InventoryItem {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n    public quantity: KnockoutObservable<number>;\r\n    public displayText: KnockoutComputed<string>;\r\n\r\n    public constructor(name?: string, description?: string, quantity?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n        this.quantity = ko.observable(quantity || 1);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n            this.quantity = this.quantity.extend({ lockable: locked });\r\n        }\r\n\r\n        this.displayText = ko.computed(this.getDisplayText, this);\r\n    }\r\n\r\n    public getDisplayText() : string {\r\n        return `${this.quantity()} ${this.name()}`;\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new InventoryItem(null, null, null, locked);\r\n    }\r\n}","export default class Merit {\r\n    public name: KnockoutObservable<string>;\r\n    public value: KnockoutObservable<number>;\r\n\r\n    public constructor(name?: string, value?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.value = ko.observable(value || 0);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Merit(null, null, locked);\r\n    }\r\n}","export default class Note {\r\n    public value: KnockoutObservable<string>;\r\n\r\n    public constructor(value?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.value = ko.observable(value || \"\");\r\n\r\n        if (locked) {\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Note(null, locked);\r\n    }\r\n}","import { randomFloat, randomInteger } from \"./utils\";\r\n\r\nexport default class Dice {\r\n    public dicePool: KnockoutObservable<number>;\r\n    public rollRounds: KnockoutObservableArray<Array<number>>;\r\n    public rollingInProgress: KnockoutObservable<boolean>;\r\n    public totalDiceSuccesses: KnockoutComputed<number>;\r\n    public totalDiceSuccessesDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        this.dicePool = ko.observable(1);\r\n        this.rollRounds = ko.observableArray([]);\r\n        this.rollingInProgress = ko.observable(false);\r\n        this.totalDiceSuccesses = ko.computed(() => {\r\n            if (this.rollingInProgress() || this.rollRounds().length === 0) return -1;\r\n\r\n            return this.rollRounds().reduce((total: number, r: Array<number>) => {\r\n                return total + r.reduce((total: number, d: number) => total + (d > 7 ? 1 : 0), 0);\r\n            }, 0);\r\n        }, this);\r\n        this.totalDiceSuccessesDisplay = ko.computed(() => {\r\n            return this.totalDiceSuccesses() >= 0 ? \"\" + this.totalDiceSuccesses() : \"???\";\r\n        }, this);\r\n    }\r\n\r\n    public incrementDicePool(amount: number): () => void {\r\n        return () => {\r\n            this.dicePool(this.dicePool() + amount);\r\n        };\r\n    }\r\n\r\n    public rollDice(): void {\r\n        const roller = new RollState(this);\r\n        roller.beginRoll();\r\n    }\r\n}\r\n\r\nclass RollState {\r\n    private _diceObj: Dice;\r\n    private _currentRound: number;\r\n    private _currentDice: number;\r\n    private _currentRoundRolls: number;\r\n    private _currentRoundResults: Array<number>;\r\n    private _nextRoundRolls: number;\r\n    private _intervalHandle: number;\r\n\r\n    public constructor(diceObj: Dice) {\r\n        this._diceObj = diceObj;\r\n        this._currentRound = 0;\r\n        this._currentDice = 0;\r\n        this._currentRoundRolls = diceObj.dicePool();\r\n        this._currentRoundResults = [];\r\n        this._nextRoundRolls = 0;\r\n        this._intervalHandle = null;\r\n    }\r\n\r\n    public beginRoll(): void {\r\n        this._diceObj.rollingInProgress(true);\r\n        this._diceObj.rollRounds.removeAll();\r\n        for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n        this._diceObj.rollRounds.push(this._currentRoundResults);\r\n\r\n        this._intervalHandle = window.setInterval(() => {\r\n            const nextRoll = randomInteger(1, 11);\r\n            if (nextRoll === 10) {\r\n                this._nextRoundRolls++;\r\n                const diceContainer = document.getElementsByClassName(\"diceContainer\")[0];\r\n                const critMessage = document.createElement(\"div\");\r\n                critMessage.classList.add(\"crit-message\");\r\n                critMessage.innerText = \"Crit!\";\r\n                critMessage.id = \"critMessage\";\r\n                diceContainer.appendChild(critMessage);\r\n                window.setTimeout(() => diceContainer.removeChild(critMessage), 1010);\r\n            }\r\n            this._currentRoundResults[this._currentDice] = nextRoll;\r\n            this._diceObj.rollRounds.replace(this._diceObj.rollRounds()[this._currentRound], this._currentRoundResults);\r\n            this._currentDice++;\r\n\r\n            if (this._currentDice === this._currentRoundRolls) {\r\n                if (this._nextRoundRolls === 0) {\r\n                    window.clearInterval(this._intervalHandle);\r\n                    this._diceObj.rollingInProgress(false);\r\n                    const critMessage = document.getElementById(\"critMessage\");\r\n                    if (critMessage) {\r\n                        critMessage.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                else {\r\n                    this._currentRound++;\r\n                    this._currentRoundRolls = this._nextRoundRolls;\r\n                    this._nextRoundRolls = 0;\r\n                    this._currentDice = 0;\r\n                    this._currentRoundResults = [];\r\n                    for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n                    this._diceObj.rollRounds.push(this._currentRoundResults);\r\n                }\r\n            }\r\n        }, 250);\r\n    }\r\n}","import Application from \"./Application\";\r\nimport Equipment from \"./Character/Equipment\";\r\nimport InventoryItem from \"./Character/InventoryItem\";\r\nimport Merit from \"./Character/Merit\";\r\nimport Note from \"./Character/Note\";\r\nimport { applyCustomKnockoutCode } from \"./utils\";\r\n\r\napplyCustomKnockoutCode();\r\n\r\nconst constructors = {\r\n    Equipment: Equipment,\r\n    InventoryItem: InventoryItem,\r\n    Merit: Merit,\r\n    Note: Note\r\n};\r\nObject.defineProperty(window, \"constructors\", { value: constructors });\r\n\r\nconst app = new Application();\r\nko.applyBindings(app);\r\n\r\n// Exposing the view model to the global state in case manual changes need to be applied\r\nObject.defineProperty(window, \"app\", { value: app });\r\n\r\nfunction toggleTooltips(enable: boolean): void {\r\n    if (enable) $(\"[data-toggle='tooltip']\").tooltip();\r\n    else $(\"[data-toggle='tooltip']\").tooltip(\"dispose\");\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    toggleTooltips(window.outerWidth >= 992);\r\n});\r\ntoggleTooltips(window.outerWidth >= 992);","import Damage from \"./Character/Damage\";\r\n\r\nexport function randomInteger(minInclusive = 0, maxExclusive = 10): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function randomFloat(minInclusive = 0, maxExclusive = 1): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.random() * (maxExclusive - minInclusive) + minInclusive;\r\n}\r\n\r\nexport function applyCustomKnockoutCode() {\r\n    ko.bindingHandlers.dice = {\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservableArray<Array<number>>) => {\r\n            const rollRounds = valueAccessor()();\r\n            if (rollRounds.length === 0) {\r\n                element.innerHTML = \"\";\r\n                return;\r\n            }\r\n    \r\n            let divs = element.getElementsByClassName(\"dice-round\");\r\n            if (divs.length !== rollRounds.length) {\r\n                const newRound = document.createElement(\"div\");\r\n                newRound.classList.add(\"dice-round\");\r\n                const rolls = rollRounds[rollRounds.length - 1];\r\n                for (let i = 0; i < rolls.length; i++) {\r\n                    const span = document.createElement(\"span\");\r\n                    const delay = randomFloat(0, 0.5);\r\n                    span.style.animation = `rollingDice 0.5s linear -${delay}s infinite alternate`;\r\n                    span.classList.add(\"dice\");\r\n                    newRound.appendChild(span);\r\n                }\r\n                element.appendChild(newRound);\r\n                divs = element.getElementsByClassName(\"dice-round\");\r\n            }\r\n    \r\n            for (let i = 0; i < rollRounds.length; i++) {\r\n                const rolls = rollRounds[i];\r\n                const spans = divs[i].getElementsByClassName(\"dice\");\r\n                for (let j = 0; j < rolls.length; j++) {\r\n                    const roll = rolls[j];\r\n                    const span = <HTMLSpanElement>spans[j];\r\n    \r\n                    if (roll !== -1) {\r\n                        span.style.animation = null;\r\n                        span.style.backgroundImage = `url('images/dice-${roll}.png')`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.damageDisplay = {\r\n        init: (element: HTMLElement) => {\r\n            for (let i = 0; i < 15; i++) {\r\n                const span = document.createElement(\"span\");\r\n                span.classList.add(\"damage\");\r\n                span.classList.add(\"none\");\r\n                element.appendChild(span);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => Damage) => {\r\n            const damageObj = valueAccessor();\r\n            const spans = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < spans.length; i++) {\r\n                if (i < damageObj.aggravated()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.add(\"aggravated\");\r\n                }\r\n                else if (i - damageObj.aggravated() < damageObj.lethal()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"lethal\");\r\n                }\r\n                else if (i - damageObj.aggravated() - damageObj.lethal() < damageObj.bashing()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"bashing\");\r\n                }\r\n                else {\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"none\");\r\n                }\r\n    \r\n                if (i < damageObj.totalHealth()) {\r\n                    spans[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else {\r\n                    spans[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.attribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                dot.classList.add(\"pointer\");\r\n                dot.dataset.toggle = \"tooltip\";\r\n                dot.title = \"\" + (i + 1);\r\n                $(dot).tooltip();\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n    \r\n            const clearDot = document.createElement(\"div\");\r\n            clearDot.classList.add(\"clear-dot\");\r\n            clearDot.innerHTML = \"&times;\";\r\n            clearDot.dataset.toggle = \"tooltip\";\r\n            clearDot.title = \"Clear\";\r\n            clearDot.addEventListener(\"click\", () => {\r\n                valueAccessor().value(0);\r\n            });\r\n            element.appendChild(clearDot);\r\n            $(clearDot).tooltip();\r\n    \r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                element.appendChild(dot);\r\n                dot.addEventListener(\"click\", () => {\r\n                    valueAccessor().value(index + 1);\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByClassName(\"attribute-dot\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                const dot = <HTMLSpanElement>dots[i];\r\n                dot.style.backgroundColor = null;\r\n                dot.style.borderColor = null;\r\n                if (i < value) {\r\n                    dot.style.backgroundColor = \"var(--body-color)\";\r\n                    dot.style.borderColor = \"var(--body-color)\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.readOnlyAttribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, hideUnfilled?: boolean }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                dots[i].classList.remove(\"filled\");\r\n                if (i < value) {\r\n                    dots[i].classList.add(\"filled\");\r\n                    dots[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else if (valueAccessor().hideUnfilled) {\r\n                    dots[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.used = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < 12; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                dot.addEventListener(\"click\", () => {\r\n                    valueAccessor().value(index + 1);\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const used = valueAccessor().value();\r\n            const total = valueAccessor().total();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                if (i < used) dots[i].classList.add(\"filled-red\");\r\n                else dots[i].classList.remove(\"filled-red\");\r\n    \r\n                if (i < total) dots[i].classList.remove(\"HIDDEN\");\r\n                else dots[i].classList.add(\"HIDDEN\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.focusOnCreation = {\r\n        init: (element: HTMLInputElement | HTMLTextAreaElement) => {\r\n            window.setTimeout(() => {\r\n                if (element.value) return;\r\n                element.focus();\r\n            }, 1);\r\n        }\r\n    };\r\n    \r\n    (<any>ko.extenders).lockable = (target: any, locked: KnockoutObservable<boolean>) => {\r\n        const result = ko.pureComputed({\r\n            read: target,\r\n            write: (newValue: any) => {\r\n                if (locked()) {\r\n                    target.notifySubscribers(target());\r\n                }\r\n                else {\r\n                    target(newValue);\r\n                    target.notifySubscribers(newValue);\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        return result;\r\n    };\r\n    \r\n    (<any>ko.extenders).numeric = (target: any, args: { precision?: number, min?: number, max?: number }) => {\r\n        const precision = args.precision || 0;\r\n        const min = args.min || -Infinity;\r\n        const max = args.max || Infinity;\r\n    \r\n        // Create a writeable computed observable to intercept writes to our observable\r\n        const result = ko.pureComputed({\r\n            read: target, // Always return the original observable's value\r\n            write: (newValue: any) => {\r\n                const current = target();\r\n                const roundingMultiplier = Math.pow(10, precision);\r\n                const newValueAsNum = isNaN(newValue) ? 0 : +newValue;\r\n                let valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\r\n                if (valueToWrite < min) valueToWrite = min;\r\n                else if (valueToWrite > max) valueToWrite = max;\r\n    \r\n                // Only write if it changed\r\n                if (valueToWrite !== current) {\r\n                    target(valueToWrite);\r\n                }\r\n                else {\r\n                    // If the rounded value is the same, but a different value was written,\r\n                    // force a notification for the current field\r\n                    if (newValue !== current) {\r\n                        target.notifySubscribers(valueToWrite);\r\n                    }\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        // Initialize with current value to make sure it is rounded appropriately\r\n        result(target());\r\n    \r\n        // Return the new computed observable\r\n        return result;\r\n    };\r\n}"]}