{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/Application.ts","src/ts/Character/Character.ts","src/ts/Character/Damage.ts","src/ts/Character/Equipment.ts","src/ts/Character/InventoryItem.ts","src/ts/Character/Merit.ts","src/ts/Character/Note.ts","src/ts/Dice.ts","src/ts/main.ts","src/ts/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Character_1","Dice_1","Application","prototype","toggleClock","this","showClock","goBack","mode","_previousSection","window","location","hash","newCharacter","newChar","default","locked","characters","push","characterId","selectCharacter","character","indexOf","deleteCharacter","confirm","name","id","remove","saveCharacters","localStorage","setItem","JSON","stringify","realCharacters","map","toJson","alert","downloadCharacter","json","dl","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","uploadCharacter","_this","ul","type","accept","addEventListener","file","files","reader","FileReader","onload","target","result","fromJson","parse","readAsText","toggleCharacterLock","switchMode","getElementById","savedCharacters","getItem","unshift","ghost","ko","observable","observableArray","computed","filter","dice","lockButtonClass","lockButtonIcon","currentTime","Date","currentTimeDisplay","time","hours","getHours","minutes","getMinutes","seconds","getSeconds","suffix","setInterval","key","ctrlKey","preventDefault","substring","$domElement","$","scrollTop","offset","top","Damage_1","Equipment_1","InventoryItem_1","Merit_1","Note_1","utils_1","Character","firstNameLength","randomInteger","lastNameLength","firstName","lastName","newLetter","alphabet","charAt","toUpperCase","randomName","player","age","vice","virtue","origins","gender","concept","chronicle","intelligence","strength","presence","wits","dexterity","manipulation","resolve","stamina","composure","academics","robotics","crafts","investigation","medicine","occult","politics","science","athletics","brawl","drive","ranged","larceny","stealth","survival","weaponry","animalKen","empathy","expression","intimidation","persuasion","socialize","streetwise","subterfuge","merits","spells","flaws","size","armor","experience","morality","weapons","equipment","inventory","notes","onComponentClick","_","currentTarget","getElementsByTagName","focus","newItem","constructor","createLockable","removeItem","item","moveItem","direction","index","newIndex","splice","clearUsed","usedObservable","bashing","damage","lethal","aggravated","usedMagic","usedWillpower","m","value","s","w","description","quantity","extend","lockable","numeric","precision","min","max","speed","defense","Math","initiative","health","magic","subscribe","val","willpower","Damage","anyEmpty","totalHealth","addBashing","addLethal","addAggravated","clearAll","totalHealthObservable","Equipment","InventoryItem","getDisplayText","displayText","Merit","Note","Dice","incrementDicePool","amount","dicePool","rollDice","RollState","beginRoll","rollRounds","rollingInProgress","totalDiceSuccesses","reduce","total","d","totalDiceSuccessesDisplay","_diceObj","removeAll","_currentRoundRolls","_currentRoundResults","_intervalHandle","nextRoll","_nextRoundRolls","diceContainer_1","getElementsByClassName","critMessage_1","classList","add","innerText","setTimeout","_currentDice","replace","_currentRound","clearInterval","critMessage","diceObj","Application_1","applyCustomKnockoutCode","constructors","Object","defineProperty","app","toggleTooltips","enable","tooltip","applyBindings","outerWidth","randomFloat","minInclusive","maxExclusive","_a","random","floor","bindingHandlers","update","element","valueAccessor","divs","newRound","rolls","span","delay","animation","spans","j","roll","backgroundImage","innerHTML","damageDisplay","init","damageObj","attribute","dots","dot","dataset","toggle","title","forEach","clearDot","backgroundColor","borderColor","readOnlyAttribute","hideUnfilled","used","focusOnCreation","extenders","pureComputed","read","write","newValue","notifySubscribers","notify","args","Infinity","current","roundingMultiplier","pow","newValueAsNum","isNaN","valueToWrite","round"],"mappings":"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","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Character from \"./Character/Character\";\r\nimport Dice from \"./Dice\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport default class Application {\r\n    public mode: KnockoutObservable<string>;\r\n    public characterId: KnockoutObservable<number>;\r\n    public characters: KnockoutObservableArray<Character>;\r\n    public realCharacters: KnockoutComputed<Array<Character>>;\r\n    public character: KnockoutComputed<Character>;\r\n    public dice: Dice;\r\n    public lockButtonClass: KnockoutComputed<string>;\r\n    public lockButtonIcon: KnockoutComputed<string>;\r\n    private _previousSection: string;\r\n    public showClock: KnockoutObservable<boolean>;\r\n    public currentTime: KnockoutObservable<Date>;\r\n    public currentTimeDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        const savedCharacters: Array<Character> = (JSON.parse(window.localStorage.getItem(\"characters\")) || []).map(Character.fromJson);\r\n        savedCharacters.unshift(Character.newCharacter());\r\n        savedCharacters[0].ghost = true;\r\n\r\n        this.mode = ko.observable(\"list\");\r\n        this.characterId = ko.observable(0);\r\n        this.characters = ko.observableArray(savedCharacters);\r\n        this.realCharacters = ko.computed(() => this.characters().filter(c => !c.ghost), this);\r\n        this.character = ko.computed(() => this.characters()[this.characterId()], this);\r\n        this.dice = new Dice();\r\n        this.lockButtonClass = ko.computed(() => this.character().locked() ? \"btn-danger\" : \"btn-outline-success\", this);\r\n        this.lockButtonIcon = ko.computed(() => this.character().locked() ? \"fas fa-lock\" : \"fas fa-lock-open\", this);\r\n        this._previousSection = null;\r\n        this.showClock = ko.observable(false);\r\n        this.currentTime = ko.observable(new Date());\r\n\r\n        this.currentTimeDisplay = ko.computed(() => {\r\n            const time = this.currentTime();\r\n            let hours = time.getHours();\r\n            const minutes = time.getMinutes();\r\n            const seconds = time.getSeconds();\r\n            const suffix = hours < 12 ? \"AM\" : \"PM\";\r\n            const minutePrefix = minutes < 10 ? \"0\" : \"\";\r\n            const secondPrefix = seconds < 10 ? \"0\" : \"\";\r\n            if (hours > 12) hours -= 12;\r\n            return `${hours}:${minutePrefix}${minutes}:${secondPrefix}${seconds} ${suffix}`;\r\n        }, this);\r\n\r\n        window.setInterval(() => {\r\n            this.currentTime(new Date());\r\n        }, 1000);\r\n\r\n        window.addEventListener(\"keydown\", e => {\r\n            if (e.key === \"s\" && e.ctrlKey === true) {\r\n                e.preventDefault();\r\n                this.saveCharacters();\r\n            }\r\n        });\r\n\r\n        window.addEventListener(\"hashchange\", e => {\r\n            const hash = window.location.hash.substring(1);\r\n            if (!hash) return;\r\n\r\n            var offset = 80; // TODO: Don't hardcode this maybe?\r\n            var $domElement = $(`#${hash}`);\r\n            $(window).scrollTop($domElement.offset().top - offset);\r\n        });\r\n    }\r\n\r\n    public toggleClock(): void {\r\n        this.showClock(!this.showClock());\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.mode() === \"sheet\") this.mode(\"list\");\r\n        else {\r\n            this.mode(\"sheet\");\r\n\r\n            if (this._previousSection) window.location.hash = this._previousSection;\r\n        }\r\n    }\r\n\r\n    public newCharacter(): void {\r\n        const newChar = Character.newCharacter();\r\n        newChar.locked(false);\r\n        this.characters.push(newChar);\r\n        this.characterId(this.characters().length - 1);\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public selectCharacter(character: Character): void {\r\n        this.characterId(this.characters.indexOf(character));\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public deleteCharacter(character: Character): void {\r\n        // swal({\r\n        //     title: `Delete ${this.character().name()}`,\r\n        //     text: \"Are you sure? (As long as you don't save, your character won't be gone.)\",\r\n        //     icon: \"warning\",\r\n        //     buttons: [\"Cancel\", \"Delete\"],\r\n        //     dangerMode: true\r\n        // })\r\n        // .then((willDelete: boolean) => {\r\n        //     if (willDelete) {\r\n        //         const id = this.characterId();\r\n        //         this.characterId(0);\r\n        //         this.characters.remove(this.characters()[id]);\r\n        //         this.mode(\"list\");\r\n        //     }\r\n        // });\r\n        if (this.character().locked()) return;\r\n        if (confirm(`Are you sure you want to delete ${this.character().name()}? (As long as you don't save, your character won't be gone.)`)) {\r\n            const id = this.characterId();\r\n            this.characterId(0);\r\n            this.characters.remove(this.characters()[id]);\r\n            this.mode(\"list\");\r\n        }\r\n    }\r\n\r\n    public saveCharacters(): void {\r\n        window.localStorage.setItem(\"characters\", JSON.stringify(this.realCharacters().map(c => c.toJson())));\r\n        // swal(\"Characters saved successfully!\", {\r\n        //     buttons: [],\r\n        //     timer: 1000,\r\n        //     icon: \"success\"\r\n        // });\r\n        alert(\"Characters saved successfully!\");\r\n    }\r\n\r\n    public downloadCharacter(): void {\r\n        const json = JSON.stringify(this.character().toJson());\r\n\r\n        const dl = document.createElement(\"a\");\r\n        dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${encodeURIComponent(json)}`);\r\n        dl.setAttribute(\"download\", `${this.character().name()}.json`);\r\n\r\n        dl.style.display = \"none\";\r\n        document.body.appendChild(dl);\r\n\r\n        dl.click();\r\n\r\n        document.body.removeChild(dl);\r\n    }\r\n\r\n    public uploadCharacter(): void {\r\n        const ul = document.createElement(\"input\");\r\n        ul.type = \"file\";\r\n        ul.accept = \".json\";\r\n        ul.style.display = \"none\";\r\n\r\n        ul.addEventListener(\"change\", e => {\r\n            const file = ul.files[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const json = e.target.result;\r\n                this.characters.push(Character.fromJson(JSON.parse(json)));\r\n                this.characterId(this.characters().length - 1);\r\n                this.mode(\"sheet\");\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n\r\n        document.body.appendChild(ul);\r\n\r\n        ul.click();\r\n\r\n        document.body.removeChild(ul);\r\n    }\r\n\r\n    public toggleCharacterLock(): void {\r\n        const character = this.character();\r\n        character.locked(!character.locked());\r\n    }\r\n\r\n    public switchMode(mode: string): () => void {\r\n        return () => {\r\n            if (this.mode() !== \"list\" && document.getElementById(mode)) {\r\n                this._previousSection = mode;\r\n            }\r\n            else this._previousSection = null;\r\n\r\n            window.location.hash = \"\";\r\n            this.mode(mode);\r\n        }\r\n    }\r\n}","import Damage from \"./Damage\";\r\nimport Equipment from \"./Equipment\";\r\nimport InventoryItem from \"./InventoryItem\";\r\nimport Merit from \"./Merit\";\r\nimport Note from \"./Note\";\r\nimport { randomInteger } from \"../utils\";\r\n\r\nexport default class Character {\r\n    public ghost: boolean = false;\r\n    public locked: KnockoutObservable<boolean> = ko.observable(true);\r\n\r\n    public name: KnockoutObservable<string>;\r\n    public player: KnockoutObservable<string>;\r\n    public age: KnockoutObservable<number>;\r\n    public vice: KnockoutObservable<string>;\r\n    public virtue: KnockoutObservable<string>;\r\n    public origins: KnockoutObservable<string>;\r\n    public gender: KnockoutObservable<string>;\r\n    public concept: KnockoutObservable<string>;\r\n    public chronicle: KnockoutObservable<string>;\r\n\r\n    public intelligence: KnockoutObservable<number>;\r\n    public strength: KnockoutObservable<number>;\r\n    public presence: KnockoutObservable<number>;\r\n    public wits: KnockoutObservable<number>;\r\n    public dexterity: KnockoutObservable<number>;\r\n    public manipulation: KnockoutObservable<number>;\r\n    public resolve: KnockoutObservable<number>;\r\n    public stamina: KnockoutObservable<number>;\r\n    public composure: KnockoutObservable<number>;\r\n\r\n    public academics: KnockoutObservable<number>;\r\n    public robotics: KnockoutObservable<number>;\r\n    public crafts: KnockoutObservable<number>;\r\n    public investigation: KnockoutObservable<number>;\r\n    public medicine: KnockoutObservable<number>;\r\n    public occult: KnockoutObservable<number>;\r\n    public politics: KnockoutObservable<number>;\r\n    public science: KnockoutObservable<number>;\r\n    \r\n    public athletics: KnockoutObservable<number>;\r\n    public brawl: KnockoutObservable<number>;\r\n    public drive: KnockoutObservable<number>;\r\n    public ranged: KnockoutObservable<number>;\r\n    public larceny: KnockoutObservable<number>;\r\n    public stealth: KnockoutObservable<number>;\r\n    public survival: KnockoutObservable<number>;\r\n    public weaponry: KnockoutObservable<number>;\r\n\r\n    public animalKen: KnockoutObservable<number>;\r\n    public empathy: KnockoutObservable<number>;\r\n    public expression: KnockoutObservable<number>;\r\n    public intimidation: KnockoutObservable<number>;\r\n    public persuasion: KnockoutObservable<number>;\r\n    public socialize: KnockoutObservable<number>;\r\n    public streetwise: KnockoutObservable<number>;\r\n    public subterfuge: KnockoutObservable<number>;\r\n\r\n    public merits: KnockoutObservableArray<Merit>;\r\n    public spells: KnockoutObservableArray<Merit>;\r\n    public flaws: KnockoutObservableArray<Merit>;\r\n\r\n    public size: KnockoutObservable<number>;\r\n    public speed: KnockoutComputed<number>;\r\n    public defense: KnockoutComputed<number>;\r\n    public armor: KnockoutObservable<number>;\r\n    public initiative: KnockoutComputed<number>;\r\n    public experience: KnockoutObservable<number>;\r\n    public morality: KnockoutObservable<number>;\r\n\r\n    public weapons: KnockoutObservableArray<Equipment>;\r\n    public equipment: KnockoutObservableArray<Equipment>;\r\n    public inventory: KnockoutObservableArray<InventoryItem>;\r\n\r\n    public notes: KnockoutObservableArray<Note>;\r\n\r\n    public health: KnockoutComputed<number>;\r\n    public damage: Damage;\r\n\r\n    public magic: KnockoutComputed<number>;\r\n    public usedMagic: KnockoutObservable<number>;\r\n\r\n    public willpower: KnockoutComputed<number>;\r\n    public usedWillpower: KnockoutObservable<number>;\r\n\r\n    public constructor(json: CharacterJson) {\r\n        this.name = ko.observable(json.name).extend({ lockable: this.locked });\r\n        this.player = ko.observable(json.player).extend({ lockable: this.locked });\r\n        this.age = ko.observable(json.age).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.vice = ko.observable(json.vice).extend({ lockable: this.locked });\r\n        this.virtue = ko.observable(json.virtue).extend({ lockable: this.locked });\r\n        this.origins = ko.observable(json.origins).extend({ lockable: this.locked });\r\n        this.gender = ko.observable(json.gender).extend({ lockable: this.locked });\r\n        this.concept = ko.observable(json.concept).extend({ lockable: this.locked });\r\n        this.chronicle = ko.observable(json.chronicle).extend({ lockable: this.locked });\r\n\r\n        this.intelligence = ko.observable(json.intelligence).extend({ lockable: this.locked });\r\n        this.strength = ko.observable(json.strength).extend({ lockable: this.locked });\r\n        this.presence = ko.observable(json.presence).extend({ lockable: this.locked });\r\n        this.wits = ko.observable(json.wits).extend({ lockable: this.locked });\r\n        this.dexterity = ko.observable(json.dexterity).extend({ lockable: this.locked });\r\n        this.manipulation = ko.observable(json.manipulation).extend({ lockable: this.locked });\r\n        this.resolve = ko.observable(json.resolve).extend({ lockable: this.locked });\r\n        this.stamina = ko.observable(json.stamina).extend({ lockable: this.locked });\r\n        this.composure = ko.observable(json.composure).extend({ lockable: this.locked });\r\n\r\n        this.academics = ko.observable(json.academics).extend({ lockable: this.locked });\r\n        this.robotics = ko.observable(json.robotics).extend({ lockable: this.locked });\r\n        this.crafts = ko.observable(json.crafts).extend({ lockable: this.locked });\r\n        this.investigation = ko.observable(json.investigation).extend({ lockable: this.locked });\r\n        this.medicine = ko.observable(json.medicine).extend({ lockable: this.locked });\r\n        this.occult = ko.observable(json.occult).extend({ lockable: this.locked });\r\n        this.politics = ko.observable(json.politics).extend({ lockable: this.locked });\r\n        this.science = ko.observable(json.science).extend({ lockable: this.locked });\r\n\r\n        this.athletics = ko.observable(json.athletics).extend({ lockable: this.locked });\r\n        this.brawl = ko.observable(json.brawl).extend({ lockable: this.locked });\r\n        this.drive = ko.observable(json.drive).extend({ lockable: this.locked });\r\n        this.ranged = ko.observable(json.ranged).extend({ lockable: this.locked });\r\n        this.larceny = ko.observable(json.larceny).extend({ lockable: this.locked });\r\n        this.stealth = ko.observable(json.stealth).extend({ lockable: this.locked });\r\n        this.survival = ko.observable(json.survival).extend({ lockable: this.locked });\r\n        this.weaponry = ko.observable(json.weaponry).extend({ lockable: this.locked });\r\n\r\n        this.animalKen = ko.observable(json.animalKen).extend({ lockable: this.locked });\r\n        this.empathy = ko.observable(json.empathy).extend({ lockable: this.locked });\r\n        this.expression = ko.observable(json.expression).extend({ lockable: this.locked });\r\n        this.intimidation = ko.observable(json.intimidation).extend({ lockable: this.locked });\r\n        this.persuasion = ko.observable(json.persuasion).extend({ lockable: this.locked });\r\n        this.socialize = ko.observable(json.socialize).extend({ lockable: this.locked });\r\n        this.streetwise = ko.observable(json.streetwise).extend({ lockable: this.locked });\r\n        this.subterfuge = ko.observable(json.subterfuge).extend({ lockable: this.locked });\r\n\r\n        this.merits = ko.observableArray(json.merits.map(m => new Merit(m.name, m.value, this.locked)));\r\n        this.spells = ko.observableArray(json.spells.map(s => new Merit(s.name, s.value, this.locked)));\r\n        this.flaws = ko.observableArray(json.flaws.map(f => new Merit(f.name, f.value, this.locked)));\r\n\r\n        this.size = ko.observable(json.size).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n        this.speed = ko.computed(() => this.strength() + this.dexterity() + 5, this);\r\n        this.defense = ko.computed(() => Math.min(this.dexterity(), this.wits()), this);\r\n        this.armor = ko.observable(json.armor).extend({ numeric: { precision: 0 } }).extend({ lockable: this.locked });\r\n        this.initiative = ko.computed(() => this.dexterity() + this.composure(), this);\r\n        this.experience = ko.observable(json.experience).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.morality = ko.observable(json.morality).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n\r\n        this.weapons = ko.observableArray(json.weapons.map(w => new Equipment(w.name, w.description, this.locked)));\r\n        this.equipment = ko.observableArray(json.equipment.map(e => new Equipment(e.name, e.description, this.locked)));\r\n        this.inventory = ko.observableArray(json.inventory.map(i => new InventoryItem(i.name, i.description, i.quantity, this.locked)));\r\n\r\n        this.notes = ko.observableArray(json.notes.map(n => new Note(n, this.locked)));\r\n\r\n        this.health = ko.computed(() => this.stamina() + this.size(), this);\r\n        this.damage = new Damage(this.health, json.bashing, json.lethal, json.aggravated, this.locked);\r\n\r\n        this.magic = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedMagic = ko.observable(json.usedMagic || 0).extend({ lockable: this.locked });\r\n        this.magic.subscribe(val => {\r\n            if (this.usedMagic() > val) this.usedMagic(val);\r\n        }, this);\r\n\r\n        this.willpower = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedWillpower = ko.observable(json.usedWillpower || 0).extend({ lockable: this.locked });\r\n        this.willpower.subscribe(val => {\r\n            if (this.usedWillpower() > val) this.usedWillpower(val);\r\n        }, this);\r\n    }\r\n\r\n    public static newCharacter(): Character {\r\n        return new Character({\r\n            name: randomName(),\r\n            player: \"\",\r\n            age: 0,\r\n            vice: \"\",\r\n            virtue: \"\",\r\n            origins: \"\",\r\n            gender: \"\",\r\n            concept: \"\",\r\n            chronicle: \"\",\r\n\r\n            intelligence: 1,\r\n            strength: 1,\r\n            presence: 1,\r\n            wits: 1,\r\n            dexterity: 1,\r\n            manipulation: 1,\r\n            resolve: 1,\r\n            stamina: 1,\r\n            composure: 1,\r\n\r\n            academics: 0,\r\n            robotics: 0,\r\n            crafts: 0,\r\n            investigation: 0,\r\n            medicine: 0,\r\n            occult: 0,\r\n            politics: 0,\r\n            science: 0,\r\n\r\n            athletics: 0,\r\n            brawl: 0,\r\n            drive: 0,\r\n            ranged: 0,\r\n            larceny: 0,\r\n            stealth: 0,\r\n            survival: 0,\r\n            weaponry: 0,\r\n\r\n            animalKen: 0,\r\n            empathy: 0,\r\n            expression: 0,\r\n            intimidation: 0,\r\n            persuasion: 0,\r\n            socialize: 0,\r\n            streetwise: 0,\r\n            subterfuge: 0,\r\n\r\n            merits: [],\r\n            spells: [],\r\n            flaws: [],\r\n\r\n            size: 5,\r\n            armor: 0,\r\n            experience: 0,\r\n            morality: 7,\r\n\r\n            weapons: [],\r\n            equipment: [],\r\n            inventory: [],\r\n\r\n            notes: []\r\n        });\r\n    }\r\n\r\n    public static fromJson(json: CharacterJson): Character {\r\n        return new Character(json);\r\n    }\r\n\r\n    public onComponentClick(_: any, e: Event): void {\r\n        const element = <HTMLElement>e.currentTarget;\r\n        element.getElementsByTagName(\"input\")[0].focus();\r\n    }\r\n\r\n    public newItem<T>(observableArray: KnockoutObservableArray<T>, constructor: { createLockable(locked: KnockoutObservable<boolean>): T}): () => void {\r\n        return () => {\r\n            if (this.locked()) return;\r\n            observableArray.push(constructor.createLockable(this.locked));\r\n        };\r\n    }\r\n\r\n    public removeItem<T>(observableArray: KnockoutObservableArray<T>): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            observableArray.remove(item);\r\n        };\r\n    }\r\n\r\n    public moveItem<T>(observableArray: KnockoutObservableArray<T>, direction: number): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            const index = observableArray.indexOf(item);\r\n            const newIndex = index + direction;\r\n\r\n            if (newIndex < 0 || newIndex >= observableArray().length) return;\r\n\r\n            observableArray.splice(index, 1);\r\n            observableArray.splice(newIndex, 0, item);\r\n        };\r\n    }\r\n\r\n    public clearUsed(usedObservable: KnockoutObservable<number>): () => void {\r\n        return () => {\r\n            usedObservable(0);\r\n        };\r\n    }\r\n\r\n    public toJson(): CharacterJson {\r\n        return {\r\n            name: this.name(),\r\n            player: this.player(),\r\n            age: this.age(),\r\n            vice: this.vice(),\r\n            virtue: this.virtue(),\r\n            origins: this.origins(),\r\n            gender: this.gender(),\r\n            concept: this.concept(),\r\n            chronicle: this.chronicle(),\r\n\r\n            intelligence: this.intelligence(),\r\n            wits: this.wits(),\r\n            resolve: this.resolve(),\r\n            strength: this.strength(),\r\n            dexterity: this.dexterity(),\r\n            stamina: this.stamina(),\r\n            presence: this.presence(),\r\n            manipulation: this.manipulation(),\r\n            composure: this.composure(),\r\n\r\n            bashing: this.damage.bashing(),\r\n            lethal: this.damage.lethal(),\r\n            aggravated: this.damage.aggravated(),\r\n            usedMagic: this.usedMagic(),\r\n            usedWillpower: this.usedWillpower(),\r\n\r\n            academics: this.academics(),\r\n            robotics: this.robotics(),\r\n            crafts: this.crafts(),\r\n            investigation: this.investigation(),\r\n            medicine: this.medicine(),\r\n            occult: this.occult(),\r\n            politics: this.politics(),\r\n            science: this.science(),\r\n\r\n            athletics: this.athletics(),\r\n            brawl: this.brawl(),\r\n            drive: this.drive(),\r\n            ranged: this.ranged(),\r\n            larceny: this.larceny(),\r\n            stealth: this.stealth(),\r\n            survival: this.survival(),\r\n            weaponry: this.weaponry(),\r\n\r\n            animalKen: this.animalKen(),\r\n            empathy: this.empathy(),\r\n            expression: this.expression(),\r\n            intimidation: this.intimidation(),\r\n            persuasion: this.persuasion(),\r\n            socialize: this.socialize(),\r\n            streetwise: this.streetwise(),\r\n            subterfuge: this.subterfuge(),\r\n\r\n            merits: this.merits().map(m => { return { name: m.name(), value: m.value() }; }),\r\n            spells: this.spells().map(s => { return { name: s.name(), value: s.value() }; }),\r\n            flaws: this.flaws().map(f => { return { name: f.name(), value: f.value() }; }),\r\n\r\n            size: this.size(),\r\n            armor: this.armor(),\r\n            experience: this.experience(),\r\n            morality: this.morality(),\r\n\r\n            weapons: this.weapons().map(w => { return { name: w.name(), description: w.description() }; }),\r\n            equipment: this.equipment().map(e => { return { name: e.name(), description: e.description() }; }),\r\n            inventory: this.inventory().map(i => { return { name: i.name(), description: i.description(), quantity: i.quantity() }; }),\r\n\r\n            notes: this.notes().map(n => n.value())\r\n        };\r\n    }\r\n}\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\nfunction randomName() {\r\n    const firstNameLength = randomInteger(5, 12);\r\n    const lastNameLength = randomInteger(5, 12);\r\n    let firstName = \"\";\r\n    let lastName = \"\";\r\n\r\n    for (let i = 0; i < firstNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        firstName += newLetter;\r\n    }\r\n\r\n    for (let i = 0; i < lastNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        lastName += newLetter;\r\n    }\r\n\r\n    return `${firstName} ${lastName}`;\r\n}\r\n\r\ntype CharacterJson = {\r\n    name: string,\r\n    player: string,\r\n    age: number,\r\n    vice: string,\r\n    virtue: string,\r\n    origins: string,\r\n    gender: string,\r\n    concept: string,\r\n    chronicle: string,\r\n\r\n    intelligence: number,\r\n    strength: number,\r\n    presence: number,\r\n    wits: number,\r\n    dexterity: number,\r\n    manipulation: number,\r\n    resolve: number,\r\n    stamina: number,\r\n    composure: number,\r\n\r\n    academics: number,\r\n    robotics: number,\r\n    crafts: number,\r\n    investigation: number,\r\n    medicine: number,\r\n    occult: number,\r\n    politics: number,\r\n    science: number,\r\n\r\n    athletics: number,\r\n    brawl: number,\r\n    drive: number,\r\n    ranged: number,\r\n    larceny: number,\r\n    stealth: number,\r\n    survival: number,\r\n    weaponry: number,\r\n\r\n    animalKen: number,\r\n    empathy: number,\r\n    expression: number,\r\n    intimidation: number,\r\n    persuasion: number,\r\n    socialize: number,\r\n    streetwise: number,\r\n    subterfuge: number,\r\n\r\n    merits: Array<{ name: string, value: number }>,\r\n    spells: Array<{ name: string, value: number }>,\r\n    flaws: Array<{ name: string, value: number }>,\r\n\r\n    size: number,\r\n    armor: number,\r\n    experience: number,\r\n    morality: number,\r\n\r\n    weapons: Array<{ name: string, description: string }>,\r\n    equipment: Array<{ name: string, description: string }>,\r\n    inventory: Array<{ name: string, description: string, quantity: number }>,\r\n\r\n    notes: Array<string>,\r\n\r\n    bashing?: number,\r\n    lethal?: number,\r\n    aggravated?: number,\r\n\r\n    usedMagic?: number,\r\n    usedWillpower?: number\r\n};","export default class Damage {\r\n    public totalHealth: KnockoutComputed<number>;\r\n    public bashing: KnockoutObservable<number>;\r\n    public lethal: KnockoutObservable<number>;\r\n    public aggravated: KnockoutObservable<number>;\r\n\r\n    public constructor(totalHealthObservable: KnockoutComputed<number>, bashing?: number, lethal?: number, aggravated?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.totalHealth = totalHealthObservable;\r\n        this.bashing = ko.observable(bashing || 0);\r\n        this.lethal = ko.observable(lethal || 0);\r\n        this.aggravated = ko.observable(aggravated || 0);\r\n\r\n        if (locked) {\r\n            this.bashing = this.bashing.extend({ lockable: locked });\r\n            this.lethal = this.lethal.extend({ lockable: locked });\r\n            this.aggravated = this.aggravated.extend({ lockable: locked });\r\n        }\r\n\r\n        totalHealthObservable.subscribe(val => {\r\n            while (this.bashing() + this.lethal() + this.aggravated() > val) {\r\n                if (this.bashing() > 0) {\r\n                    this.bashing(this.bashing() - 1);\r\n                }\r\n                else if (this.lethal() > 0) {\r\n                    this.lethal(this.lethal() - 1);\r\n                }\r\n                else {\r\n                    this.aggravated(this.aggravated() - 1);\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    public anyEmpty(): boolean {\r\n        return this.bashing() + this.lethal() + this.aggravated() < this.totalHealth();\r\n    }\r\n\r\n    public addBashing(): void {\r\n        if (this.anyEmpty()) {\r\n            this.bashing(this.bashing() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addLethal(): void {\r\n        if (this.anyEmpty()) {\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addAggravated(): void {\r\n        if (this.anyEmpty()) {\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public clearAll(): void {\r\n        this.bashing(0);\r\n        this.lethal(0);\r\n        this.aggravated(0);\r\n    }\r\n}","export default class Equipment {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n\r\n    public constructor(name?: string, description?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Equipment(null, null, locked);\r\n    }\r\n}","export default class InventoryItem {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n    public quantity: KnockoutObservable<number>;\r\n    public displayText: KnockoutComputed<string>;\r\n\r\n    public constructor(name?: string, description?: string, quantity?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n        this.quantity = ko.observable(quantity || 1);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n            this.quantity = this.quantity.extend({ lockable: locked });\r\n        }\r\n\r\n        this.displayText = ko.computed(this.getDisplayText, this);\r\n    }\r\n\r\n    public getDisplayText() : string {\r\n        return `${this.quantity()} ${this.name()}`;\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new InventoryItem(null, null, null, locked);\r\n    }\r\n}","export default class Merit {\r\n    public name: KnockoutObservable<string>;\r\n    public value: KnockoutObservable<number>;\r\n\r\n    public constructor(name?: string, value?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.value = ko.observable(value || 0);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Merit(null, null, locked);\r\n    }\r\n}","export default class Note {\r\n    public value: KnockoutObservable<string>;\r\n\r\n    public constructor(value?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.value = ko.observable(value || \"\");\r\n\r\n        if (locked) {\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Note(null, locked);\r\n    }\r\n}","import { randomFloat, randomInteger } from \"./utils\";\r\n\r\nexport default class Dice {\r\n    public dicePool: KnockoutObservable<number>;\r\n    public rollRounds: KnockoutObservableArray<Array<number>>;\r\n    public rollingInProgress: KnockoutObservable<boolean>;\r\n    public totalDiceSuccesses: KnockoutComputed<number>;\r\n    public totalDiceSuccessesDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        this.dicePool = ko.observable(1);\r\n        this.rollRounds = ko.observableArray([]);\r\n        this.rollingInProgress = ko.observable(false);\r\n        this.totalDiceSuccesses = ko.computed(() => {\r\n            if (this.rollingInProgress() || this.rollRounds().length === 0) return -1;\r\n\r\n            return this.rollRounds().reduce((total: number, r: Array<number>) => {\r\n                return total + r.reduce((total: number, d: number) => total + (d > 7 ? 1 : 0), 0);\r\n            }, 0);\r\n        }, this);\r\n        this.totalDiceSuccessesDisplay = ko.computed(() => {\r\n            return this.totalDiceSuccesses() >= 0 ? \"\" + this.totalDiceSuccesses() : \"???\";\r\n        }, this);\r\n    }\r\n\r\n    public incrementDicePool(amount: number): () => void {\r\n        return () => {\r\n            this.dicePool(this.dicePool() + amount);\r\n        };\r\n    }\r\n\r\n    public rollDice(): void {\r\n        const roller = new RollState(this);\r\n        roller.beginRoll();\r\n    }\r\n}\r\n\r\nclass RollState {\r\n    private _diceObj: Dice;\r\n    private _currentRound: number;\r\n    private _currentDice: number;\r\n    private _currentRoundRolls: number;\r\n    private _currentRoundResults: Array<number>;\r\n    private _nextRoundRolls: number;\r\n    private _intervalHandle: number;\r\n\r\n    public constructor(diceObj: Dice) {\r\n        this._diceObj = diceObj;\r\n        this._currentRound = 0;\r\n        this._currentDice = 0;\r\n        this._currentRoundRolls = diceObj.dicePool();\r\n        this._currentRoundResults = [];\r\n        this._nextRoundRolls = 0;\r\n        this._intervalHandle = null;\r\n    }\r\n\r\n    public beginRoll(): void {\r\n        this._diceObj.rollingInProgress(true);\r\n        this._diceObj.rollRounds.removeAll();\r\n        for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n        this._diceObj.rollRounds.push(this._currentRoundResults);\r\n\r\n        this._intervalHandle = window.setInterval(() => {\r\n            const nextRoll = randomInteger(1, 11);\r\n            if (nextRoll === 10) {\r\n                this._nextRoundRolls++;\r\n                const diceContainer = document.getElementsByClassName(\"diceContainer\")[0];\r\n                const critMessage = document.createElement(\"div\");\r\n                critMessage.classList.add(\"crit-message\");\r\n                critMessage.innerText = \"Crit!\";\r\n                critMessage.id = \"critMessage\";\r\n                diceContainer.appendChild(critMessage);\r\n                window.setTimeout(() => diceContainer.removeChild(critMessage), 1010);\r\n            }\r\n            this._currentRoundResults[this._currentDice] = nextRoll;\r\n            this._diceObj.rollRounds.replace(this._diceObj.rollRounds()[this._currentRound], this._currentRoundResults);\r\n            this._currentDice++;\r\n\r\n            if (this._currentDice === this._currentRoundRolls) {\r\n                if (this._nextRoundRolls === 0) {\r\n                    window.clearInterval(this._intervalHandle);\r\n                    this._diceObj.rollingInProgress(false);\r\n                    const critMessage = document.getElementById(\"critMessage\");\r\n                    if (critMessage) {\r\n                        critMessage.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                else {\r\n                    this._currentRound++;\r\n                    this._currentRoundRolls = this._nextRoundRolls;\r\n                    this._nextRoundRolls = 0;\r\n                    this._currentDice = 0;\r\n                    this._currentRoundResults = [];\r\n                    for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n                    this._diceObj.rollRounds.push(this._currentRoundResults);\r\n                }\r\n            }\r\n        }, 250);\r\n    }\r\n}","import Application from \"./Application\";\r\nimport Equipment from \"./Character/Equipment\";\r\nimport InventoryItem from \"./Character/InventoryItem\";\r\nimport Merit from \"./Character/Merit\";\r\nimport Note from \"./Character/Note\";\r\nimport { applyCustomKnockoutCode } from \"./utils\";\r\n\r\napplyCustomKnockoutCode();\r\n\r\nconst constructors = {\r\n    Equipment: Equipment,\r\n    InventoryItem: InventoryItem,\r\n    Merit: Merit,\r\n    Note: Note\r\n};\r\nObject.defineProperty(window, \"constructors\", { value: constructors });\r\n\r\nconst app = new Application();\r\nko.applyBindings(app);\r\n\r\n// Exposing the view model to the global state in case manual changes need to be applied\r\nObject.defineProperty(window, \"app\", { value: app });\r\n\r\nfunction toggleTooltips(enable: boolean): void {\r\n    if (enable) $(\"[data-toggle='tooltip']\").tooltip();\r\n    else $(\"[data-toggle='tooltip']\").tooltip(\"dispose\");\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    toggleTooltips(window.outerWidth >= 992);\r\n});\r\ntoggleTooltips(window.outerWidth >= 992);","import Damage from \"./Character/Damage\";\r\n\r\nexport function randomInteger(minInclusive = 0, maxExclusive = 10): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function randomFloat(minInclusive = 0, maxExclusive = 1): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.random() * (maxExclusive - minInclusive) + minInclusive;\r\n}\r\n\r\nexport function applyCustomKnockoutCode() {\r\n    ko.bindingHandlers.dice = {\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservableArray<Array<number>>) => {\r\n            const rollRounds = valueAccessor()();\r\n            if (rollRounds.length === 0) {\r\n                element.innerHTML = \"\";\r\n                return;\r\n            }\r\n    \r\n            let divs = element.getElementsByClassName(\"dice-round\");\r\n            if (divs.length !== rollRounds.length) {\r\n                const newRound = document.createElement(\"div\");\r\n                newRound.classList.add(\"dice-round\");\r\n                const rolls = rollRounds[rollRounds.length - 1];\r\n                for (let i = 0; i < rolls.length; i++) {\r\n                    const span = document.createElement(\"span\");\r\n                    const delay = randomFloat(0, 0.5);\r\n                    span.style.animation = `rollingDice 0.5s linear -${delay}s infinite alternate`;\r\n                    span.classList.add(\"dice\");\r\n                    newRound.appendChild(span);\r\n                }\r\n                element.appendChild(newRound);\r\n                divs = element.getElementsByClassName(\"dice-round\");\r\n            }\r\n    \r\n            for (let i = 0; i < rollRounds.length; i++) {\r\n                const rolls = rollRounds[i];\r\n                const spans = divs[i].getElementsByClassName(\"dice\");\r\n                for (let j = 0; j < rolls.length; j++) {\r\n                    const roll = rolls[j];\r\n                    const span = <HTMLSpanElement>spans[j];\r\n    \r\n                    if (roll !== -1) {\r\n                        span.style.animation = null;\r\n                        span.style.backgroundImage = `url('images/dice-${roll}.png')`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.damageDisplay = {\r\n        init: (element: HTMLElement) => {\r\n            for (let i = 0; i < 15; i++) {\r\n                const span = document.createElement(\"span\");\r\n                span.classList.add(\"damage\");\r\n                span.classList.add(\"none\");\r\n                element.appendChild(span);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => Damage) => {\r\n            const damageObj = valueAccessor();\r\n            const spans = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < spans.length; i++) {\r\n                if (i < damageObj.aggravated()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.add(\"aggravated\");\r\n                }\r\n                else if (i - damageObj.aggravated() < damageObj.lethal()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"lethal\");\r\n                }\r\n                else if (i - damageObj.aggravated() - damageObj.lethal() < damageObj.bashing()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"bashing\");\r\n                }\r\n                else {\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"none\");\r\n                }\r\n    \r\n                if (i < damageObj.totalHealth()) {\r\n                    spans[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else {\r\n                    spans[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.attribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                dot.classList.add(\"pointer\");\r\n                dot.dataset.toggle = \"tooltip\";\r\n                dot.title = \"\" + (i + 1);\r\n                $(dot).tooltip();\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n    \r\n            const clearDot = document.createElement(\"div\");\r\n            clearDot.classList.add(\"clear-dot\");\r\n            clearDot.innerHTML = \"&times;\";\r\n            clearDot.dataset.toggle = \"tooltip\";\r\n            clearDot.title = \"Clear\";\r\n            clearDot.addEventListener(\"click\", () => {\r\n                valueAccessor().value(0);\r\n            });\r\n            element.appendChild(clearDot);\r\n            $(clearDot).tooltip();\r\n    \r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                element.appendChild(dot);\r\n                dot.addEventListener(\"click\", () => {\r\n                    valueAccessor().value(index + 1);\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByClassName(\"attribute-dot\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                const dot = <HTMLSpanElement>dots[i];\r\n                dot.style.backgroundColor = null;\r\n                dot.style.borderColor = null;\r\n                if (i < value) {\r\n                    dot.style.backgroundColor = \"var(--body-color)\";\r\n                    dot.style.borderColor = \"var(--body-color)\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.readOnlyAttribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, hideUnfilled?: boolean }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                dots[i].classList.remove(\"filled\");\r\n                if (i < value) {\r\n                    dots[i].classList.add(\"filled\");\r\n                    dots[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else if (valueAccessor().hideUnfilled) {\r\n                    dots[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.used = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < 12; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                dot.addEventListener(\"click\", () => {\r\n                    valueAccessor().value(index + 1);\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const used = valueAccessor().value();\r\n            const total = valueAccessor().total();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                if (i < used) dots[i].classList.add(\"filled-red\");\r\n                else dots[i].classList.remove(\"filled-red\");\r\n    \r\n                if (i < total) dots[i].classList.remove(\"HIDDEN\");\r\n                else dots[i].classList.add(\"HIDDEN\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.focusOnCreation = {\r\n        init: (element: HTMLInputElement | HTMLTextAreaElement) => {\r\n            window.setTimeout(() => {\r\n                if (element.value) return;\r\n                element.focus();\r\n            }, 1);\r\n        }\r\n    };\r\n    \r\n    (<any>ko.extenders).lockable = (target: any, locked: KnockoutObservable<boolean>) => {\r\n        const result = ko.pureComputed({\r\n            read: target,\r\n            write: (newValue: any) => {\r\n                if (locked()) {\r\n                    target.notifySubscribers(target());\r\n                }\r\n                else {\r\n                    target(newValue);\r\n                    target.notifySubscribers(newValue);\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        return result;\r\n    };\r\n    \r\n    (<any>ko.extenders).numeric = (target: any, args: { precision?: number, min?: number, max?: number }) => {\r\n        const precision = args.precision || 0;\r\n        const min = args.min || -Infinity;\r\n        const max = args.max || Infinity;\r\n    \r\n        // Create a writeable computed observable to intercept writes to our observable\r\n        const result = ko.pureComputed({\r\n            read: target, // Always return the original observable's value\r\n            write: (newValue: any) => {\r\n                const current = target();\r\n                const roundingMultiplier = Math.pow(10, precision);\r\n                const newValueAsNum = isNaN(newValue) ? 0 : +newValue;\r\n                let valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\r\n                if (valueToWrite < min) valueToWrite = min;\r\n                else if (valueToWrite > max) valueToWrite = max;\r\n    \r\n                // Only write if it changed\r\n                if (valueToWrite !== current) {\r\n                    target(valueToWrite);\r\n                }\r\n                else {\r\n                    // If the rounded value is the same, but a different value was written,\r\n                    // force a notification for the current field\r\n                    if (newValue !== current) {\r\n                        target.notifySubscribers(valueToWrite);\r\n                    }\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        // Initialize with current value to make sure it is rounded appropriately\r\n        result(target());\r\n    \r\n        // Return the new computed observable\r\n        return result;\r\n    };\r\n}"]}