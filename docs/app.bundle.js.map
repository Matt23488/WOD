{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/Application.ts","src/ts/Character/Character.ts","src/ts/Character/Damage.ts","src/ts/Character/Equipment.ts","src/ts/Character/InventoryItem.ts","src/ts/Character/Merit.ts","src/ts/Character/Note.ts","src/ts/Character/Repository/ICharacterRepository.ts","src/ts/Character/Repository/LocalStorageCharacterRepository.ts","src/ts/Command/AttributeCommand.ts","src/ts/Command/BatchCommand.ts","src/ts/Command/ClearUsedCommand.ts","src/ts/Command/CollectionAddCommand.ts","src/ts/Command/CollectionMoveCommand.ts","src/ts/Command/CollectionRemoveCommand.ts","src/ts/Command/CommandStack.ts","src/ts/Command/TextInputCommand.ts","src/ts/Dice.ts","src/ts/main.ts","src/ts/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Character_1","Dice_1","CommandStack_1","ICharacterRepository_1","Application","prototype","toggleClock","this","showClock","goBack","mode","_previousSection","window","location","hash","newCharacter","newChar","default","locked","characters","push","selectCharacter","character","charIndex","indexOf","characterId","instance","reset","deleteCharacter","_this","swal","title","name","text","icon","buttons","dangerMode","then","willDelete","id","remove","saveCharacters","_characterRepo","realCharacters","timer","downloadCharacter","json","JSON","stringify","toJson","dl","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","uploadCharacter","ul","type","accept","addEventListener","file","files","reader","FileReader","onload","target","result","fromJson","parse","readAsText","toggleCharacterLock","switchMode","getElementById","undo","canUndo","redo","canRedo","registerKeyboardCommand","key","callback","_keyboardCommands","set","enableKeyboardCommands","ctrlKey","_b","__values","entries","_c","next","done","_d","__read","value","preventDefault","getCharacterRepository","savedCharacters","loadCharacters","unshift","ghost","ko","observable","observableArray","computed","filter","dice","lockButtonClass","lockButtonIcon","currentTime","Date","currentTimeDisplay","time","hours","getHours","minutes","getMinutes","seconds","getSeconds","suffix","setInterval","Map","log","substring","$domElement","$","scrollTop","offset","top","Damage_1","Equipment_1","InventoryItem_1","Merit_1","Note_1","utils_1","CollectionAddCommand_1","CollectionRemoveCommand_1","CollectionMoveCommand_1","ClearUsedCommand_1","AttributeCommand_1","Character","firstNameLength","randomInteger","lastNameLength","firstName","lastName","newLetter","alphabet","charAt","toUpperCase","randomName","player","age","vice","virtue","origins","gender","concept","chronicle","intelligence","strength","presence","wits","dexterity","manipulation","resolve","stamina","composure","academics","robotics","crafts","investigation","medicine","occult","politics","science","athletics","brawl","drive","ranged","larceny","stealth","survival","weaponry","animalKen","empathy","expression","intimidation","persuasion","socialize","streetwise","subterfuge","merits","spells","flaws","size","armor","experience","morality","weapons","equipment","inventory","notes","onComponentClick","_","currentTarget","getElementsByTagName","focus","newItem","constructor","execute","createLockable","removeItem","item","moveItem","direction","index","newIndex","clearUsed","usedObservable","bashing","damage","lethal","aggravated","usedMagic","usedWillpower","map","m","s","w","description","quantity","extend","lockable","named","numeric","precision","min","max","speed","defense","Math","initiative","health","magic","subscribe","val","executeWithPrevious","willpower","BatchCommand_1","Damage","anyEmpty","totalHealth","addBashing","alert","addLethal","addAggravated","clearAll","totalHealthObservable","Equipment","InventoryItem","getDisplayText","displayText","Merit","Note","LocalStorageCharacterRepository_1","args","_i","arguments","LocalStorageCharacterRepository","localStorage","getItem","setItem","AttributeCommand","getType","toString","_observable","getName","_oldValue","_newValue","doesNothing","newValue","oldValue","BatchCommand","Object","defineProperty","_commands","getCommand","every","command","commands","ClearUsedCommand","CollectionAddCommand","_newItem","CollectionMoveCommand","splice","_oldIndex","_newIndex","_item","oldIndex","CollectionRemoveCommand","_itemIndex","CommandStack","_instance","_undoStack","_redoStack","getPreviousCommand","drillIntoBatch","previousCommand","undoLength","commandCount","removeAll","_currentlyExecuting","setTimeout","pop","console","redoLength","TextInputCommand","Dice","incrementDicePool","amount","newAmount","dicePool","rollDice","RollState","beginRoll","rollRounds","rollingInProgress","totalDiceSuccesses","reduce","total","d","totalDiceSuccessesDisplay","_diceObj","_currentRoundRolls","_currentRoundResults","_intervalHandle","nextRoll","_nextRoundRolls","diceContainer_1","getElementsByClassName","critMessage_1","classList","add","innerText","_currentDice","replace","_currentRound","clearInterval","critMessage","diceObj","Application_1","applyCustomKnockoutCode","constructors","app","toggleTooltips","enable","tooltip","applyBindings","outerWidth","TextInputCommand_1","randomFloat","minInclusive","maxExclusive","_a","random","floor","_observableNameMap","bindingHandlers","update","element","valueAccessor","divs","newRound","rolls","span","delay","animation","spans","j","roll","backgroundImage","innerHTML","damageDisplay","init","damageObj","attribute","dots","dot","dataset","toggle","forEach","canClear","clearDot","backgroundColor","borderColor","readOnlyAttribute","hideUnfilled","used","focusOnCreation","contextMenu","undoableTextInput","inputElement","extenders","pureComputed","read","write","notifySubscribers","notify","Infinity","current","roundingMultiplier","pow","newValueAsNum","isNaN","valueToWrite","round","subscribable","fn","get"],"mappings":"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","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Character from \"./Character/Character\";\r\nimport Dice from \"./Dice\";\r\n// import swal from \"sweetalert\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\nimport ICharacterRepository, { getCharacterRepository } from \"./Character/Repository/ICharacterRepository\";\r\n\r\nexport default class Application {\r\n    private _characterRepo: ICharacterRepository;\r\n    public mode: KnockoutObservable<string>;\r\n    public characterId: KnockoutObservable<number>;\r\n    public characters: KnockoutObservableArray<Character>;\r\n    public realCharacters: KnockoutComputed<Array<Character>>;\r\n    public character: KnockoutComputed<Character>;\r\n    public dice: Dice;\r\n    public lockButtonClass: KnockoutComputed<string>;\r\n    public lockButtonIcon: KnockoutComputed<string>;\r\n    private _previousSection: string;\r\n    public showClock: KnockoutObservable<boolean>;\r\n    public currentTime: KnockoutObservable<Date>;\r\n    public currentTimeDisplay: KnockoutComputed<string>;\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n    private _keyboardCommands: Map<string, () => void>;\r\n\r\n    public constructor() {\r\n        this._characterRepo = getCharacterRepository(\"LocalStorage\");\r\n\r\n        const savedCharacters = this._characterRepo.loadCharacters();\r\n        savedCharacters.unshift(Character.newCharacter());\r\n        savedCharacters[0].ghost = true;\r\n\r\n        this.mode = ko.observable(\"list\");\r\n        this.characterId = ko.observable(0);\r\n        this.characters = ko.observableArray(savedCharacters);\r\n        this.realCharacters = ko.computed(() => this.characters().filter(c => !c.ghost), this);\r\n        this.character = ko.computed(() => this.characters()[this.characterId()], this);\r\n        this.dice = new Dice();\r\n        this.lockButtonClass = ko.computed(() => this.character().locked() ? \"btn-danger\" : \"btn-outline-success\", this);\r\n        this.lockButtonIcon = ko.computed(() => this.character().locked() ? \"fas fa-lock\" : \"fas fa-lock-open\", this);\r\n        this._previousSection = null;\r\n        this.showClock = ko.observable(false);\r\n        this.currentTime = ko.observable(new Date());\r\n\r\n        this.currentTimeDisplay = ko.computed(() => {\r\n            const time = this.currentTime();\r\n            let hours = time.getHours();\r\n            const minutes = time.getMinutes();\r\n            const seconds = time.getSeconds();\r\n            const suffix = hours < 12 ? \"AM\" : \"PM\";\r\n            const minutePrefix = minutes < 10 ? \"0\" : \"\";\r\n            const secondPrefix = seconds < 10 ? \"0\" : \"\";\r\n            if (hours > 12) hours -= 12;\r\n            else if (hours === 0) hours = 12;\r\n            return `${hours}:${minutePrefix}${minutes}:${secondPrefix}${seconds} ${suffix}`;\r\n        }, this);\r\n\r\n        this.canUndo = ko.computed(() => CommandStack.instance.canUndo() && !this.character().locked(), this);\r\n        this.canRedo = ko.computed(() => CommandStack.instance.canRedo() && !this.character().locked(), this);\r\n\r\n        window.setInterval(() => {\r\n            this.currentTime(new Date());\r\n        }, 1000);\r\n\r\n        this._keyboardCommands = new Map<string, () => void>();\r\n        this.registerKeyboardCommand(\"s\", () => this.saveCharacters());\r\n        this.registerKeyboardCommand(\"z\", () => { \r\n            if (this.mode() === \"list\") return;\r\n            this.undo();\r\n        });\r\n        this.registerKeyboardCommand(\"Z\", () => {\r\n            if (this.mode() === \"list\") return;\r\n            this.redo();\r\n        });\r\n        this.registerKeyboardCommand(\"l\", () => {\r\n            if (this.mode() === \"list\") return;\r\n            this.toggleCharacterLock();\r\n        });\r\n        this.registerKeyboardCommand(\"o\", () => this.toggleClock());\r\n        this.registerKeyboardCommand(\"q\", () => CommandStack.instance.log());\r\n        this.enableKeyboardCommands();\r\n\r\n        window.addEventListener(\"hashchange\", e => {\r\n            const hash = window.location.hash.substring(1);\r\n            if (!hash) return;\r\n\r\n            var offset = 80; // TODO: Don't hardcode this maybe?\r\n            var $domElement = $(`#${hash}`);\r\n            $(window).scrollTop($domElement.offset().top - offset);\r\n        });\r\n    }\r\n\r\n    public toggleClock(): void {\r\n        this.showClock(!this.showClock());\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.mode() === \"sheet\") this.mode(\"list\");\r\n        else {\r\n            this.mode(\"sheet\");\r\n\r\n            if (this._previousSection) window.location.hash = this._previousSection;\r\n        }\r\n    }\r\n\r\n    public newCharacter(): void {\r\n        const newChar = Character.newCharacter();\r\n        newChar.locked(false);\r\n        this.characters.push(newChar);\r\n        this.selectCharacter(newChar);\r\n    }\r\n\r\n    public selectCharacter(character: Character): void {\r\n        const charIndex = this.characters.indexOf(character);\r\n        if (this.characterId() !== charIndex) {\r\n            this.characterId(charIndex);\r\n            CommandStack.instance.reset();\r\n        }\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public deleteCharacter(character: Character): void {\r\n        if (this.character().locked()) return;\r\n        swal({\r\n            title: `Delete ${this.character().name()}`,\r\n            text: \"Are you sure? (As long as you don't save, your character won't be gone.)\",\r\n            icon: \"warning\",\r\n            buttons: [\"Cancel\", \"Delete\"],\r\n            dangerMode: true\r\n        })\r\n        .then((willDelete: boolean) => {\r\n            if (willDelete) {\r\n                const id = this.characterId();\r\n                this.characterId(0);\r\n                this.characters.remove(this.characters()[id]);\r\n                this.mode(\"list\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public saveCharacters(): void {\r\n        this._characterRepo.saveCharacters(this.realCharacters());\r\n        swal(\"Characters saved successfully!\", {\r\n            buttons: {},\r\n            timer: 1000,\r\n            icon: \"success\"\r\n        });\r\n    }\r\n\r\n    public downloadCharacter(): void {\r\n        const json = JSON.stringify(this.character().toJson());\r\n\r\n        const dl = document.createElement(\"a\");\r\n        dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${encodeURIComponent(json)}`);\r\n        dl.setAttribute(\"download\", `${this.character().name()}.json`);\r\n\r\n        dl.style.display = \"none\";\r\n        document.body.appendChild(dl);\r\n\r\n        dl.click();\r\n\r\n        document.body.removeChild(dl);\r\n    }\r\n\r\n    public uploadCharacter(): void {\r\n        const ul = document.createElement(\"input\");\r\n        ul.type = \"file\";\r\n        ul.accept = \".json\";\r\n        ul.style.display = \"none\";\r\n\r\n        ul.addEventListener(\"change\", e => {\r\n            const file = ul.files[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const json = e.target.result;\r\n                this.characters.push(Character.fromJson(JSON.parse(json)));\r\n                this.characterId(this.characters().length - 1);\r\n                this.mode(\"sheet\");\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n\r\n        document.body.appendChild(ul);\r\n\r\n        ul.click();\r\n\r\n        document.body.removeChild(ul);\r\n    }\r\n\r\n    public toggleCharacterLock(): void {\r\n        const character = this.character();\r\n        character.locked(!character.locked());\r\n    }\r\n\r\n    public switchMode(mode: string): () => void {\r\n        return () => {\r\n            if (this.mode() !== \"list\" && document.getElementById(mode)) {\r\n                this._previousSection = mode;\r\n            }\r\n            else this._previousSection = null;\r\n\r\n            window.location.hash = \"\";\r\n            this.mode(mode);\r\n        }\r\n    }\r\n\r\n    public undo(): void {\r\n        if (!this.canUndo()) return;\r\n        CommandStack.instance.undo();\r\n    }\r\n\r\n    public redo(): void {\r\n        if (!this.canRedo()) return;\r\n        CommandStack.instance.redo();\r\n    }\r\n\r\n    private registerKeyboardCommand(key: string, callback: () => void): void {\r\n        this._keyboardCommands.set(key, callback);\r\n    }\r\n\r\n    private enableKeyboardCommands(): void {\r\n        window.addEventListener(\"keydown\", e => {\r\n            if (e.ctrlKey !== true) return;\r\n\r\n            for (let [key, callback] of this._keyboardCommands.entries()) {\r\n                if (e.key === key) {\r\n                    e.preventDefault();\r\n                    callback();\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}","import Damage from \"./Damage\";\r\nimport Equipment from \"./Equipment\";\r\nimport InventoryItem from \"./InventoryItem\";\r\nimport Merit from \"./Merit\";\r\nimport Note from \"./Note\";\r\nimport { randomInteger } from \"../utils\";\r\nimport CommandStack from \"../Command/CommandStack\";\r\nimport CollectionAddCommand from \"../Command/CollectionAddCommand\";\r\nimport CollectionRemoveCommand from \"../Command/CollectionRemoveCommand\";\r\nimport CollectionMoveCommand from \"../Command/CollectionMoveCommand\";\r\nimport ClearUsedCommand from \"../Command/ClearUsedCommand\";\r\nimport AttributeCommand from \"../Command/AttributeCommand\";\r\n\r\nexport default class Character {\r\n    public ghost: boolean = false;\r\n    public locked: KnockoutObservable<boolean> = ko.observable(true);\r\n\r\n    public name: KnockoutObservable<string>;\r\n    public player: KnockoutObservable<string>;\r\n    public age: KnockoutObservable<number>;\r\n    public vice: KnockoutObservable<string>;\r\n    public virtue: KnockoutObservable<string>;\r\n    public origins: KnockoutObservable<string>;\r\n    public gender: KnockoutObservable<string>;\r\n    public concept: KnockoutObservable<string>;\r\n    public chronicle: KnockoutObservable<string>;\r\n\r\n    public intelligence: KnockoutObservable<number>;\r\n    public strength: KnockoutObservable<number>;\r\n    public presence: KnockoutObservable<number>;\r\n    public wits: KnockoutObservable<number>;\r\n    public dexterity: KnockoutObservable<number>;\r\n    public manipulation: KnockoutObservable<number>;\r\n    public resolve: KnockoutObservable<number>;\r\n    public stamina: KnockoutObservable<number>;\r\n    public composure: KnockoutObservable<number>;\r\n\r\n    public academics: KnockoutObservable<number>;\r\n    public robotics: KnockoutObservable<number>;\r\n    public crafts: KnockoutObservable<number>;\r\n    public investigation: KnockoutObservable<number>;\r\n    public medicine: KnockoutObservable<number>;\r\n    public occult: KnockoutObservable<number>;\r\n    public politics: KnockoutObservable<number>;\r\n    public science: KnockoutObservable<number>;\r\n    \r\n    public athletics: KnockoutObservable<number>;\r\n    public brawl: KnockoutObservable<number>;\r\n    public drive: KnockoutObservable<number>;\r\n    public ranged: KnockoutObservable<number>;\r\n    public larceny: KnockoutObservable<number>;\r\n    public stealth: KnockoutObservable<number>;\r\n    public survival: KnockoutObservable<number>;\r\n    public weaponry: KnockoutObservable<number>;\r\n\r\n    public animalKen: KnockoutObservable<number>;\r\n    public empathy: KnockoutObservable<number>;\r\n    public expression: KnockoutObservable<number>;\r\n    public intimidation: KnockoutObservable<number>;\r\n    public persuasion: KnockoutObservable<number>;\r\n    public socialize: KnockoutObservable<number>;\r\n    public streetwise: KnockoutObservable<number>;\r\n    public subterfuge: KnockoutObservable<number>;\r\n\r\n    public merits: KnockoutObservableArray<Merit>;\r\n    public spells: KnockoutObservableArray<Merit>;\r\n    public flaws: KnockoutObservableArray<Merit>;\r\n\r\n    public size: KnockoutObservable<number>;\r\n    public speed: KnockoutComputed<number>;\r\n    public defense: KnockoutComputed<number>;\r\n    public armor: KnockoutObservable<number>;\r\n    public initiative: KnockoutComputed<number>;\r\n    public experience: KnockoutObservable<number>;\r\n    public morality: KnockoutObservable<number>;\r\n\r\n    public weapons: KnockoutObservableArray<Equipment>;\r\n    public equipment: KnockoutObservableArray<Equipment>;\r\n    public inventory: KnockoutObservableArray<InventoryItem>;\r\n\r\n    public notes: KnockoutObservableArray<Note>;\r\n\r\n    public health: KnockoutComputed<number>;\r\n    public damage: Damage;\r\n\r\n    public magic: KnockoutComputed<number>;\r\n    public usedMagic: KnockoutObservable<number>;\r\n\r\n    public willpower: KnockoutComputed<number>;\r\n    public usedWillpower: KnockoutObservable<number>;\r\n\r\n    public constructor(json: CharacterJson) {\r\n        this.name = ko.observable(json.name).extend({ lockable: this.locked, named: \"Name\" });\r\n        this.player = ko.observable(json.player).extend({ lockable: this.locked });\r\n        this.age = ko.observable(json.age).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.vice = ko.observable(json.vice).extend({ lockable: this.locked });\r\n        this.virtue = ko.observable(json.virtue).extend({ lockable: this.locked });\r\n        this.origins = ko.observable(json.origins).extend({ lockable: this.locked });\r\n        this.gender = ko.observable(json.gender).extend({ lockable: this.locked });\r\n        this.concept = ko.observable(json.concept).extend({ lockable: this.locked });\r\n        this.chronicle = ko.observable(json.chronicle).extend({ lockable: this.locked });\r\n\r\n        this.intelligence = ko.observable(json.intelligence).extend({ lockable: this.locked, named: \"Intelligence\" });\r\n        this.strength = ko.observable(json.strength).extend({ lockable: this.locked });\r\n        this.presence = ko.observable(json.presence).extend({ lockable: this.locked });\r\n        this.wits = ko.observable(json.wits).extend({ lockable: this.locked });\r\n        this.dexterity = ko.observable(json.dexterity).extend({ lockable: this.locked });\r\n        this.manipulation = ko.observable(json.manipulation).extend({ lockable: this.locked });\r\n        this.resolve = ko.observable(json.resolve).extend({ lockable: this.locked });\r\n        this.stamina = ko.observable(json.stamina).extend({ lockable: this.locked });\r\n        this.composure = ko.observable(json.composure).extend({ lockable: this.locked });\r\n\r\n        this.academics = ko.observable(json.academics).extend({ lockable: this.locked });\r\n        this.robotics = ko.observable(json.robotics).extend({ lockable: this.locked });\r\n        this.crafts = ko.observable(json.crafts).extend({ lockable: this.locked });\r\n        this.investigation = ko.observable(json.investigation).extend({ lockable: this.locked });\r\n        this.medicine = ko.observable(json.medicine).extend({ lockable: this.locked });\r\n        this.occult = ko.observable(json.occult).extend({ lockable: this.locked });\r\n        this.politics = ko.observable(json.politics).extend({ lockable: this.locked });\r\n        this.science = ko.observable(json.science).extend({ lockable: this.locked });\r\n\r\n        this.athletics = ko.observable(json.athletics).extend({ lockable: this.locked });\r\n        this.brawl = ko.observable(json.brawl).extend({ lockable: this.locked });\r\n        this.drive = ko.observable(json.drive).extend({ lockable: this.locked });\r\n        this.ranged = ko.observable(json.ranged).extend({ lockable: this.locked });\r\n        this.larceny = ko.observable(json.larceny).extend({ lockable: this.locked });\r\n        this.stealth = ko.observable(json.stealth).extend({ lockable: this.locked });\r\n        this.survival = ko.observable(json.survival).extend({ lockable: this.locked });\r\n        this.weaponry = ko.observable(json.weaponry).extend({ lockable: this.locked });\r\n\r\n        this.animalKen = ko.observable(json.animalKen).extend({ lockable: this.locked });\r\n        this.empathy = ko.observable(json.empathy).extend({ lockable: this.locked });\r\n        this.expression = ko.observable(json.expression).extend({ lockable: this.locked });\r\n        this.intimidation = ko.observable(json.intimidation).extend({ lockable: this.locked });\r\n        this.persuasion = ko.observable(json.persuasion).extend({ lockable: this.locked });\r\n        this.socialize = ko.observable(json.socialize).extend({ lockable: this.locked });\r\n        this.streetwise = ko.observable(json.streetwise).extend({ lockable: this.locked });\r\n        this.subterfuge = ko.observable(json.subterfuge).extend({ lockable: this.locked });\r\n\r\n        this.merits = ko.observableArray(json.merits.map(m => new Merit(m.name, m.value, this.locked)));\r\n        this.spells = ko.observableArray(json.spells.map(s => new Merit(s.name, s.value, this.locked)));\r\n        this.flaws = ko.observableArray(json.flaws.map(f => new Merit(f.name, f.value, this.locked)));\r\n\r\n        this.size = ko.observable(json.size).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n        this.speed = ko.computed(() => this.strength() + this.dexterity() + 5, this);\r\n        this.defense = ko.computed(() => Math.min(this.dexterity(), this.wits()), this);\r\n        this.armor = ko.observable(json.armor).extend({ numeric: { precision: 0 } }).extend({ lockable: this.locked });\r\n        this.initiative = ko.computed(() => this.dexterity() + this.composure(), this);\r\n        this.experience = ko.observable(json.experience).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.morality = ko.observable(json.morality).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n\r\n        this.weapons = ko.observableArray(json.weapons.map(w => new Equipment(w.name, w.description, this.locked)));\r\n        this.equipment = ko.observableArray(json.equipment.map(e => new Equipment(e.name, e.description, this.locked)));\r\n        this.inventory = ko.observableArray(json.inventory.map(i => new InventoryItem(i.name, i.description, i.quantity, this.locked)));\r\n\r\n        this.notes = ko.observableArray(json.notes.map(n => new Note(n, this.locked)));\r\n\r\n        this.health = ko.computed(() => this.stamina() + this.size(), this);\r\n        this.damage = new Damage(this.health, json.bashing, json.lethal, json.aggravated, this.locked);\r\n\r\n        this.magic = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedMagic = ko.observable(json.usedMagic || 0).extend({ lockable: this.locked });\r\n        this.magic.subscribe(val => {\r\n            if (this.usedMagic() > val) CommandStack.instance.executeWithPrevious(new AttributeCommand(this.usedMagic, val, this.usedMagic()));\r\n        }, this);\r\n\r\n        this.willpower = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedWillpower = ko.observable(json.usedWillpower || 0).extend({ lockable: this.locked });\r\n        this.willpower.subscribe(val => {\r\n            if (this.usedWillpower() > val) CommandStack.instance.executeWithPrevious(new AttributeCommand(this.usedWillpower, val, this.usedWillpower()));\r\n        }, this);\r\n    }\r\n\r\n    public static newCharacter(): Character {\r\n        return new Character({\r\n            name: randomName(),\r\n            player: \"\",\r\n            age: 0,\r\n            vice: \"\",\r\n            virtue: \"\",\r\n            origins: \"\",\r\n            gender: \"\",\r\n            concept: \"\",\r\n            chronicle: \"\",\r\n\r\n            intelligence: 1,\r\n            strength: 1,\r\n            presence: 1,\r\n            wits: 1,\r\n            dexterity: 1,\r\n            manipulation: 1,\r\n            resolve: 1,\r\n            stamina: 1,\r\n            composure: 1,\r\n\r\n            academics: 0,\r\n            robotics: 0,\r\n            crafts: 0,\r\n            investigation: 0,\r\n            medicine: 0,\r\n            occult: 0,\r\n            politics: 0,\r\n            science: 0,\r\n\r\n            athletics: 0,\r\n            brawl: 0,\r\n            drive: 0,\r\n            ranged: 0,\r\n            larceny: 0,\r\n            stealth: 0,\r\n            survival: 0,\r\n            weaponry: 0,\r\n\r\n            animalKen: 0,\r\n            empathy: 0,\r\n            expression: 0,\r\n            intimidation: 0,\r\n            persuasion: 0,\r\n            socialize: 0,\r\n            streetwise: 0,\r\n            subterfuge: 0,\r\n\r\n            merits: [],\r\n            spells: [],\r\n            flaws: [],\r\n\r\n            size: 5,\r\n            armor: 0,\r\n            experience: 0,\r\n            morality: 7,\r\n\r\n            weapons: [],\r\n            equipment: [],\r\n            inventory: [],\r\n\r\n            notes: []\r\n        });\r\n    }\r\n\r\n    public static fromJson(json: CharacterJson): Character {\r\n        return new Character(json);\r\n    }\r\n\r\n    public onComponentClick(_: any, e: Event): void {\r\n        const element = <HTMLElement>e.currentTarget;\r\n        element.getElementsByTagName(\"input\")[0].focus();\r\n    }\r\n\r\n    public newItem<T>(observableArray: KnockoutObservableArray<T>, constructor: { createLockable(locked: KnockoutObservable<boolean>): T}): () => void {\r\n        return () => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionAddCommand(observableArray, constructor.createLockable(this.locked)));\r\n        };\r\n    }\r\n\r\n    public removeItem<T>(observableArray: KnockoutObservableArray<T>): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionRemoveCommand(observableArray, item));\r\n        };\r\n    }\r\n\r\n    public moveItem<T>(observableArray: KnockoutObservableArray<T>, direction: number): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            const index = observableArray.indexOf(item);\r\n            const newIndex = index + direction;\r\n\r\n            if (newIndex < 0 || newIndex >= observableArray().length) return;\r\n\r\n            CommandStack.instance.execute(new CollectionMoveCommand(observableArray, item, newIndex, index));\r\n        };\r\n    }\r\n\r\n    public clearUsed(usedObservable: KnockoutObservable<number>): () => void {\r\n        return () => {\r\n            CommandStack.instance.execute(new ClearUsedCommand(usedObservable));\r\n        };\r\n    }\r\n\r\n    public toJson(): CharacterJson {\r\n        return {\r\n            name: this.name(),\r\n            player: this.player(),\r\n            age: this.age(),\r\n            vice: this.vice(),\r\n            virtue: this.virtue(),\r\n            origins: this.origins(),\r\n            gender: this.gender(),\r\n            concept: this.concept(),\r\n            chronicle: this.chronicle(),\r\n\r\n            intelligence: this.intelligence(),\r\n            wits: this.wits(),\r\n            resolve: this.resolve(),\r\n            strength: this.strength(),\r\n            dexterity: this.dexterity(),\r\n            stamina: this.stamina(),\r\n            presence: this.presence(),\r\n            manipulation: this.manipulation(),\r\n            composure: this.composure(),\r\n\r\n            bashing: this.damage.bashing(),\r\n            lethal: this.damage.lethal(),\r\n            aggravated: this.damage.aggravated(),\r\n            usedMagic: this.usedMagic(),\r\n            usedWillpower: this.usedWillpower(),\r\n\r\n            academics: this.academics(),\r\n            robotics: this.robotics(),\r\n            crafts: this.crafts(),\r\n            investigation: this.investigation(),\r\n            medicine: this.medicine(),\r\n            occult: this.occult(),\r\n            politics: this.politics(),\r\n            science: this.science(),\r\n\r\n            athletics: this.athletics(),\r\n            brawl: this.brawl(),\r\n            drive: this.drive(),\r\n            ranged: this.ranged(),\r\n            larceny: this.larceny(),\r\n            stealth: this.stealth(),\r\n            survival: this.survival(),\r\n            weaponry: this.weaponry(),\r\n\r\n            animalKen: this.animalKen(),\r\n            empathy: this.empathy(),\r\n            expression: this.expression(),\r\n            intimidation: this.intimidation(),\r\n            persuasion: this.persuasion(),\r\n            socialize: this.socialize(),\r\n            streetwise: this.streetwise(),\r\n            subterfuge: this.subterfuge(),\r\n\r\n            merits: this.merits().map(m => { return { name: m.name(), value: m.value() }; }),\r\n            spells: this.spells().map(s => { return { name: s.name(), value: s.value() }; }),\r\n            flaws: this.flaws().map(f => { return { name: f.name(), value: f.value() }; }),\r\n\r\n            size: this.size(),\r\n            armor: this.armor(),\r\n            experience: this.experience(),\r\n            morality: this.morality(),\r\n\r\n            weapons: this.weapons().map(w => { return { name: w.name(), description: w.description() }; }),\r\n            equipment: this.equipment().map(e => { return { name: e.name(), description: e.description() }; }),\r\n            inventory: this.inventory().map(i => { return { name: i.name(), description: i.description(), quantity: i.quantity() }; }),\r\n\r\n            notes: this.notes().map(n => n.value())\r\n        };\r\n    }\r\n}\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\nfunction randomName() {\r\n    const firstNameLength = randomInteger(5, 12);\r\n    const lastNameLength = randomInteger(5, 12);\r\n    let firstName = \"\";\r\n    let lastName = \"\";\r\n\r\n    for (let i = 0; i < firstNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        firstName += newLetter;\r\n    }\r\n\r\n    for (let i = 0; i < lastNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        lastName += newLetter;\r\n    }\r\n\r\n    return `${firstName} ${lastName}`;\r\n}\r\n\r\ntype CharacterJson = {\r\n    name: string,\r\n    player: string,\r\n    age: number,\r\n    vice: string,\r\n    virtue: string,\r\n    origins: string,\r\n    gender: string,\r\n    concept: string,\r\n    chronicle: string,\r\n\r\n    intelligence: number,\r\n    strength: number,\r\n    presence: number,\r\n    wits: number,\r\n    dexterity: number,\r\n    manipulation: number,\r\n    resolve: number,\r\n    stamina: number,\r\n    composure: number,\r\n\r\n    academics: number,\r\n    robotics: number,\r\n    crafts: number,\r\n    investigation: number,\r\n    medicine: number,\r\n    occult: number,\r\n    politics: number,\r\n    science: number,\r\n\r\n    athletics: number,\r\n    brawl: number,\r\n    drive: number,\r\n    ranged: number,\r\n    larceny: number,\r\n    stealth: number,\r\n    survival: number,\r\n    weaponry: number,\r\n\r\n    animalKen: number,\r\n    empathy: number,\r\n    expression: number,\r\n    intimidation: number,\r\n    persuasion: number,\r\n    socialize: number,\r\n    streetwise: number,\r\n    subterfuge: number,\r\n\r\n    merits: Array<{ name: string, value: number }>,\r\n    spells: Array<{ name: string, value: number }>,\r\n    flaws: Array<{ name: string, value: number }>,\r\n\r\n    size: number,\r\n    armor: number,\r\n    experience: number,\r\n    morality: number,\r\n\r\n    weapons: Array<{ name: string, description: string }>,\r\n    equipment: Array<{ name: string, description: string }>,\r\n    inventory: Array<{ name: string, description: string, quantity: number }>,\r\n\r\n    notes: Array<string>,\r\n\r\n    bashing?: number,\r\n    lethal?: number,\r\n    aggravated?: number,\r\n\r\n    usedMagic?: number,\r\n    usedWillpower?: number\r\n};","import CommandStack from \"../Command/CommandStack\";\r\nimport AttributeCommand from \"../Command/AttributeCommand\";\r\nimport BatchCommand from \"../Command/BatchCommand\";\r\n\r\nexport default class Damage {\r\n    public totalHealth: KnockoutComputed<number>;\r\n    public bashing: KnockoutObservable<number>;\r\n    public lethal: KnockoutObservable<number>;\r\n    public aggravated: KnockoutObservable<number>;\r\n\r\n    public constructor(totalHealthObservable: KnockoutComputed<number>, bashing?: number, lethal?: number, aggravated?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.totalHealth = totalHealthObservable;\r\n        this.bashing = ko.observable(bashing || 0);\r\n        this.lethal = ko.observable(lethal || 0);\r\n        this.aggravated = ko.observable(aggravated || 0);\r\n\r\n        if (locked) {\r\n            this.bashing = this.bashing.extend({ lockable: locked });\r\n            this.lethal = this.lethal.extend({ lockable: locked });\r\n            this.aggravated = this.aggravated.extend({ lockable: locked });\r\n        }\r\n\r\n        totalHealthObservable.subscribe(val => {\r\n            let bashing = this.bashing();\r\n            let lethal = this.lethal();\r\n            let aggravated = this.aggravated();\r\n            while (bashing + lethal + aggravated > val) {\r\n                if (bashing > 0) {\r\n                    bashing--;\r\n                }\r\n                else if (lethal > 0) {\r\n                    lethal--;\r\n                }\r\n                else {\r\n                    aggravated--;\r\n                }\r\n            }\r\n            CommandStack.instance.executeWithPrevious(new BatchCommand(\r\n                new AttributeCommand(this.bashing, bashing, this.bashing()),\r\n                new AttributeCommand(this.lethal, lethal, this.lethal()),\r\n                new AttributeCommand(this.aggravated, aggravated, this.aggravated())\r\n            ));\r\n        }, this);\r\n    }\r\n\r\n    public anyEmpty(): boolean {\r\n        return this.bashing() + this.lethal() + this.aggravated() < this.totalHealth();\r\n    }\r\n\r\n    public addBashing(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.bashing, this.bashing() + 1, this.bashing()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addLethal(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addAggravated(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public clearAll(): void {\r\n        CommandStack.instance.execute(new BatchCommand(\r\n            new AttributeCommand(this.bashing, 0, this.bashing()),\r\n            new AttributeCommand(this.lethal, 0, this.lethal()),\r\n            new AttributeCommand(this.aggravated, 0, this.aggravated())\r\n        ));\r\n    }\r\n}","export default class Equipment {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n\r\n    public constructor(name?: string, description?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Equipment(null, null, locked);\r\n    }\r\n}","export default class InventoryItem {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n    public quantity: KnockoutObservable<number>;\r\n    public displayText: KnockoutComputed<string>;\r\n\r\n    public constructor(name?: string, description?: string, quantity?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n        this.quantity = ko.observable(quantity || 1);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n            this.quantity = this.quantity.extend({ lockable: locked });\r\n        }\r\n\r\n        this.displayText = ko.computed(this.getDisplayText, this);\r\n    }\r\n\r\n    public getDisplayText() : string {\r\n        return `${this.quantity()} ${this.name()}`;\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new InventoryItem(null, null, null, locked);\r\n    }\r\n}","export default class Merit {\r\n    public name: KnockoutObservable<string>;\r\n    public value: KnockoutObservable<number>;\r\n\r\n    public constructor(name?: string, value?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.value = ko.observable(value || 0);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Merit(null, null, locked);\r\n    }\r\n}","export default class Note {\r\n    public value: KnockoutObservable<string>;\r\n\r\n    public constructor(value?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.value = ko.observable(value || \"\");\r\n\r\n        if (locked) {\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Note(null, locked);\r\n    }\r\n}","import Character from \"../Character\";\r\nimport LocalStorageCharacterRepository from \"./LocalStorageCharacterRepository\";\r\n\r\nexport default interface ICharacterRepository {\r\n    loadCharacters(): Character[];\r\n    saveCharacters(characters: Character[]): boolean;\r\n}\r\n\r\nexport function getCharacterRepository(type: string, ...args: any[]): ICharacterRepository {\r\n    switch (type) {\r\n        case \"LocalStorage\": return new LocalStorageCharacterRepository();\r\n    }\r\n}","import ICharacterRepository from \"./ICharacterRepository\";\r\nimport Character from \"../Character\";\r\n\r\nconst storageKey = \"characters\";\r\nexport default class LocalStorageCharacterRepository implements ICharacterRepository {\r\n    public loadCharacters(): Character[] {\r\n        return (JSON.parse(window.localStorage.getItem(storageKey)) || []).map(Character.fromJson);\r\n    }\r\n\r\n    public saveCharacters(characters: Character[]): boolean {\r\n        window.localStorage.setItem(\"characters\", JSON.stringify(characters.map(c => c.toJson())));\r\n        return true;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class AttributeCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _newValue: number;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>, newValue: number, oldValue: number) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public getType(): string { return \"AttributeCommand\"; }\r\n    public toString(): string {\r\n        return `${this._observable.getName()}: ${this._oldValue} => ${this._newValue}`;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class BatchCommand implements ICommand {\r\n    private _commands: ICommand[];\r\n\r\n    public constructor(...commands: ICommand[]) {\r\n        this._commands = commands.filter(command => !command.doesNothing());\r\n    }\r\n\r\n    public get commandCount(): number { return this._commands.length; }\r\n\r\n    public getType(): string { return \"BatchCommand\"; }\r\n\r\n    public getCommand(index: number): ICommand | null {\r\n        if (index < 0 || index >= this._commands.length) return null;\r\n\r\n        return this._commands[index];\r\n    }\r\n\r\n    public execute(): void {\r\n        for (let i = 0; i < this._commands.length; i++) this._commands[i].execute();\r\n    }\r\n\r\n    public undo(): void {\r\n        for (let i = this._commands.length - 1; i >= 0; i--) this._commands[i].undo();\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._commands.every(command => command.doesNothing());\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class ClearUsedCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>) {\r\n        this._observable = observable;\r\n        this._oldValue = observable();\r\n    }\r\n\r\n    public getType(): string { return \"ClearUsedCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable(0);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._oldValue === 0;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionAddCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _newItem: T;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, newItem: T) {\r\n        this._observable = observable;\r\n        this._newItem = newItem;\r\n    }\r\n\r\n    public getType(): string { return \"CollectionAddCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable.push(this._newItem);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.remove(this._newItem);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionMoveCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _item: T;\r\n    private _newIndex: number;\r\n    private _oldIndex: number;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, item: T, newIndex: number, oldIndex: number) {\r\n        this._observable = observable;\r\n        this._item = item;\r\n        this._newIndex = newIndex;\r\n        this._oldIndex = oldIndex;\r\n    }\r\n\r\n    public getType(): string { return \"CollectionMoveCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable.splice(this._oldIndex, 1);\r\n        this._observable.splice(this._newIndex, 0, this._item);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.splice(this._newIndex, 1);\r\n        this._observable.splice(this._oldIndex, 0, this._item);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newIndex === this._oldIndex;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionRemoveCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _item: T;\r\n    private _itemIndex: number;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, item: T) {\r\n        this._observable = observable;\r\n        this._item = item;\r\n        this._itemIndex = this._observable.indexOf(this._item);\r\n    }\r\n\r\n    public getType(): string { return \"CollectionRemoveCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable.remove(this._item);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.splice(this._itemIndex, 0, this._item);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\nimport BatchCommand from \"./BatchCommand\";\r\n\r\nexport default class CommandStack {\r\n    private static _instance: CommandStack;\r\n    \r\n    private _undoStack: KnockoutObservableArray<ICommand>;\r\n    private _redoStack: KnockoutObservableArray<ICommand>;\r\n    private _currentlyExecuting: boolean;\r\n\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n\r\n    private constructor() {\r\n        this._undoStack = ko.observableArray([]);\r\n        this._redoStack = ko.observableArray([]);\r\n        this._currentlyExecuting = false;\r\n\r\n        this.canUndo = ko.computed(() => this.undoLength > 0, this);\r\n        this.canRedo = ko.computed(() => this.redoLength > 0, this);\r\n    }\r\n\r\n    public static get instance(): CommandStack {\r\n        if (!CommandStack._instance) CommandStack._instance = new CommandStack();\r\n\r\n        return CommandStack._instance;\r\n    }\r\n\r\n    public get undoLength(): number { return this._undoStack().length; }\r\n    public get redoLength(): number { return this._redoStack().length; }\r\n\r\n    public getPreviousCommand(drillIntoBatch: boolean = false): ICommand {\r\n        let previousCommand = this._undoStack()[this.undoLength - 1];\r\n\r\n        if (!drillIntoBatch) return previousCommand;\r\n\r\n        while (previousCommand instanceof BatchCommand) {\r\n            previousCommand = previousCommand.getCommand(previousCommand.commandCount - 1);\r\n        }\r\n\r\n        return previousCommand;\r\n    }\r\n\r\n    // TODO: Maybe don't have this as singleton...\r\n    // Could have an instance for each character\r\n    // to preserve the stack across character selection\r\n    public reset(): void {\r\n        this._undoStack.removeAll();\r\n        this._redoStack.removeAll();\r\n    }\r\n\r\n    public execute(command: ICommand): void {\r\n        if (command.doesNothing()) return;\r\n\r\n        if (this._currentlyExecuting) {\r\n            window.setTimeout(() => this.execute(command), 1);\r\n            return;\r\n        }\r\n\r\n        this._currentlyExecuting = true;\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n        this._redoStack.removeAll();\r\n        this._currentlyExecuting = false;\r\n    }\r\n\r\n    public executeWithPrevious(command: ICommand): void {\r\n        if (command.doesNothing()) return;\r\n\r\n        if (this._currentlyExecuting) {\r\n            window.setTimeout(() => this.executeWithPrevious(command), 1);\r\n            return;\r\n        }\r\n\r\n        this._currentlyExecuting = true;\r\n        command.execute();\r\n        let previousCommand = this._undoStack.pop();\r\n        this._undoStack.push(new BatchCommand(previousCommand, command));\r\n        this._redoStack.removeAll();\r\n        this._currentlyExecuting = false;\r\n    }\r\n\r\n    public undo(): void {\r\n        if (this._undoStack().length === 0) return;\r\n        \r\n        const command = this._undoStack.pop();\r\n\r\n        command.undo();\r\n        this._redoStack.push(command);\r\n    }\r\n\r\n    public redo(): void {\r\n        if (this._redoStack().length === 0) return;\r\n\r\n        const command = this._redoStack.pop();\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n    }\r\n\r\n    public log(): void {\r\n        console.log(\"UNDO STACK:\");\r\n        console.log(this._undoStack());\r\n        console.log(\"REDO STACK:\");\r\n        console.log(this._redoStack());\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class TextInputCommand implements ICommand {\r\n    private _observable: KnockoutObservable<string>;\r\n    private _newValue: string;\r\n    private _oldValue: string;\r\n\r\n    public constructor(observable: KnockoutObservable<string>, newValue: string, oldValue: string) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public getType(): string { return \"TextInputCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void  {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import { randomFloat, randomInteger } from \"./utils\";\r\n\r\nexport default class Dice {\r\n    public dicePool: KnockoutObservable<number>;\r\n    public rollRounds: KnockoutObservableArray<Array<number>>;\r\n    public rollingInProgress: KnockoutObservable<boolean>;\r\n    public totalDiceSuccesses: KnockoutComputed<number>;\r\n    public totalDiceSuccessesDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        this.dicePool = ko.observable(1);\r\n        this.rollRounds = ko.observableArray([]);\r\n        this.rollingInProgress = ko.observable(false);\r\n        this.totalDiceSuccesses = ko.computed(() => {\r\n            if (this.rollingInProgress() || this.rollRounds().length === 0) return -1;\r\n\r\n            return this.rollRounds().reduce((total: number, r: Array<number>) => {\r\n                return total + r.reduce((total: number, d: number) => total + (d > 7 ? 1 : 0), 0);\r\n            }, 0);\r\n        }, this);\r\n        this.totalDiceSuccessesDisplay = ko.computed(() => {\r\n            return this.totalDiceSuccesses() >= 0 ? \"\" + this.totalDiceSuccesses() : \"???\";\r\n        }, this);\r\n    }\r\n\r\n    public incrementDicePool(amount: number): () => void {\r\n        return () => {\r\n            let newAmount = this.dicePool() + amount;\r\n            if (newAmount < 1) newAmount = 1;\r\n            this.dicePool(newAmount);\r\n        };\r\n    }\r\n\r\n    public rollDice(): void {\r\n        const roller = new RollState(this);\r\n        roller.beginRoll();\r\n    }\r\n}\r\n\r\nclass RollState {\r\n    private _diceObj: Dice;\r\n    private _currentRound: number;\r\n    private _currentDice: number;\r\n    private _currentRoundRolls: number;\r\n    private _currentRoundResults: Array<number>;\r\n    private _nextRoundRolls: number;\r\n    private _intervalHandle: number;\r\n\r\n    public constructor(diceObj: Dice) {\r\n        this._diceObj = diceObj;\r\n        this._currentRound = 0;\r\n        this._currentDice = 0;\r\n        this._currentRoundRolls = diceObj.dicePool();\r\n        this._currentRoundResults = [];\r\n        this._nextRoundRolls = 0;\r\n        this._intervalHandle = null;\r\n    }\r\n\r\n    public beginRoll(): void {\r\n        this._diceObj.rollingInProgress(true);\r\n        this._diceObj.rollRounds.removeAll();\r\n        for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n        this._diceObj.rollRounds.push(this._currentRoundResults);\r\n\r\n        this._intervalHandle = window.setInterval(() => {\r\n            const nextRoll = randomInteger(1, 11);\r\n            if (nextRoll === 10) {\r\n                this._nextRoundRolls++;\r\n                const diceContainer = document.getElementsByClassName(\"diceContainer\")[0];\r\n                const critMessage = document.createElement(\"div\");\r\n                critMessage.classList.add(\"crit-message\");\r\n                critMessage.innerText = \"Crit!\";\r\n                critMessage.id = \"critMessage\";\r\n                diceContainer.appendChild(critMessage);\r\n                window.setTimeout(() => diceContainer.removeChild(critMessage), 1010);\r\n            }\r\n            this._currentRoundResults[this._currentDice] = nextRoll;\r\n            this._diceObj.rollRounds.replace(this._diceObj.rollRounds()[this._currentRound], this._currentRoundResults);\r\n            this._currentDice++;\r\n\r\n            if (this._currentDice === this._currentRoundRolls) {\r\n                if (this._nextRoundRolls === 0) {\r\n                    window.clearInterval(this._intervalHandle);\r\n                    this._diceObj.rollingInProgress(false);\r\n                    const critMessage = document.getElementById(\"critMessage\");\r\n                    if (critMessage) {\r\n                        critMessage.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                else {\r\n                    this._currentRound++;\r\n                    this._currentRoundRolls = this._nextRoundRolls;\r\n                    this._nextRoundRolls = 0;\r\n                    this._currentDice = 0;\r\n                    this._currentRoundResults = [];\r\n                    for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n                    this._diceObj.rollRounds.push(this._currentRoundResults);\r\n                }\r\n            }\r\n        }, 100);\r\n    }\r\n}","import Application from \"./Application\";\r\nimport Equipment from \"./Character/Equipment\";\r\nimport InventoryItem from \"./Character/InventoryItem\";\r\nimport Merit from \"./Character/Merit\";\r\nimport Note from \"./Character/Note\";\r\nimport { applyCustomKnockoutCode } from \"./utils\";\r\n\r\napplyCustomKnockoutCode();\r\n\r\nconst constructors = {\r\n    Equipment: Equipment,\r\n    InventoryItem: InventoryItem,\r\n    Merit: Merit,\r\n    Note: Note\r\n};\r\nObject.defineProperty(window, \"constructors\", { value: constructors });\r\n\r\nconst app = new Application();\r\nko.applyBindings(app);\r\n\r\n// Exposing the view model to the global state in case manual changes need to be applied\r\nObject.defineProperty(window, \"app\", { value: app });\r\n\r\nfunction toggleTooltips(enable: boolean): void {\r\n    if (enable) $(\"[data-toggle='tooltip']\").tooltip();\r\n    else $(\"[data-toggle='tooltip']\").tooltip(\"dispose\");\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    toggleTooltips(window.outerWidth >= 992);\r\n});\r\ntoggleTooltips(window.outerWidth >= 992);","import Damage from \"./Character/Damage\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\nimport AttributeCommand from \"./Command/AttributeCommand\";\r\nimport TextInputCommand from \"./Command/TextInputCommand\";\r\n\r\nexport function randomInteger(minInclusive = 0, maxExclusive = 10): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function randomFloat(minInclusive = 0, maxExclusive = 1): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.random() * (maxExclusive - minInclusive) + minInclusive;\r\n}\r\n\r\nconst _observableNameMap = new Map<KnockoutObservable<any>, string>();\r\nexport function applyCustomKnockoutCode() {\r\n    applyKnockoutBindings();\r\n    applyKnockoutExtenders();\r\n    applyKnockoutCustomFunctions();\r\n}\r\n\r\nfunction applyKnockoutBindings() {\r\n    ko.bindingHandlers.dice = {\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservableArray<Array<number>>) => {\r\n            const rollRounds = valueAccessor()();\r\n            if (rollRounds.length === 0) {\r\n                element.innerHTML = \"\";\r\n                return;\r\n            }\r\n    \r\n            let divs = element.getElementsByClassName(\"dice-round\");\r\n            if (divs.length !== rollRounds.length) {\r\n                const newRound = document.createElement(\"div\");\r\n                newRound.classList.add(\"dice-round\");\r\n                const rolls = rollRounds[rollRounds.length - 1];\r\n                for (let i = 0; i < rolls.length; i++) {\r\n                    const span = document.createElement(\"span\");\r\n                    const delay = randomFloat(0, 0.5);\r\n                    span.style.animation = `rollingDice 0.5s linear -${delay}s infinite alternate`;\r\n                    span.classList.add(\"dice\");\r\n                    newRound.appendChild(span);\r\n                }\r\n                element.appendChild(newRound);\r\n                divs = element.getElementsByClassName(\"dice-round\");\r\n            }\r\n    \r\n            for (let i = 0; i < rollRounds.length; i++) {\r\n                const rolls = rollRounds[i];\r\n                const spans = divs[i].getElementsByClassName(\"dice\");\r\n                for (let j = 0; j < rolls.length; j++) {\r\n                    const roll = rolls[j];\r\n                    const span = <HTMLSpanElement>spans[j];\r\n    \r\n                    if (roll !== -1) {\r\n                        span.style.animation = null;\r\n                        span.style.backgroundImage = `url('images/dice-${roll}.png')`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.damageDisplay = {\r\n        init: (element: HTMLElement) => {\r\n            for (let i = 0; i < 15; i++) {\r\n                const span = document.createElement(\"span\");\r\n                span.classList.add(\"damage\");\r\n                span.classList.add(\"none\");\r\n                element.appendChild(span);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => Damage) => {\r\n            const damageObj = valueAccessor();\r\n            const spans = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < spans.length; i++) {\r\n                if (i < damageObj.aggravated()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.add(\"aggravated\");\r\n                }\r\n                else if (i - damageObj.aggravated() < damageObj.lethal()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"lethal\");\r\n                }\r\n                else if (i - damageObj.aggravated() - damageObj.lethal() < damageObj.bashing()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"bashing\");\r\n                }\r\n                else {\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"none\");\r\n                }\r\n    \r\n                if (i < damageObj.totalHealth()) {\r\n                    spans[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else {\r\n                    spans[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.attribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, canClear?: boolean }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                dot.classList.add(\"pointer\");\r\n                dot.dataset.toggle = \"tooltip\";\r\n                dot.title = \"\" + (i + 1);\r\n                $(dot).tooltip();\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n    \r\n            const canClear = valueAccessor().canClear;\r\n            if (canClear === true || typeof canClear === \"undefined\") {\r\n                const clearDot = document.createElement(\"div\");\r\n                clearDot.classList.add(\"clear-dot\");\r\n                clearDot.innerHTML = \"&times;\";\r\n                clearDot.dataset.toggle = \"tooltip\";\r\n                clearDot.title = \"Clear\";\r\n                clearDot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, 0, valueAccessor().value()));\r\n                });\r\n                element.appendChild(clearDot);\r\n                $(clearDot).tooltip();\r\n            }\r\n    \r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                element.appendChild(dot);\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByClassName(\"attribute-dot\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                const dot = <HTMLSpanElement>dots[i];\r\n                dot.style.backgroundColor = null;\r\n                dot.style.borderColor = null;\r\n                if (i < value) {\r\n                    dot.style.backgroundColor = \"var(--body-color)\";\r\n                    dot.style.borderColor = \"var(--body-color)\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.readOnlyAttribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, hideUnfilled?: boolean }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                dots[i].classList.remove(\"filled\");\r\n                if (i < value) {\r\n                    dots[i].classList.add(\"filled\");\r\n                    dots[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else if (valueAccessor().hideUnfilled) {\r\n                    dots[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.used = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < 12; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const used = valueAccessor().value();\r\n            const total = valueAccessor().total();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                if (i < used) dots[i].classList.add(\"filled-red\");\r\n                else dots[i].classList.remove(\"filled-red\");\r\n    \r\n                if (i < total) dots[i].classList.remove(\"HIDDEN\");\r\n                else dots[i].classList.add(\"HIDDEN\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.focusOnCreation = {\r\n        init: (element: HTMLInputElement | HTMLTextAreaElement) => {\r\n            window.setTimeout(() => {\r\n                if (element.value) return;\r\n                element.focus();\r\n            }, 1);\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.contextMenu = {\r\n        init: (element: HTMLElement, valueAccessor: () => () => void) => {\r\n            element.addEventListener(\"contextmenu\", e => {\r\n                e.preventDefault();\r\n                valueAccessor()();\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.undoableTextInput = {\r\n        init: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            const inputElement = <HTMLInputElement>element;\r\n            inputElement.addEventListener(\"change\", () => {\r\n                const oldValue = valueAccessor()();\r\n                const newValue = inputElement.value;\r\n                if (oldValue === newValue) return;\r\n\r\n                valueAccessor()(newValue);\r\n                if (valueAccessor()() === oldValue) return;\r\n                valueAccessor()(oldValue);\r\n\r\n                CommandStack.instance.execute(new TextInputCommand(valueAccessor(), newValue, oldValue));\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            (<HTMLInputElement>element).value = valueAccessor()();\r\n        }\r\n    };\r\n}\r\nfunction applyKnockoutExtenders() {\r\n    ko.extenders.named = <T>(target: KnockoutObservable<T>, name: string) => {\r\n        // TODO: This requires that the `named` extension be the last one listed.\r\n        // It's messy and also inefficient because there will be multiple instances\r\n        // of the same observable property on a character equal to the number of\r\n        // characters the user has. I will need to come up with a different way,\r\n        // but for now this works as a proof of concept.\r\n        _observableNameMap.set(target, name);\r\n        return target;\r\n    };\r\n\r\n    ko.extenders.lockable = <T>(target: KnockoutObservable<T>, locked: KnockoutObservable<boolean>) => {\r\n        const result = ko.pureComputed({\r\n            read: target,\r\n            write: (newValue: T) => {\r\n                if (locked()) {\r\n                    target.notifySubscribers(target());\r\n                }\r\n                else {\r\n                    target(newValue);\r\n                    target.notifySubscribers(newValue);\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        return result;\r\n    };\r\n    \r\n    ko.extenders.numeric = (target: KnockoutObservable<number>, args: { precision?: number, min?: number, max?: number }) => {\r\n        const precision = args.precision || 0;\r\n        const min = args.min || -Infinity;\r\n        const max = args.max || Infinity;\r\n    \r\n        // Create a writeable computed observable to intercept writes to our observable\r\n        const result = ko.pureComputed({\r\n            read: target, // Always return the original observable's value\r\n            write: (newValue: number) => {\r\n                const current = target();\r\n                const roundingMultiplier = Math.pow(10, precision);\r\n                const newValueAsNum = isNaN(newValue) ? 0 : +newValue;\r\n                let valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\r\n                if (valueToWrite < min) valueToWrite = min;\r\n                else if (valueToWrite > max) valueToWrite = max;\r\n    \r\n                // Only write if it changed\r\n                if (valueToWrite !== current) {\r\n                    target(valueToWrite);\r\n                }\r\n                else {\r\n                    // If the rounded value is the same, but a different value was written,\r\n                    // force a notification for the current field\r\n                    if (newValue !== current) {\r\n                        target.notifySubscribers(valueToWrite);\r\n                    }\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        // Initialize with current value to make sure it is rounded appropriately\r\n        result(target());\r\n    \r\n        // Return the new computed observable\r\n        return result;\r\n    };\r\n}\r\nfunction applyKnockoutCustomFunctions() {\r\n    ko.subscribable.fn.getName = function () {\r\n        return _observableNameMap.get(this);\r\n    };\r\n}"]}