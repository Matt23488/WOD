{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/client/Application.ts","src/client/Character/Character.ts","src/client/Character/Damage.ts","src/client/Character/Equipment.ts","src/client/Character/InventoryItem.ts","src/client/Character/Merit.ts","src/client/Character/Note.ts","src/client/Character/Repository/CookieCharacterRepository.ts","src/client/Character/Repository/DummyCharacterRepository.ts","src/client/Character/Repository/ICharacterRepository.ts","src/client/Character/Repository/LocalStorageCharacterRepository.ts","src/client/Command/AttributeCommand.ts","src/client/Command/BatchCommand.ts","src/client/Command/ClearUsedCommand.ts","src/client/Command/CollectionAddCommand.ts","src/client/Command/CollectionMoveCommand.ts","src/client/Command/CollectionRemoveCommand.ts","src/client/Command/CommandStack.ts","src/client/Command/TextInputCommand.ts","src/client/Dice.ts","src/client/Keyboard.ts","src/client/main.ts","src/client/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Character_1","Dice_1","CommandStack_1","ICharacterRepository_1","Keyboard_1","Application","prototype","toggleClock","this","showClock","goBack","mode","_previousSection","window","location","hash","newCharacter","newChar","default","locked","characters","push","selectCharacter","character","charIndex","indexOf","characterId","instance","reset","deleteCharacter","_this","swal","title","name","text","icon","buttons","dangerMode","then","willDelete","id","remove","saveCharacters","_characterRepo","realCharacters","timer","downloadCharacter","json","JSON","stringify","toJson","dl","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","uploadCharacter","ul","type","accept","addEventListener","file","files","reader","FileReader","onload","target","result","fromJson","parse","readAsText","toggleCharacterLock","switchMode","getElementById","undo","canUndo","redo","canRedo","getCharacterRepository","connection","savedCharacters","loadCharacters","unshift","ghost","ko","observable","observableArray","computed","filter","dice","lockButtonClass","lockButtonIcon","currentTime","Date","currentTimeDisplay","time","hours","getHours","minutes","getMinutes","seconds","getSeconds","suffix","setInterval","registerKeyboardCommand","log","WebSocket","MozWebSocket","joined","userName","prompt","send","value","error","console","message","data","info","screenName","close","substring","offset","parseInt","$","css","$domElement","scrollTop","top","Damage_1","Equipment_1","InventoryItem_1","Merit_1","Note_1","utils_1","CollectionAddCommand_1","CollectionRemoveCommand_1","CollectionMoveCommand_1","ClearUsedCommand_1","AttributeCommand_1","Character","firstNameLength","randomInteger","lastNameLength","firstName","lastName","newLetter","alphabet","charAt","toUpperCase","randomName","player","age","vice","virtue","origins","gender","concept","chronicle","intelligence","strength","presence","wits","dexterity","manipulation","resolve","stamina","composure","academics","robotics","crafts","investigation","medicine","occult","politics","science","athletics","brawl","drive","ranged","larceny","stealth","survival","weaponry","animalKen","empathy","expression","intimidation","persuasion","socialize","streetwise","subterfuge","merits","spells","flaws","size","armor","experience","morality","weapons","equipment","inventory","notes","onComponentClick","_","currentTarget","getElementsByTagName","focus","newItem","constructor","execute","createLockable","removeItem","item","moveItem","direction","index","newIndex","clearUsed","usedObservable","bashing","damage","lethal","aggravated","usedMagic","usedWillpower","map","m","s","w","description","quantity","extend","lockable","named","numeric","precision","min","max","speed","defense","Math","initiative","health","magic","subscribe","val","executeWithPrevious","willpower","BatchCommand_1","Damage","anyEmpty","totalHealth","addBashing","alert","addLethal","addAggravated","clearAll","totalHealthObservable","Equipment","InventoryItem","getDisplayText","displayText","Merit","Note","cookie","characterCookiePrefix","characterListCookieKey","CookieCharacterRepository","_characterIds","_b","__values","_c","next","done","key","oldId","removeCookie","DummyCharacterRepository","LocalStorageCharacterRepository_1","DummyCharacterRepository_1","CookieCharacterRepository_1","args","_i","arguments","IsSupported","button","LocalStorageCharacterRepository","localStorage","getItem","setItem","Object","defineProperty","test","AttributeCommand","getType","toString","_observable","getName","_oldValue","_newValue","doesNothing","newValue","oldValue","BatchCommand","_commands","getCommand","every","command","commands","ClearUsedCommand","CollectionAddCommand","_newItem","CollectionMoveCommand","splice","_oldIndex","_newIndex","_item","oldIndex","CollectionRemoveCommand","_itemIndex","CommandStack","_instance","_undoStack","_redoStack","getPreviousCommand","drillIntoBatch","previousCommand","undoLength","commandCount","removeAll","_currentlyExecuting","setTimeout","pop","redoLength","TextInputCommand","Dice","incrementDicePool","amount","newAmount","dicePool","rollDice","RollState","beginRoll","rollRounds","rollingInProgress","totalDiceSuccesses","reduce","total","d","totalDiceSuccessesDisplay","_diceObj","_currentRoundRolls","_currentRoundResults","_intervalHandle","nextRoll","_nextRoundRolls","diceContainer_1","getElementsByClassName","critMessage_1","classList","add","innerText","_currentDice","replace","_currentRound","clearInterval","critMessage","diceObj","_keyboardCommands","Map","callback","set","ctrlKey","entries","_d","__read","preventDefault","Application_1","applyCustomKnockoutCode","constructors","app","toggleTooltips","enable","tooltip","applyBindings","outerWidth","TextInputCommand_1","randomFloat","minInclusive","maxExclusive","_a","random","floor","_observableNameMap","bindingHandlers","update","element","valueAccessor","divs","newRound","rolls","span","delay","animation","spans","j","roll","backgroundImage","innerHTML","damageDisplay","init","damageObj","attribute","dots","dot","dataset","toggle","forEach","canClear","clearDot","backgroundColor","borderColor","readOnlyAttribute","hideUnfilled","used","focusOnCreation","contextMenu","undoableTextInput","inputElement","extenders","pureComputed","read","write","notifySubscribers","notify","Infinity","current","roundingMultiplier","pow","newValueAsNum","isNaN","valueToWrite","round","subscribable","fn","get"],"mappings":"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","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Character from \"./Character/Character\";\r\nimport Dice from \"./Dice\";\r\n// import swal from \"sweetalert\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\nimport ICharacterRepository, { getCharacterRepository } from \"./Character/Repository/ICharacterRepository\";\r\nimport { registerKeyboardCommand } from \"./Keyboard\";\r\nimport MenuBar from \"./MenuBar\";\r\n\r\nexport default class Application {\r\n    private _characterRepo: ICharacterRepository;\r\n    private _previousSection: string;\r\n\r\n    public mode: KnockoutObservable<string>;\r\n    public characterId: KnockoutObservable<number>;\r\n    public characters: KnockoutObservableArray<Character>;\r\n    public realCharacters: KnockoutComputed<Array<Character>>;\r\n    public character: KnockoutComputed<Character>;\r\n    public dice: Dice;\r\n    public lockButtonClass: KnockoutComputed<string>;\r\n    public lockButtonIcon: KnockoutComputed<string>;\r\n    public showClock: KnockoutObservable<boolean>;\r\n    public currentTime: KnockoutObservable<Date>;\r\n    public currentTimeDisplay: KnockoutComputed<string>;\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n    // public menuBar: KnockoutObservable<MenuBar>;\r\n    public menuBar: MenuBar;\r\n\r\n    public constructor() {\r\n        this._characterRepo = getCharacterRepository(\"LocalStorage\");\r\n\r\n        const savedCharacters = this._characterRepo.loadCharacters();\r\n        savedCharacters.unshift(Character.newCharacter());\r\n        savedCharacters[0].ghost = true;\r\n\r\n        this.mode = ko.observable(\"list\");\r\n        this.characterId = ko.observable(0);\r\n        this.characters = ko.observableArray(savedCharacters);\r\n        this.realCharacters = ko.computed(() => this.characters().filter(c => !c.ghost), this);\r\n        this.character = ko.computed(() => this.characters()[this.characterId()], this);\r\n        this.dice = new Dice();\r\n        this.lockButtonClass = ko.computed(() => this.character().locked() ? \"btn-danger\" : \"btn-outline-success\", this);\r\n        this.lockButtonIcon = ko.computed(() => this.character().locked() ? \"fas fa-lock\" : \"fas fa-lock-open\", this);\r\n        this._previousSection = null;\r\n        this.showClock = ko.observable(false);\r\n        this.currentTime = ko.observable(new Date());\r\n\r\n        this.currentTimeDisplay = ko.computed(() => {\r\n            const time = this.currentTime();\r\n            let hours = time.getHours();\r\n            const minutes = time.getMinutes();\r\n            const seconds = time.getSeconds();\r\n            const suffix = hours < 12 ? \"AM\" : \"PM\";\r\n            const minutePrefix = minutes < 10 ? \"0\" : \"\";\r\n            const secondPrefix = seconds < 10 ? \"0\" : \"\";\r\n            if (hours > 12) hours -= 12;\r\n            else if (hours === 0) hours = 12;\r\n            return `${hours}:${minutePrefix}${minutes}:${secondPrefix}${seconds} ${suffix}`;\r\n        }, this);\r\n\r\n        this.canUndo = ko.computed(() => CommandStack.instance.canUndo() && !this.character().locked(), this);\r\n        this.canRedo = ko.computed(() => CommandStack.instance.canRedo() && !this.character().locked(), this);\r\n\r\n        window.setInterval(() => {\r\n            this.currentTime(new Date());\r\n        }, 1000);\r\n\r\n        registerKeyboardCommand(\"s\", () => this.saveCharacters());\r\n        registerKeyboardCommand(\"z\", () => { \r\n            if (this.mode() === \"list\") return;\r\n            this.undo();\r\n        });\r\n        registerKeyboardCommand(\"Z\", () => {\r\n            if (this.mode() === \"list\") return;\r\n            this.redo();\r\n        });\r\n        registerKeyboardCommand(\"l\", () => {\r\n            if (this.mode() === \"list\") return;\r\n            this.toggleCharacterLock();\r\n        });\r\n        registerKeyboardCommand(\"o\", () => this.toggleClock());\r\n        registerKeyboardCommand(\"q\", () => CommandStack.instance.log());\r\n\r\n        // TODO: abstract this code\r\n        window.WebSocket = window.WebSocket || window.MozWebSocket;\r\n\r\n        let connection: WebSocket;\r\n        let joined = false;\r\n        registerKeyboardCommand(\"j\", () => {\r\n            if (joined) return;\r\n\r\n            connection = new WebSocket(\"ws://localhost:3001\");\r\n\r\n            connection.addEventListener(\"open\", () => {\r\n                joined = true;\r\n                const userName = prompt(\"Your Name?\");\r\n                connection.send(JSON.stringify({ type: \"name\", value: userName }));\r\n            });\r\n\r\n            connection.addEventListener(\"error\", error => {\r\n                console.error(\"Could not connect to chat server.\");\r\n            });\r\n\r\n            connection.addEventListener(\"message\", message => {\r\n                try {\r\n                    const json = JSON.parse(message.data);\r\n                    if (json.type === \"connect\" || json.type === \"disconnect\") {\r\n                        console.info(json.message);\r\n                    }\r\n                    else if (json.type === \"message\") {\r\n                        console.log(`${json.screenName}: ${json.message}`);\r\n                    }\r\n                    else if (json.type === \"error\") {\r\n                        console.error(json.message);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    console.error (`This doesn't look like valid JSON: ${message.data}`);\r\n                    return;\r\n                }\r\n            });\r\n        });\r\n\r\n        registerKeyboardCommand(\"m\", () => {\r\n            if (!joined) return;\r\n\r\n            const message = prompt(\"Message?\");\r\n            connection.send(JSON.stringify({ type: \"message\", value: message }));\r\n        });\r\n\r\n        registerKeyboardCommand(\"J\", () => {\r\n            if (!joined) return;\r\n\r\n            connection.close();\r\n            joined = false;\r\n        });\r\n\r\n        window.addEventListener(\"hashchange\", e => {\r\n            const hash = window.location.hash.substring(1);\r\n            if (!hash) return;\r\n\r\n            const offset = parseInt($(\".body-content\").css(\"top\"));\r\n            const $domElement = $(`#${hash}`);\r\n            $(window).scrollTop($domElement.offset().top - offset);\r\n        });\r\n\r\n        // const menuBar = new MenuBar();\r\n        // // File menu\r\n        // const fileMenu = menuBar.addMenu(\"File\");\r\n        // fileMenu.addMenuOption(\"Back\", ko.computed(() => this.mode() !== \"list\", this), () => this.goBack());\r\n        // fileMenu.addMenuOption(\"Test\", ko.computed(() => true), () => alert(\"test\"));\r\n\r\n        // const editMenu = menuBar.addMenu(\"Edit\");\r\n        // editMenu.addMenuOption(\"Undo\", ko.computed(() => this.mode() !== \"list\" && this.canUndo(), this), () => this.undo(), \"z\");\r\n        // editMenu.addMenuOption(\"Redo\", ko.computed(() => this.mode() !== \"list\" && this.canRedo(), this), () => this.redo(), \"Z\");\r\n\r\n        // this.menuBar = menuBar;\r\n    }\r\n\r\n    public toggleClock(): void {\r\n        this.showClock(!this.showClock());\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.mode() === \"sheet\") this.mode(\"list\");\r\n        else {\r\n            this.mode(\"sheet\");\r\n\r\n            if (this._previousSection) window.location.hash = this._previousSection;\r\n        }\r\n    }\r\n\r\n    public newCharacter(): void {\r\n        const newChar = Character.newCharacter();\r\n        newChar.locked(false);\r\n        this.characters.push(newChar);\r\n        this.selectCharacter(newChar);\r\n    }\r\n\r\n    public selectCharacter(character: Character): void {\r\n        const charIndex = this.characters.indexOf(character);\r\n        if (this.characterId() !== charIndex) {\r\n            this.characterId(charIndex);\r\n            CommandStack.instance.reset();\r\n        }\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public deleteCharacter(character: Character): void {\r\n        if (this.character().locked()) return;\r\n        swal({\r\n            title: `Delete ${this.character().name()}`,\r\n            text: \"Are you sure? (As long as you don't save, your character won't be gone.)\",\r\n            icon: \"warning\",\r\n            buttons: [\"Cancel\", \"Delete\"],\r\n            dangerMode: true\r\n        })\r\n        .then((willDelete: boolean) => {\r\n            if (willDelete) {\r\n                const id = this.characterId();\r\n                this.characterId(0);\r\n                this.characters.remove(this.characters()[id]);\r\n                this.mode(\"list\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public saveCharacters(): void {\r\n        this._characterRepo.saveCharacters(this.realCharacters());\r\n        swal(\"Characters saved successfully!\", {\r\n            buttons: {},\r\n            timer: 1000,\r\n            icon: \"success\"\r\n        });\r\n    }\r\n\r\n    public downloadCharacter(): void {\r\n        const json = JSON.stringify(this.character().toJson());\r\n\r\n        const dl = document.createElement(\"a\");\r\n        dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${encodeURIComponent(json)}`);\r\n        dl.setAttribute(\"download\", `${this.character().name()}.json`);\r\n\r\n        dl.style.display = \"none\";\r\n        document.body.appendChild(dl);\r\n\r\n        dl.click();\r\n\r\n        document.body.removeChild(dl);\r\n    }\r\n\r\n    public uploadCharacter(): void {\r\n        const ul = document.createElement(\"input\");\r\n        ul.type = \"file\";\r\n        ul.accept = \".json\";\r\n        ul.style.display = \"none\";\r\n\r\n        ul.addEventListener(\"change\", e => {\r\n            const file = ul.files[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const json = e.target.result;\r\n                this.characters.push(Character.fromJson(JSON.parse(json)));\r\n                this.characterId(this.characters().length - 1);\r\n                this.mode(\"sheet\");\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n\r\n        document.body.appendChild(ul);\r\n\r\n        ul.click();\r\n\r\n        document.body.removeChild(ul);\r\n    }\r\n\r\n    public toggleCharacterLock(): void {\r\n        const character = this.character();\r\n        character.locked(!character.locked());\r\n    }\r\n\r\n    public switchMode(mode: string): () => void {\r\n        return () => {\r\n            if (this.mode() !== \"list\" && document.getElementById(mode)) {\r\n                this._previousSection = mode;\r\n            }\r\n            else this._previousSection = null;\r\n\r\n            window.location.hash = \"\";\r\n            this.mode(mode);\r\n        }\r\n    }\r\n\r\n    public undo(): void {\r\n        if (!this.canUndo()) return;\r\n        CommandStack.instance.undo();\r\n    }\r\n\r\n    public redo(): void {\r\n        if (!this.canRedo()) return;\r\n        CommandStack.instance.redo();\r\n    }\r\n}","import Damage from \"./Damage\";\r\nimport Equipment from \"./Equipment\";\r\nimport InventoryItem from \"./InventoryItem\";\r\nimport Merit from \"./Merit\";\r\nimport Note from \"./Note\";\r\nimport { randomInteger } from \"../utils\";\r\nimport CommandStack from \"../Command/CommandStack\";\r\nimport CollectionAddCommand from \"../Command/CollectionAddCommand\";\r\nimport CollectionRemoveCommand from \"../Command/CollectionRemoveCommand\";\r\nimport CollectionMoveCommand from \"../Command/CollectionMoveCommand\";\r\nimport ClearUsedCommand from \"../Command/ClearUsedCommand\";\r\nimport AttributeCommand from \"../Command/AttributeCommand\";\r\n\r\nexport default class Character {\r\n    public ghost: boolean = false;\r\n    public locked: KnockoutObservable<boolean> = ko.observable(true);\r\n\r\n    public name: KnockoutObservable<string>;\r\n    public player: KnockoutObservable<string>;\r\n    public age: KnockoutObservable<number>;\r\n    public vice: KnockoutObservable<string>;\r\n    public virtue: KnockoutObservable<string>;\r\n    public origins: KnockoutObservable<string>;\r\n    public gender: KnockoutObservable<string>;\r\n    public concept: KnockoutObservable<string>;\r\n    public chronicle: KnockoutObservable<string>;\r\n\r\n    public intelligence: KnockoutObservable<number>;\r\n    public strength: KnockoutObservable<number>;\r\n    public presence: KnockoutObservable<number>;\r\n    public wits: KnockoutObservable<number>;\r\n    public dexterity: KnockoutObservable<number>;\r\n    public manipulation: KnockoutObservable<number>;\r\n    public resolve: KnockoutObservable<number>;\r\n    public stamina: KnockoutObservable<number>;\r\n    public composure: KnockoutObservable<number>;\r\n\r\n    public academics: KnockoutObservable<number>;\r\n    public robotics: KnockoutObservable<number>;\r\n    public crafts: KnockoutObservable<number>;\r\n    public investigation: KnockoutObservable<number>;\r\n    public medicine: KnockoutObservable<number>;\r\n    public occult: KnockoutObservable<number>;\r\n    public politics: KnockoutObservable<number>;\r\n    public science: KnockoutObservable<number>;\r\n    \r\n    public athletics: KnockoutObservable<number>;\r\n    public brawl: KnockoutObservable<number>;\r\n    public drive: KnockoutObservable<number>;\r\n    public ranged: KnockoutObservable<number>;\r\n    public larceny: KnockoutObservable<number>;\r\n    public stealth: KnockoutObservable<number>;\r\n    public survival: KnockoutObservable<number>;\r\n    public weaponry: KnockoutObservable<number>;\r\n\r\n    public animalKen: KnockoutObservable<number>;\r\n    public empathy: KnockoutObservable<number>;\r\n    public expression: KnockoutObservable<number>;\r\n    public intimidation: KnockoutObservable<number>;\r\n    public persuasion: KnockoutObservable<number>;\r\n    public socialize: KnockoutObservable<number>;\r\n    public streetwise: KnockoutObservable<number>;\r\n    public subterfuge: KnockoutObservable<number>;\r\n\r\n    public merits: KnockoutObservableArray<Merit>;\r\n    public spells: KnockoutObservableArray<Merit>;\r\n    public flaws: KnockoutObservableArray<Merit>;\r\n\r\n    public size: KnockoutObservable<number>;\r\n    public speed: KnockoutComputed<number>;\r\n    public defense: KnockoutComputed<number>;\r\n    public armor: KnockoutObservable<number>;\r\n    public initiative: KnockoutComputed<number>;\r\n    public experience: KnockoutObservable<number>;\r\n    public morality: KnockoutObservable<number>;\r\n\r\n    public weapons: KnockoutObservableArray<Equipment>;\r\n    public equipment: KnockoutObservableArray<Equipment>;\r\n    public inventory: KnockoutObservableArray<InventoryItem>;\r\n\r\n    public notes: KnockoutObservableArray<Note>;\r\n\r\n    public health: KnockoutComputed<number>;\r\n    public damage: Damage;\r\n\r\n    public magic: KnockoutComputed<number>;\r\n    public usedMagic: KnockoutObservable<number>;\r\n\r\n    public willpower: KnockoutComputed<number>;\r\n    public usedWillpower: KnockoutObservable<number>;\r\n\r\n    public constructor(json: CharacterJson) {\r\n        this.name = ko.observable(json.name).extend({ lockable: this.locked, named: \"Name\" });\r\n        this.player = ko.observable(json.player).extend({ lockable: this.locked });\r\n        this.age = ko.observable(json.age).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.vice = ko.observable(json.vice).extend({ lockable: this.locked });\r\n        this.virtue = ko.observable(json.virtue).extend({ lockable: this.locked });\r\n        this.origins = ko.observable(json.origins).extend({ lockable: this.locked });\r\n        this.gender = ko.observable(json.gender).extend({ lockable: this.locked });\r\n        this.concept = ko.observable(json.concept).extend({ lockable: this.locked });\r\n        this.chronicle = ko.observable(json.chronicle).extend({ lockable: this.locked });\r\n\r\n        this.intelligence = ko.observable(json.intelligence).extend({ lockable: this.locked, named: \"Intelligence\" });\r\n        this.strength = ko.observable(json.strength).extend({ lockable: this.locked });\r\n        this.presence = ko.observable(json.presence).extend({ lockable: this.locked });\r\n        this.wits = ko.observable(json.wits).extend({ lockable: this.locked });\r\n        this.dexterity = ko.observable(json.dexterity).extend({ lockable: this.locked });\r\n        this.manipulation = ko.observable(json.manipulation).extend({ lockable: this.locked });\r\n        this.resolve = ko.observable(json.resolve).extend({ lockable: this.locked });\r\n        this.stamina = ko.observable(json.stamina).extend({ lockable: this.locked });\r\n        this.composure = ko.observable(json.composure).extend({ lockable: this.locked });\r\n\r\n        this.academics = ko.observable(json.academics).extend({ lockable: this.locked });\r\n        this.robotics = ko.observable(json.robotics).extend({ lockable: this.locked });\r\n        this.crafts = ko.observable(json.crafts).extend({ lockable: this.locked });\r\n        this.investigation = ko.observable(json.investigation).extend({ lockable: this.locked });\r\n        this.medicine = ko.observable(json.medicine).extend({ lockable: this.locked });\r\n        this.occult = ko.observable(json.occult).extend({ lockable: this.locked });\r\n        this.politics = ko.observable(json.politics).extend({ lockable: this.locked });\r\n        this.science = ko.observable(json.science).extend({ lockable: this.locked });\r\n\r\n        this.athletics = ko.observable(json.athletics).extend({ lockable: this.locked });\r\n        this.brawl = ko.observable(json.brawl).extend({ lockable: this.locked });\r\n        this.drive = ko.observable(json.drive).extend({ lockable: this.locked });\r\n        this.ranged = ko.observable(json.ranged).extend({ lockable: this.locked });\r\n        this.larceny = ko.observable(json.larceny).extend({ lockable: this.locked });\r\n        this.stealth = ko.observable(json.stealth).extend({ lockable: this.locked });\r\n        this.survival = ko.observable(json.survival).extend({ lockable: this.locked });\r\n        this.weaponry = ko.observable(json.weaponry).extend({ lockable: this.locked });\r\n\r\n        this.animalKen = ko.observable(json.animalKen).extend({ lockable: this.locked });\r\n        this.empathy = ko.observable(json.empathy).extend({ lockable: this.locked });\r\n        this.expression = ko.observable(json.expression).extend({ lockable: this.locked });\r\n        this.intimidation = ko.observable(json.intimidation).extend({ lockable: this.locked });\r\n        this.persuasion = ko.observable(json.persuasion).extend({ lockable: this.locked });\r\n        this.socialize = ko.observable(json.socialize).extend({ lockable: this.locked });\r\n        this.streetwise = ko.observable(json.streetwise).extend({ lockable: this.locked });\r\n        this.subterfuge = ko.observable(json.subterfuge).extend({ lockable: this.locked });\r\n\r\n        this.merits = ko.observableArray(json.merits.map(m => new Merit(m.name, m.value, this.locked)));\r\n        this.spells = ko.observableArray(json.spells.map(s => new Merit(s.name, s.value, this.locked)));\r\n        this.flaws = ko.observableArray(json.flaws.map(f => new Merit(f.name, f.value, this.locked)));\r\n\r\n        this.size = ko.observable(json.size).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n        this.speed = ko.computed(() => this.strength() + this.dexterity() + 5, this);\r\n        this.defense = ko.computed(() => Math.min(this.dexterity(), this.wits()), this);\r\n        this.armor = ko.observable(json.armor).extend({ numeric: { precision: 0 } }).extend({ lockable: this.locked });\r\n        this.initiative = ko.computed(() => this.dexterity() + this.composure(), this);\r\n        this.experience = ko.observable(json.experience).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.morality = ko.observable(json.morality).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n\r\n        this.weapons = ko.observableArray(json.weapons.map(w => new Equipment(w.name, w.description, this.locked)));\r\n        this.equipment = ko.observableArray(json.equipment.map(e => new Equipment(e.name, e.description, this.locked)));\r\n        this.inventory = ko.observableArray(json.inventory.map(i => new InventoryItem(i.name, i.description, i.quantity, this.locked)));\r\n\r\n        this.notes = ko.observableArray(json.notes.map(n => new Note(n, this.locked)));\r\n\r\n        this.health = ko.computed(() => this.stamina() + this.size(), this);\r\n        this.damage = new Damage(this.health, json.bashing, json.lethal, json.aggravated, this.locked);\r\n\r\n        this.magic = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedMagic = ko.observable(json.usedMagic || 0).extend({ lockable: this.locked });\r\n        this.magic.subscribe(val => {\r\n            if (this.usedMagic() > val) CommandStack.instance.executeWithPrevious(new AttributeCommand(this.usedMagic, val, this.usedMagic()));\r\n        }, this);\r\n\r\n        this.willpower = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedWillpower = ko.observable(json.usedWillpower || 0).extend({ lockable: this.locked });\r\n        this.willpower.subscribe(val => {\r\n            if (this.usedWillpower() > val) CommandStack.instance.executeWithPrevious(new AttributeCommand(this.usedWillpower, val, this.usedWillpower()));\r\n        }, this);\r\n    }\r\n\r\n    public static newCharacter(): Character {\r\n        return new Character({\r\n            name: randomName(),\r\n            player: \"\",\r\n            age: 0,\r\n            vice: \"\",\r\n            virtue: \"\",\r\n            origins: \"\",\r\n            gender: \"\",\r\n            concept: \"\",\r\n            chronicle: \"\",\r\n\r\n            intelligence: 1,\r\n            strength: 1,\r\n            presence: 1,\r\n            wits: 1,\r\n            dexterity: 1,\r\n            manipulation: 1,\r\n            resolve: 1,\r\n            stamina: 1,\r\n            composure: 1,\r\n\r\n            academics: 0,\r\n            robotics: 0,\r\n            crafts: 0,\r\n            investigation: 0,\r\n            medicine: 0,\r\n            occult: 0,\r\n            politics: 0,\r\n            science: 0,\r\n\r\n            athletics: 0,\r\n            brawl: 0,\r\n            drive: 0,\r\n            ranged: 0,\r\n            larceny: 0,\r\n            stealth: 0,\r\n            survival: 0,\r\n            weaponry: 0,\r\n\r\n            animalKen: 0,\r\n            empathy: 0,\r\n            expression: 0,\r\n            intimidation: 0,\r\n            persuasion: 0,\r\n            socialize: 0,\r\n            streetwise: 0,\r\n            subterfuge: 0,\r\n\r\n            merits: [],\r\n            spells: [],\r\n            flaws: [],\r\n\r\n            size: 5,\r\n            armor: 0,\r\n            experience: 0,\r\n            morality: 7,\r\n\r\n            weapons: [],\r\n            equipment: [],\r\n            inventory: [],\r\n\r\n            notes: []\r\n        });\r\n    }\r\n\r\n    public static fromJson(json: CharacterJson): Character {\r\n        return new Character(json);\r\n    }\r\n\r\n    public onComponentClick(_: any, e: Event): void {\r\n        const element = <HTMLElement>e.currentTarget;\r\n        element.getElementsByTagName(\"input\")[0].focus();\r\n    }\r\n\r\n    public newItem<T>(observableArray: KnockoutObservableArray<T>, constructor: { createLockable(locked: KnockoutObservable<boolean>): T}): () => void {\r\n        return () => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionAddCommand(observableArray, constructor.createLockable(this.locked)));\r\n        };\r\n    }\r\n\r\n    public removeItem<T>(observableArray: KnockoutObservableArray<T>): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionRemoveCommand(observableArray, item));\r\n        };\r\n    }\r\n\r\n    public moveItem<T>(observableArray: KnockoutObservableArray<T>, direction: number): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            const index = observableArray.indexOf(item);\r\n            const newIndex = index + direction;\r\n\r\n            if (newIndex < 0 || newIndex >= observableArray().length) return;\r\n\r\n            CommandStack.instance.execute(new CollectionMoveCommand(observableArray, item, newIndex, index));\r\n        };\r\n    }\r\n\r\n    public clearUsed(usedObservable: KnockoutObservable<number>): () => void {\r\n        return () => {\r\n            CommandStack.instance.execute(new ClearUsedCommand(usedObservable));\r\n        };\r\n    }\r\n\r\n    public toJson(): CharacterJson {\r\n        return {\r\n            name: this.name(),\r\n            player: this.player(),\r\n            age: this.age(),\r\n            vice: this.vice(),\r\n            virtue: this.virtue(),\r\n            origins: this.origins(),\r\n            gender: this.gender(),\r\n            concept: this.concept(),\r\n            chronicle: this.chronicle(),\r\n\r\n            intelligence: this.intelligence(),\r\n            wits: this.wits(),\r\n            resolve: this.resolve(),\r\n            strength: this.strength(),\r\n            dexterity: this.dexterity(),\r\n            stamina: this.stamina(),\r\n            presence: this.presence(),\r\n            manipulation: this.manipulation(),\r\n            composure: this.composure(),\r\n\r\n            bashing: this.damage.bashing(),\r\n            lethal: this.damage.lethal(),\r\n            aggravated: this.damage.aggravated(),\r\n            usedMagic: this.usedMagic(),\r\n            usedWillpower: this.usedWillpower(),\r\n\r\n            academics: this.academics(),\r\n            robotics: this.robotics(),\r\n            crafts: this.crafts(),\r\n            investigation: this.investigation(),\r\n            medicine: this.medicine(),\r\n            occult: this.occult(),\r\n            politics: this.politics(),\r\n            science: this.science(),\r\n\r\n            athletics: this.athletics(),\r\n            brawl: this.brawl(),\r\n            drive: this.drive(),\r\n            ranged: this.ranged(),\r\n            larceny: this.larceny(),\r\n            stealth: this.stealth(),\r\n            survival: this.survival(),\r\n            weaponry: this.weaponry(),\r\n\r\n            animalKen: this.animalKen(),\r\n            empathy: this.empathy(),\r\n            expression: this.expression(),\r\n            intimidation: this.intimidation(),\r\n            persuasion: this.persuasion(),\r\n            socialize: this.socialize(),\r\n            streetwise: this.streetwise(),\r\n            subterfuge: this.subterfuge(),\r\n\r\n            merits: this.merits().map(m => { return { name: m.name(), value: m.value() }; }),\r\n            spells: this.spells().map(s => { return { name: s.name(), value: s.value() }; }),\r\n            flaws: this.flaws().map(f => { return { name: f.name(), value: f.value() }; }),\r\n\r\n            size: this.size(),\r\n            armor: this.armor(),\r\n            experience: this.experience(),\r\n            morality: this.morality(),\r\n\r\n            weapons: this.weapons().map(w => { return { name: w.name(), description: w.description() }; }),\r\n            equipment: this.equipment().map(e => { return { name: e.name(), description: e.description() }; }),\r\n            inventory: this.inventory().map(i => { return { name: i.name(), description: i.description(), quantity: i.quantity() }; }),\r\n\r\n            notes: this.notes().map(n => n.value())\r\n        };\r\n    }\r\n}\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\nfunction randomName() {\r\n    const firstNameLength = randomInteger(5, 12);\r\n    const lastNameLength = randomInteger(5, 12);\r\n    let firstName = \"\";\r\n    let lastName = \"\";\r\n\r\n    for (let i = 0; i < firstNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        firstName += newLetter;\r\n    }\r\n\r\n    for (let i = 0; i < lastNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        lastName += newLetter;\r\n    }\r\n\r\n    return `${firstName} ${lastName}`;\r\n}\r\n\r\nexport type CharacterJson = {\r\n    name: string,\r\n    player: string,\r\n    age: number,\r\n    vice: string,\r\n    virtue: string,\r\n    origins: string,\r\n    gender: string,\r\n    concept: string,\r\n    chronicle: string,\r\n\r\n    intelligence: number,\r\n    strength: number,\r\n    presence: number,\r\n    wits: number,\r\n    dexterity: number,\r\n    manipulation: number,\r\n    resolve: number,\r\n    stamina: number,\r\n    composure: number,\r\n\r\n    academics: number,\r\n    robotics: number,\r\n    crafts: number,\r\n    investigation: number,\r\n    medicine: number,\r\n    occult: number,\r\n    politics: number,\r\n    science: number,\r\n\r\n    athletics: number,\r\n    brawl: number,\r\n    drive: number,\r\n    ranged: number,\r\n    larceny: number,\r\n    stealth: number,\r\n    survival: number,\r\n    weaponry: number,\r\n\r\n    animalKen: number,\r\n    empathy: number,\r\n    expression: number,\r\n    intimidation: number,\r\n    persuasion: number,\r\n    socialize: number,\r\n    streetwise: number,\r\n    subterfuge: number,\r\n\r\n    merits: Array<{ name: string, value: number }>,\r\n    spells: Array<{ name: string, value: number }>,\r\n    flaws: Array<{ name: string, value: number }>,\r\n\r\n    size: number,\r\n    armor: number,\r\n    experience: number,\r\n    morality: number,\r\n\r\n    weapons: Array<{ name: string, description: string }>,\r\n    equipment: Array<{ name: string, description: string }>,\r\n    inventory: Array<{ name: string, description: string, quantity: number }>,\r\n\r\n    notes: Array<string>,\r\n\r\n    bashing?: number,\r\n    lethal?: number,\r\n    aggravated?: number,\r\n\r\n    usedMagic?: number,\r\n    usedWillpower?: number\r\n};","import CommandStack from \"../Command/CommandStack\";\r\nimport AttributeCommand from \"../Command/AttributeCommand\";\r\nimport BatchCommand from \"../Command/BatchCommand\";\r\n\r\nexport default class Damage {\r\n    public totalHealth: KnockoutComputed<number>;\r\n    public bashing: KnockoutObservable<number>;\r\n    public lethal: KnockoutObservable<number>;\r\n    public aggravated: KnockoutObservable<number>;\r\n\r\n    public constructor(totalHealthObservable: KnockoutComputed<number>, bashing?: number, lethal?: number, aggravated?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.totalHealth = totalHealthObservable;\r\n        this.bashing = ko.observable(bashing || 0);\r\n        this.lethal = ko.observable(lethal || 0);\r\n        this.aggravated = ko.observable(aggravated || 0);\r\n\r\n        if (locked) {\r\n            this.bashing = this.bashing.extend({ lockable: locked });\r\n            this.lethal = this.lethal.extend({ lockable: locked });\r\n            this.aggravated = this.aggravated.extend({ lockable: locked });\r\n        }\r\n\r\n        totalHealthObservable.subscribe(val => {\r\n            let bashing = this.bashing();\r\n            let lethal = this.lethal();\r\n            let aggravated = this.aggravated();\r\n            while (bashing + lethal + aggravated > val) {\r\n                if (bashing > 0) {\r\n                    bashing--;\r\n                }\r\n                else if (lethal > 0) {\r\n                    lethal--;\r\n                }\r\n                else {\r\n                    aggravated--;\r\n                }\r\n            }\r\n            CommandStack.instance.executeWithPrevious(new BatchCommand(\r\n                new AttributeCommand(this.bashing, bashing, this.bashing()),\r\n                new AttributeCommand(this.lethal, lethal, this.lethal()),\r\n                new AttributeCommand(this.aggravated, aggravated, this.aggravated())\r\n            ));\r\n        }, this);\r\n    }\r\n\r\n    public anyEmpty(): boolean {\r\n        return this.bashing() + this.lethal() + this.aggravated() < this.totalHealth();\r\n    }\r\n\r\n    public addBashing(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.bashing, this.bashing() + 1, this.bashing()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addLethal(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.lethal, this.lethal() + 1, this.lethal())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addAggravated(): void {\r\n        if (this.anyEmpty()) {\r\n            CommandStack.instance.execute(new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated()));\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.bashing, this.bashing() - 1, this.bashing()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            CommandStack.instance.execute(new BatchCommand(\r\n                new AttributeCommand(this.lethal, this.lethal() - 1, this.lethal()),\r\n                new AttributeCommand(this.aggravated, this.aggravated() + 1, this.aggravated())\r\n            ));\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public clearAll(): void {\r\n        CommandStack.instance.execute(new BatchCommand(\r\n            new AttributeCommand(this.bashing, 0, this.bashing()),\r\n            new AttributeCommand(this.lethal, 0, this.lethal()),\r\n            new AttributeCommand(this.aggravated, 0, this.aggravated())\r\n        ));\r\n    }\r\n}","export default class Equipment {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n\r\n    public constructor(name?: string, description?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Equipment(null, null, locked);\r\n    }\r\n}","export default class InventoryItem {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n    public quantity: KnockoutObservable<number>;\r\n    public displayText: KnockoutComputed<string>;\r\n\r\n    public constructor(name?: string, description?: string, quantity?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n        this.quantity = ko.observable(quantity || 1);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n            this.quantity = this.quantity.extend({ lockable: locked });\r\n        }\r\n\r\n        this.displayText = ko.computed(this.getDisplayText, this);\r\n    }\r\n\r\n    public getDisplayText() : string {\r\n        return `${this.quantity()} ${this.name()}`;\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new InventoryItem(null, null, null, locked);\r\n    }\r\n}","export default class Merit {\r\n    public name: KnockoutObservable<string>;\r\n    public value: KnockoutObservable<number>;\r\n\r\n    public constructor(name?: string, value?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.value = ko.observable(value || 0);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Merit(null, null, locked);\r\n    }\r\n}","export default class Note {\r\n    public value: KnockoutObservable<string>;\r\n\r\n    public constructor(value?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.value = ko.observable(value || \"\");\r\n\r\n        if (locked) {\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Note(null, locked);\r\n    }\r\n}","import ICharacterRepository from \"./ICharacterRepository\";\r\nimport Character, { CharacterJson } from \"../Character\";\r\n\r\n$.cookie.json = true;\r\nconst characterCookiePrefix = \"_character-\";\r\nconst characterListCookieKey = \"_characters\";\r\nexport default class CookieCharacterRepository implements ICharacterRepository {\r\n    private _characterIds: number[];\r\n\r\n    public constructor() {\r\n        this._characterIds = [];\r\n    }\r\n\r\n    public loadCharacters(): Character[] {\r\n        const characters: CharacterJson[] = [];\r\n\r\n        this._characterIds = $.cookie(characterListCookieKey);\r\n        if (!this._characterIds) this._characterIds = [];\r\n\r\n        for (let characterId of this._characterIds) {\r\n            const key = `${characterCookiePrefix}${characterId}`;\r\n            characters.push($.cookie(key));\r\n        }\r\n\r\n        return characters.map(Character.fromJson);\r\n    }\r\n\r\n    public saveCharacters(characters: Character[]): boolean {\r\n        for (let oldId of this._characterIds) {\r\n            $.removeCookie(`${characterCookiePrefix}${oldId}`);\r\n        }\r\n        this._characterIds = [];\r\n\r\n        for (let i = 0; i < characters.length; i++) {\r\n            this._characterIds.push(i);\r\n            $.cookie(`${characterCookiePrefix}${i}`, characters[i].toJson());\r\n        }\r\n\r\n        $.cookie(characterListCookieKey, this._characterIds);\r\n\r\n        return true;\r\n    }\r\n}","import ICharacterRepository from \"./ICharacterRepository\";\r\nimport Character from \"../Character\";\r\n\r\n// This does nothing. It shouldn't actually be used when the project is finished.\r\nexport default class DummyCharacterRepository implements ICharacterRepository {\r\n    public loadCharacters(): Character[] { return []; }\r\n    public saveCharacters(characters: Character[]): boolean { return true; }\r\n}","import Character from \"../Character\";\r\nimport LocalStorageCharacterRepository from \"./LocalStorageCharacterRepository\";\r\nimport DummyCharacterRepository from \"./DummyCharacterRepository\";\r\nimport CookieCharacterRepository from \"./CookieCharacterRepository\";\r\n\r\nexport default interface ICharacterRepository {\r\n    loadCharacters(): Character[];\r\n    saveCharacters(characters: Character[]): boolean;\r\n}\r\n\r\nexport function getCharacterRepository(type: string, ...args: any[]): ICharacterRepository {\r\n    switch (type) {\r\n        case \"Dummy\": return new DummyCharacterRepository();\r\n        case \"LocalStorage\":\r\n            if (LocalStorageCharacterRepository.IsSupported) return new LocalStorageCharacterRepository();\r\n            else {\r\n                swal({\r\n                    title: `Local Storage Not Supported`,\r\n                    text: \"Your browser does not support local storage. This just means we have to use cookies to save your characters, which are not as safe as far as maintaining them. You should make sure to use the download button for each character before ending your session to ensure you have them backed up.\",\r\n                    icon: \"warning\",\r\n                    button: \"OK\",\r\n                    dangerMode: true\r\n                });\r\n            }\r\n            break;\r\n        // TODO: Maybe add a swal warning here.\r\n        case \"Cookie\": return new CookieCharacterRepository();\r\n    }\r\n\r\n    return new CookieCharacterRepository();\r\n}","import ICharacterRepository from \"./ICharacterRepository\";\r\nimport Character from \"../Character\";\r\n\r\nconst storageKey = \"characters\";\r\nexport default class LocalStorageCharacterRepository implements ICharacterRepository {\r\n    public loadCharacters(): Character[] {\r\n        return (JSON.parse(window.localStorage.getItem(storageKey)) || []).map(Character.fromJson);\r\n    }\r\n\r\n    public saveCharacters(characters: Character[]): boolean {\r\n        window.localStorage.setItem(\"characters\", JSON.stringify(characters.map(c => c.toJson())));\r\n        return true;\r\n    }\r\n\r\n    public static get IsSupported(): boolean {\r\n        const test = \"test\";\r\n        try {\r\n            window.localStorage.setItem(test, test);\r\n            window.localStorage.removeItem(test);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class AttributeCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _newValue: number;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>, newValue: number, oldValue: number) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public getType(): string { return \"AttributeCommand\"; }\r\n    public toString(): string {\r\n        return `${this._observable.getName()}: ${this._oldValue} => ${this._newValue}`;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class BatchCommand implements ICommand {\r\n    private _commands: ICommand[];\r\n\r\n    public constructor(...commands: ICommand[]) {\r\n        this._commands = commands.filter(command => !command.doesNothing());\r\n    }\r\n\r\n    public get commandCount(): number { return this._commands.length; }\r\n\r\n    public getType(): string { return \"BatchCommand\"; }\r\n\r\n    public getCommand(index: number): ICommand | null {\r\n        if (index < 0 || index >= this._commands.length) return null;\r\n\r\n        return this._commands[index];\r\n    }\r\n\r\n    public execute(): void {\r\n        for (let i = 0; i < this._commands.length; i++) this._commands[i].execute();\r\n    }\r\n\r\n    public undo(): void {\r\n        for (let i = this._commands.length - 1; i >= 0; i--) this._commands[i].undo();\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._commands.every(command => command.doesNothing());\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class ClearUsedCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>) {\r\n        this._observable = observable;\r\n        this._oldValue = observable();\r\n    }\r\n\r\n    public getType(): string { return \"ClearUsedCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable(0);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._oldValue === 0;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionAddCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _newItem: T;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, newItem: T) {\r\n        this._observable = observable;\r\n        this._newItem = newItem;\r\n    }\r\n\r\n    public getType(): string { return \"CollectionAddCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable.push(this._newItem);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.remove(this._newItem);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionMoveCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _item: T;\r\n    private _newIndex: number;\r\n    private _oldIndex: number;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, item: T, newIndex: number, oldIndex: number) {\r\n        this._observable = observable;\r\n        this._item = item;\r\n        this._newIndex = newIndex;\r\n        this._oldIndex = oldIndex;\r\n    }\r\n\r\n    public getType(): string { return \"CollectionMoveCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable.splice(this._oldIndex, 1);\r\n        this._observable.splice(this._newIndex, 0, this._item);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.splice(this._newIndex, 1);\r\n        this._observable.splice(this._oldIndex, 0, this._item);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newIndex === this._oldIndex;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionRemoveCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _item: T;\r\n    private _itemIndex: number;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, item: T) {\r\n        this._observable = observable;\r\n        this._item = item;\r\n        this._itemIndex = this._observable.indexOf(this._item);\r\n    }\r\n\r\n    public getType(): string { return \"CollectionRemoveCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable.remove(this._item);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.splice(this._itemIndex, 0, this._item);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\nimport BatchCommand from \"./BatchCommand\";\r\n\r\nexport default class CommandStack {\r\n    private static _instance: CommandStack;\r\n    \r\n    private _undoStack: KnockoutObservableArray<ICommand>;\r\n    private _redoStack: KnockoutObservableArray<ICommand>;\r\n    private _currentlyExecuting: boolean;\r\n\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n\r\n    private constructor() {\r\n        this._undoStack = ko.observableArray([]);\r\n        this._redoStack = ko.observableArray([]);\r\n        this._currentlyExecuting = false;\r\n\r\n        this.canUndo = ko.computed(() => this.undoLength > 0, this);\r\n        this.canRedo = ko.computed(() => this.redoLength > 0, this);\r\n    }\r\n\r\n    public static get instance(): CommandStack {\r\n        if (!CommandStack._instance) CommandStack._instance = new CommandStack();\r\n\r\n        return CommandStack._instance;\r\n    }\r\n\r\n    public get undoLength(): number { return this._undoStack().length; }\r\n    public get redoLength(): number { return this._redoStack().length; }\r\n\r\n    public getPreviousCommand(drillIntoBatch: boolean = false): ICommand {\r\n        let previousCommand = this._undoStack()[this.undoLength - 1];\r\n\r\n        if (!drillIntoBatch) return previousCommand;\r\n\r\n        while (previousCommand instanceof BatchCommand) {\r\n            previousCommand = previousCommand.getCommand(previousCommand.commandCount - 1);\r\n        }\r\n\r\n        return previousCommand;\r\n    }\r\n\r\n    // TODO: Maybe don't have this as singleton...\r\n    // Could have an instance for each character\r\n    // to preserve the stack across character selection\r\n    public reset(): void {\r\n        this._undoStack.removeAll();\r\n        this._redoStack.removeAll();\r\n    }\r\n\r\n    public execute(command: ICommand): void {\r\n        if (command.doesNothing()) return;\r\n\r\n        if (this._currentlyExecuting) {\r\n            window.setTimeout(() => this.execute(command), 1);\r\n            return;\r\n        }\r\n\r\n        this._currentlyExecuting = true;\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n        this._redoStack.removeAll();\r\n        this._currentlyExecuting = false;\r\n    }\r\n\r\n    public executeWithPrevious(command: ICommand): void {\r\n        if (command.doesNothing()) return;\r\n\r\n        if (this._currentlyExecuting) {\r\n            window.setTimeout(() => this.executeWithPrevious(command), 1);\r\n            return;\r\n        }\r\n\r\n        this._currentlyExecuting = true;\r\n        command.execute();\r\n        let previousCommand = this._undoStack.pop();\r\n        this._undoStack.push(new BatchCommand(previousCommand, command));\r\n        this._redoStack.removeAll();\r\n        this._currentlyExecuting = false;\r\n    }\r\n\r\n    public undo(): void {\r\n        if (this._undoStack().length === 0) return;\r\n        \r\n        const command = this._undoStack.pop();\r\n\r\n        command.undo();\r\n        this._redoStack.push(command);\r\n    }\r\n\r\n    public redo(): void {\r\n        if (this._redoStack().length === 0) return;\r\n\r\n        const command = this._redoStack.pop();\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n    }\r\n\r\n    public log(): void {\r\n        console.log(\"UNDO STACK:\");\r\n        console.log(this._undoStack());\r\n        console.log(\"REDO STACK:\");\r\n        console.log(this._redoStack());\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class TextInputCommand implements ICommand {\r\n    private _observable: KnockoutObservable<string>;\r\n    private _newValue: string;\r\n    private _oldValue: string;\r\n\r\n    public constructor(observable: KnockoutObservable<string>, newValue: string, oldValue: string) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public getType(): string { return \"TextInputCommand\"; }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void  {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import { randomFloat, randomInteger } from \"./utils\";\r\n\r\nexport default class Dice {\r\n    public dicePool: KnockoutObservable<number>;\r\n    public rollRounds: KnockoutObservableArray<Array<number>>;\r\n    public rollingInProgress: KnockoutObservable<boolean>;\r\n    public totalDiceSuccesses: KnockoutComputed<number>;\r\n    public totalDiceSuccessesDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        this.dicePool = ko.observable(1);\r\n        this.rollRounds = ko.observableArray([]);\r\n        this.rollingInProgress = ko.observable(false);\r\n        this.totalDiceSuccesses = ko.computed(() => {\r\n            if (this.rollingInProgress() || this.rollRounds().length === 0) return -1;\r\n\r\n            return this.rollRounds().reduce((total: number, r: Array<number>) => {\r\n                return total + r.reduce((total: number, d: number) => total + (d > 7 ? 1 : 0), 0);\r\n            }, 0);\r\n        }, this);\r\n        this.totalDiceSuccessesDisplay = ko.computed(() => {\r\n            return this.totalDiceSuccesses() >= 0 ? \"\" + this.totalDiceSuccesses() : \"???\";\r\n        }, this);\r\n    }\r\n\r\n    public incrementDicePool(amount: number): () => void {\r\n        return () => {\r\n            let newAmount = this.dicePool() + amount;\r\n            if (newAmount < 1) newAmount = 1;\r\n            this.dicePool(newAmount);\r\n        };\r\n    }\r\n\r\n    public rollDice(): void {\r\n        const roller = new RollState(this);\r\n        roller.beginRoll();\r\n    }\r\n}\r\n\r\nclass RollState {\r\n    private _diceObj: Dice;\r\n    private _currentRound: number;\r\n    private _currentDice: number;\r\n    private _currentRoundRolls: number;\r\n    private _currentRoundResults: Array<number>;\r\n    private _nextRoundRolls: number;\r\n    private _intervalHandle: number;\r\n\r\n    public constructor(diceObj: Dice) {\r\n        this._diceObj = diceObj;\r\n        this._currentRound = 0;\r\n        this._currentDice = 0;\r\n        this._currentRoundRolls = diceObj.dicePool();\r\n        this._currentRoundResults = [];\r\n        this._nextRoundRolls = 0;\r\n        this._intervalHandle = null;\r\n    }\r\n\r\n    public beginRoll(): void {\r\n        this._diceObj.rollingInProgress(true);\r\n        this._diceObj.rollRounds.removeAll();\r\n        for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n        this._diceObj.rollRounds.push(this._currentRoundResults);\r\n\r\n        this._intervalHandle = window.setInterval(() => {\r\n            const nextRoll = randomInteger(1, 11);\r\n            if (nextRoll === 10) {\r\n                this._nextRoundRolls++;\r\n                const diceContainer = document.getElementsByClassName(\"diceContainer\")[0];\r\n                const critMessage = document.createElement(\"div\");\r\n                critMessage.classList.add(\"crit-message\");\r\n                critMessage.innerText = \"Crit!\";\r\n                critMessage.id = \"critMessage\";\r\n                diceContainer.appendChild(critMessage);\r\n                window.setTimeout(() => diceContainer.removeChild(critMessage), 1010);\r\n            }\r\n            this._currentRoundResults[this._currentDice] = nextRoll;\r\n            this._diceObj.rollRounds.replace(this._diceObj.rollRounds()[this._currentRound], this._currentRoundResults);\r\n            this._currentDice++;\r\n\r\n            if (this._currentDice === this._currentRoundRolls) {\r\n                if (this._nextRoundRolls === 0) {\r\n                    window.clearInterval(this._intervalHandle);\r\n                    this._diceObj.rollingInProgress(false);\r\n                    const critMessage = document.getElementById(\"critMessage\");\r\n                    if (critMessage) {\r\n                        critMessage.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                else {\r\n                    this._currentRound++;\r\n                    this._currentRoundRolls = this._nextRoundRolls;\r\n                    this._nextRoundRolls = 0;\r\n                    this._currentDice = 0;\r\n                    this._currentRoundResults = [];\r\n                    for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n                    this._diceObj.rollRounds.push(this._currentRoundResults);\r\n                }\r\n            }\r\n        }, 100);\r\n    }\r\n}","const _keyboardCommands = new Map<string, () => void>();\r\nexport function registerKeyboardCommand(key: string, callback: () => void): void {\r\n    _keyboardCommands.set(key, callback);\r\n}\r\n\r\nwindow.addEventListener(\"keydown\", e => {\r\n    if (e.ctrlKey !== true) return;\r\n\r\n    for (let [key, callback] of _keyboardCommands.entries()) {\r\n        if (e.key === key) {\r\n            e.preventDefault();\r\n            callback();\r\n            return;\r\n        }\r\n    }\r\n});","import Application from \"./Application\";\r\nimport Equipment from \"./Character/Equipment\";\r\nimport InventoryItem from \"./Character/InventoryItem\";\r\nimport Merit from \"./Character/Merit\";\r\nimport Note from \"./Character/Note\";\r\nimport { applyCustomKnockoutCode } from \"./utils\";\r\n\r\napplyCustomKnockoutCode();\r\n\r\nconst constructors = {\r\n    Equipment: Equipment,\r\n    InventoryItem: InventoryItem,\r\n    Merit: Merit,\r\n    Note: Note\r\n};\r\nObject.defineProperty(window, \"constructors\", { value: constructors });\r\n\r\nconst app = new Application();\r\nko.applyBindings(app);\r\n\r\n// Exposing the view model to the global state in case manual changes need to be applied\r\nObject.defineProperty(window, \"app\", { value: app });\r\n\r\nfunction toggleTooltips(enable: boolean): void {\r\n    if (enable) $(\"[data-toggle='tooltip']\").tooltip();\r\n    else $(\"[data-toggle='tooltip']\").tooltip(\"dispose\");\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    toggleTooltips(window.outerWidth >= 992);\r\n});\r\ntoggleTooltips(window.outerWidth >= 992);","import Damage from \"./Character/Damage\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\nimport AttributeCommand from \"./Command/AttributeCommand\";\r\nimport TextInputCommand from \"./Command/TextInputCommand\";\r\nimport MenuBar from \"./MenuBar\";\r\n\r\nexport function randomInteger(minInclusive = 0, maxExclusive = 10): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function randomFloat(minInclusive = 0, maxExclusive = 1): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.random() * (maxExclusive - minInclusive) + minInclusive;\r\n}\r\n\r\nconst _observableNameMap = new Map<KnockoutObservable<any>, string>();\r\nexport function applyCustomKnockoutCode() {\r\n    applyKnockoutBindings();\r\n    applyKnockoutExtenders();\r\n    applyKnockoutCustomFunctions();\r\n}\r\n\r\nfunction applyKnockoutBindings() {\r\n    // ko.bindingHandlers.menuBar = {\r\n    //     init: (element: HTMLElement, valueAccessor: () => MenuBar) => {\r\n    //         const menuBar = valueAccessor();\r\n    //         for (let menu of menuBar.getMenus()) {\r\n    //             const dropdownLi = document.createElement(\"li\");\r\n    //             dropdownLi.classList.add(\"nav-item\");\r\n    //             dropdownLi.classList.add(\"dropdown\");\r\n\r\n    //             const headerLink = document.createElement(\"a\");\r\n    //             headerLink.classList.add(\"nav-link\");\r\n    //             headerLink.classList.add(\"dropdown-toggle\");\r\n    //             headerLink.href = \"#\";\r\n    //             headerLink.dataset.toggle = \"dropdown\";\r\n    //             headerLink.innerText = menu.text;\r\n\r\n    //             const menuContainer = document.createElement(\"div\");\r\n    //             menuContainer.classList.add(\"dropdown-menu\");\r\n\r\n    //             for (let menuOption of menu.getMenuOptions()) {\r\n    //                 const optionLink = document.createElement(\"a\");\r\n    //                 optionLink.classList.add(\"dropdown-item\");\r\n    //                 if (!menuOption.visible()) optionLink.classList.add(\"disabled\");\r\n    //                 optionLink.href = \"#\";\r\n    //                 optionLink.innerText = menuOption.text;\r\n    //                 optionLink.addEventListener(\"click\", () => {\r\n    //                     if (menuOption.visible()) menuOption.callback();\r\n    //                 });\r\n\r\n    //                 menuContainer.appendChild(optionLink);\r\n\r\n    //                 menuOption.visible.subscribe(newVal => {\r\n    //                     optionLink.classList.toggle(\"disabled\", !newVal);\r\n    //                 });\r\n    //             }\r\n\r\n    //             dropdownLi.appendChild(headerLink);\r\n    //             dropdownLi.appendChild(menuContainer);\r\n    //             element.appendChild(dropdownLi);\r\n    //         }\r\n    //     }//,\r\n    //     // update: (element: HTMLElement, valueAccessor: () => KnockoutObservable<MenuBar>) => {\r\n    //     //     // element.innerHTML = \"\";\r\n            \r\n    //     // }\r\n    // }\r\n\r\n    ko.bindingHandlers.dice = {\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservableArray<Array<number>>) => {\r\n            const rollRounds = valueAccessor()();\r\n            if (rollRounds.length === 0) {\r\n                element.innerHTML = \"\";\r\n                return;\r\n            }\r\n    \r\n            let divs = element.getElementsByClassName(\"dice-round\");\r\n            if (divs.length !== rollRounds.length) {\r\n                const newRound = document.createElement(\"div\");\r\n                newRound.classList.add(\"dice-round\");\r\n                const rolls = rollRounds[rollRounds.length - 1];\r\n                for (let i = 0; i < rolls.length; i++) {\r\n                    const span = document.createElement(\"span\");\r\n                    const delay = randomFloat(0, 0.5);\r\n                    span.style.animation = `rollingDice 0.5s linear -${delay}s infinite alternate`;\r\n                    span.classList.add(\"dice\");\r\n                    newRound.appendChild(span);\r\n                }\r\n                element.appendChild(newRound);\r\n                divs = element.getElementsByClassName(\"dice-round\");\r\n            }\r\n    \r\n            for (let i = 0; i < rollRounds.length; i++) {\r\n                const rolls = rollRounds[i];\r\n                const spans = divs[i].getElementsByClassName(\"dice\");\r\n                for (let j = 0; j < rolls.length; j++) {\r\n                    const roll = rolls[j];\r\n                    const span = <HTMLSpanElement>spans[j];\r\n    \r\n                    if (roll !== -1) {\r\n                        span.style.animation = null;\r\n                        span.style.backgroundImage = `url('images/dice-${roll}.png')`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.damageDisplay = {\r\n        init: (element: HTMLElement) => {\r\n            for (let i = 0; i < 15; i++) {\r\n                const span = document.createElement(\"span\");\r\n                span.classList.add(\"damage\");\r\n                span.classList.add(\"none\");\r\n                element.appendChild(span);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => Damage) => {\r\n            const damageObj = valueAccessor();\r\n            const spans = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < spans.length; i++) {\r\n                if (i < damageObj.aggravated()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.add(\"aggravated\");\r\n                }\r\n                else if (i - damageObj.aggravated() < damageObj.lethal()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"lethal\");\r\n                }\r\n                else if (i - damageObj.aggravated() - damageObj.lethal() < damageObj.bashing()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"bashing\");\r\n                }\r\n                else {\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"none\");\r\n                }\r\n    \r\n                if (i < damageObj.totalHealth()) {\r\n                    spans[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else {\r\n                    spans[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.attribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, canClear?: boolean }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                dot.classList.add(\"pointer\");\r\n                dot.dataset.toggle = \"tooltip\";\r\n                dot.title = \"\" + (i + 1);\r\n                $(dot).tooltip();\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n    \r\n            const canClear = valueAccessor().canClear;\r\n            if (canClear === true || typeof canClear === \"undefined\") {\r\n                const clearDot = document.createElement(\"div\");\r\n                clearDot.classList.add(\"clear-dot\");\r\n                clearDot.innerHTML = \"&times;\";\r\n                clearDot.dataset.toggle = \"tooltip\";\r\n                clearDot.title = \"Clear\";\r\n                clearDot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, 0, valueAccessor().value()));\r\n                });\r\n                element.appendChild(clearDot);\r\n                $(clearDot).tooltip();\r\n            }\r\n    \r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                element.appendChild(dot);\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByClassName(\"attribute-dot\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                const dot = <HTMLSpanElement>dots[i];\r\n                dot.style.backgroundColor = null;\r\n                dot.style.borderColor = null;\r\n                if (i < value) {\r\n                    dot.style.backgroundColor = \"var(--body-color)\";\r\n                    dot.style.borderColor = \"var(--body-color)\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.readOnlyAttribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, hideUnfilled?: boolean }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                dots[i].classList.remove(\"filled\");\r\n                if (i < value) {\r\n                    dots[i].classList.add(\"filled\");\r\n                    dots[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else if (valueAccessor().hideUnfilled) {\r\n                    dots[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.used = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < 12; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const used = valueAccessor().value();\r\n            const total = valueAccessor().total();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                if (i < used) dots[i].classList.add(\"filled-red\");\r\n                else dots[i].classList.remove(\"filled-red\");\r\n    \r\n                if (i < total) dots[i].classList.remove(\"HIDDEN\");\r\n                else dots[i].classList.add(\"HIDDEN\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.focusOnCreation = {\r\n        init: (element: HTMLInputElement | HTMLTextAreaElement) => {\r\n            window.setTimeout(() => {\r\n                if (element.value) return;\r\n                element.focus();\r\n            }, 1);\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.contextMenu = {\r\n        init: (element: HTMLElement, valueAccessor: () => () => void) => {\r\n            element.addEventListener(\"contextmenu\", e => {\r\n                e.preventDefault();\r\n                valueAccessor()();\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.undoableTextInput = {\r\n        init: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            const inputElement = <HTMLInputElement>element;\r\n            inputElement.addEventListener(\"change\", () => {\r\n                const oldValue = valueAccessor()();\r\n                const newValue = inputElement.value;\r\n                if (oldValue === newValue) return;\r\n\r\n                valueAccessor()(newValue);\r\n                if (valueAccessor()() === oldValue) return;\r\n                valueAccessor()(oldValue);\r\n\r\n                CommandStack.instance.execute(new TextInputCommand(valueAccessor(), newValue, oldValue));\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            (<HTMLInputElement>element).value = valueAccessor()();\r\n        }\r\n    };\r\n}\r\nfunction applyKnockoutExtenders() {\r\n    ko.extenders.named = <T>(target: KnockoutObservable<T>, name: string) => {\r\n        // TODO: This requires that the `named` extension be the last one listed.\r\n        // It's messy and also inefficient because there will be multiple instances\r\n        // of the same observable property on a character equal to the number of\r\n        // characters the user has. I will need to come up with a different way,\r\n        // but for now this works as a proof of concept.\r\n        _observableNameMap.set(target, name);\r\n        return target;\r\n    };\r\n\r\n    ko.extenders.lockable = <T>(target: KnockoutObservable<T>, locked: KnockoutObservable<boolean>) => {\r\n        const result = ko.pureComputed({\r\n            read: target,\r\n            write: (newValue: T) => {\r\n                if (locked()) {\r\n                    target.notifySubscribers(target());\r\n                }\r\n                else {\r\n                    target(newValue);\r\n                    target.notifySubscribers(newValue);\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        return result;\r\n    };\r\n    \r\n    ko.extenders.numeric = (target: KnockoutObservable<number>, args: { precision?: number, min?: number, max?: number }) => {\r\n        const precision = args.precision || 0;\r\n        const min = args.min || -Infinity;\r\n        const max = args.max || Infinity;\r\n    \r\n        // Create a writeable computed observable to intercept writes to our observable\r\n        const result = ko.pureComputed({\r\n            read: target, // Always return the original observable's value\r\n            write: (newValue: number) => {\r\n                const current = target();\r\n                const roundingMultiplier = Math.pow(10, precision);\r\n                const newValueAsNum = isNaN(newValue) ? 0 : +newValue;\r\n                let valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\r\n                if (valueToWrite < min) valueToWrite = min;\r\n                else if (valueToWrite > max) valueToWrite = max;\r\n    \r\n                // Only write if it changed\r\n                if (valueToWrite !== current) {\r\n                    target(valueToWrite);\r\n                }\r\n                else {\r\n                    // If the rounded value is the same, but a different value was written,\r\n                    // force a notification for the current field\r\n                    if (newValue !== current) {\r\n                        target.notifySubscribers(valueToWrite);\r\n                    }\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        // Initialize with current value to make sure it is rounded appropriately\r\n        result(target());\r\n    \r\n        // Return the new computed observable\r\n        return result;\r\n    };\r\n}\r\nfunction applyKnockoutCustomFunctions() {\r\n    ko.subscribable.fn.getName = function () {\r\n        return _observableNameMap.get(this);\r\n    };\r\n}"]}