{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/Application.ts","src/ts/Character/Character.ts","src/ts/Character/Damage.ts","src/ts/Character/Equipment.ts","src/ts/Character/InventoryItem.ts","src/ts/Character/Merit.ts","src/ts/Character/Note.ts","src/ts/Command/AttributeCommand.ts","src/ts/Command/CollectionAddCommand.ts","src/ts/Command/CollectionRemoveCommand.ts","src/ts/Command/CommandStack.ts","src/ts/Command/TextInputCommand.ts","src/ts/Dice.ts","src/ts/main.ts","src/ts/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Character_1","Dice_1","CommandStack_1","Application","prototype","toggleClock","this","showClock","goBack","mode","_previousSection","window","location","hash","newCharacter","newChar","default","locked","characters","push","selectCharacter","character","charIndex","indexOf","characterId","instance","reset","deleteCharacter","confirm","name","id","remove","saveCharacters","localStorage","setItem","JSON","stringify","realCharacters","map","toJson","alert","downloadCharacter","json","dl","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","uploadCharacter","_this","ul","type","accept","addEventListener","file","files","reader","FileReader","onload","target","result","fromJson","parse","readAsText","toggleCharacterLock","switchMode","getElementById","undo","canUndo","redo","canRedo","savedCharacters","getItem","unshift","ghost","ko","observable","observableArray","computed","filter","dice","lockButtonClass","lockButtonIcon","currentTime","Date","currentTimeDisplay","time","hours","getHours","minutes","getMinutes","seconds","getSeconds","suffix","setInterval","ctrlKey","key","preventDefault","substring","$domElement","$","scrollTop","offset","top","Damage_1","Equipment_1","InventoryItem_1","Merit_1","Note_1","utils_1","CollectionAddCommand_1","CollectionRemoveCommand_1","Character","firstNameLength","randomInteger","lastNameLength","firstName","lastName","newLetter","alphabet","charAt","toUpperCase","randomName","player","age","vice","virtue","origins","gender","concept","chronicle","intelligence","strength","presence","wits","dexterity","manipulation","resolve","stamina","composure","academics","robotics","crafts","investigation","medicine","occult","politics","science","athletics","brawl","drive","ranged","larceny","stealth","survival","weaponry","animalKen","empathy","expression","intimidation","persuasion","socialize","streetwise","subterfuge","merits","spells","flaws","size","armor","experience","morality","weapons","equipment","inventory","notes","onComponentClick","_","currentTarget","getElementsByTagName","focus","newItem","constructor","execute","createLockable","removeItem","item","moveItem","direction","index","newIndex","splice","clearUsed","usedObservable","bashing","damage","lethal","aggravated","usedMagic","usedWillpower","m","value","s","w","description","quantity","extend","lockable","numeric","precision","min","max","speed","defense","Math","initiative","health","magic","subscribe","val","willpower","Damage","anyEmpty","totalHealth","addBashing","addLethal","addAggravated","clearAll","totalHealthObservable","Equipment","InventoryItem","getDisplayText","displayText","Merit","Note","AttributeCommand","_observable","_newValue","_oldValue","doesNothing","newValue","oldValue","CollectionAddCommand","_newItem","CollectionRemoveCommand","_item","_itemIndex","CommandStack","Object","defineProperty","_instance","_undoStack","removeAll","_redoStack","command","pop","TextInputCommand","Dice","incrementDicePool","amount","newAmount","dicePool","rollDice","RollState","beginRoll","rollRounds","rollingInProgress","totalDiceSuccesses","reduce","total","d","totalDiceSuccessesDisplay","_diceObj","_currentRoundRolls","_currentRoundResults","_intervalHandle","nextRoll","_nextRoundRolls","diceContainer_1","getElementsByClassName","critMessage_1","classList","add","innerText","setTimeout","_currentDice","replace","_currentRound","clearInterval","critMessage","diceObj","Application_1","applyCustomKnockoutCode","constructors","app","toggleTooltips","enable","tooltip","applyBindings","outerWidth","AttributeCommand_1","TextInputCommand_1","randomFloat","minInclusive","maxExclusive","_a","random","floor","bindingHandlers","update","element","valueAccessor","divs","newRound","rolls","span","delay","animation","spans","j","roll","backgroundImage","innerHTML","damageDisplay","init","damageObj","attribute","dots","dot","dataset","toggle","title","forEach","canClear","clearDot","backgroundColor","borderColor","readOnlyAttribute","hideUnfilled","used","focusOnCreation","contextMenu","undoableTextInput","inputElement","extenders","pureComputed","read","write","notifySubscribers","notify","args","Infinity","current","roundingMultiplier","pow","newValueAsNum","isNaN","valueToWrite","round"],"mappings":"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","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Character from \"./Character/Character\";\r\nimport Dice from \"./Dice\";\r\nimport swal from \"sweetalert\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\n\r\nexport default class Application {\r\n    public mode: KnockoutObservable<string>;\r\n    public characterId: KnockoutObservable<number>;\r\n    public characters: KnockoutObservableArray<Character>;\r\n    public realCharacters: KnockoutComputed<Array<Character>>;\r\n    public character: KnockoutComputed<Character>;\r\n    public dice: Dice;\r\n    public lockButtonClass: KnockoutComputed<string>;\r\n    public lockButtonIcon: KnockoutComputed<string>;\r\n    private _previousSection: string;\r\n    public showClock: KnockoutObservable<boolean>;\r\n    public currentTime: KnockoutObservable<Date>;\r\n    public currentTimeDisplay: KnockoutComputed<string>;\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n\r\n    public constructor() {\r\n        const savedCharacters: Array<Character> = (JSON.parse(window.localStorage.getItem(\"characters\")) || []).map(Character.fromJson);\r\n        savedCharacters.unshift(Character.newCharacter());\r\n        savedCharacters[0].ghost = true;\r\n\r\n        this.mode = ko.observable(\"list\");\r\n        this.characterId = ko.observable(0);\r\n        this.characters = ko.observableArray(savedCharacters);\r\n        this.realCharacters = ko.computed(() => this.characters().filter(c => !c.ghost), this);\r\n        this.character = ko.computed(() => this.characters()[this.characterId()], this);\r\n        this.dice = new Dice();\r\n        this.lockButtonClass = ko.computed(() => this.character().locked() ? \"btn-danger\" : \"btn-outline-success\", this);\r\n        this.lockButtonIcon = ko.computed(() => this.character().locked() ? \"fas fa-lock\" : \"fas fa-lock-open\", this);\r\n        this._previousSection = null;\r\n        this.showClock = ko.observable(false);\r\n        this.currentTime = ko.observable(new Date());\r\n\r\n        this.currentTimeDisplay = ko.computed(() => {\r\n            const time = this.currentTime();\r\n            let hours = time.getHours();\r\n            const minutes = time.getMinutes();\r\n            const seconds = time.getSeconds();\r\n            const suffix = hours < 12 ? \"AM\" : \"PM\";\r\n            const minutePrefix = minutes < 10 ? \"0\" : \"\";\r\n            const secondPrefix = seconds < 10 ? \"0\" : \"\";\r\n            if (hours > 12) hours -= 12;\r\n            return `${hours}:${minutePrefix}${minutes}:${secondPrefix}${seconds} ${suffix}`;\r\n        }, this);\r\n\r\n        this.canUndo = ko.computed(() => CommandStack.instance.canUndo() && !this.character().locked(), this);\r\n        this.canRedo = ko.computed(() => CommandStack.instance.canRedo() && !this.character().locked(), this);\r\n\r\n        window.setInterval(() => {\r\n            this.currentTime(new Date());\r\n        }, 1000);\r\n\r\n        window.addEventListener(\"keydown\", e => {\r\n            if (e.ctrlKey !== true) return;\r\n\r\n            switch (e.key) {\r\n                case \"s\":\r\n                    e.preventDefault();\r\n                    this.saveCharacters();\r\n                    break;\r\n                case \"z\":\r\n                    e.preventDefault();\r\n                    this.undo();\r\n                    break;\r\n                case \"Z\":\r\n                    e.preventDefault();\r\n                    this.redo();\r\n                    break;\r\n            }\r\n        });\r\n\r\n        window.addEventListener(\"hashchange\", e => {\r\n            const hash = window.location.hash.substring(1);\r\n            if (!hash) return;\r\n\r\n            var offset = 80; // TODO: Don't hardcode this maybe?\r\n            var $domElement = $(`#${hash}`);\r\n            $(window).scrollTop($domElement.offset().top - offset);\r\n        });\r\n    }\r\n\r\n    public toggleClock(): void {\r\n        this.showClock(!this.showClock());\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.mode() === \"sheet\") this.mode(\"list\");\r\n        else {\r\n            this.mode(\"sheet\");\r\n\r\n            if (this._previousSection) window.location.hash = this._previousSection;\r\n        }\r\n    }\r\n\r\n    public newCharacter(): void {\r\n        const newChar = Character.newCharacter();\r\n        newChar.locked(false);\r\n        this.characters.push(newChar);\r\n        this.selectCharacter(newChar);\r\n    }\r\n\r\n    public selectCharacter(character: Character): void {\r\n        const charIndex = this.characters.indexOf(character);\r\n        if (this.characterId() !== charIndex) {\r\n            this.characterId(charIndex);\r\n            CommandStack.instance.reset();\r\n        }\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public deleteCharacter(character: Character): void {\r\n        // swal({\r\n        //     title: `Delete ${this.character().name()}`,\r\n        //     text: \"Are you sure? (As long as you don't save, your character won't be gone.)\",\r\n        //     icon: \"warning\",\r\n        //     buttons: [\"Cancel\", \"Delete\"],\r\n        //     dangerMode: true\r\n        // })\r\n        // .then((willDelete: boolean) => {\r\n        //     if (willDelete) {\r\n        //         const id = this.characterId();\r\n        //         this.characterId(0);\r\n        //         this.characters.remove(this.characters()[id]);\r\n        //         this.mode(\"list\");\r\n        //     }\r\n        // });\r\n        if (this.character().locked()) return;\r\n        if (confirm(`Are you sure you want to delete ${this.character().name()}? (As long as you don't save, your character won't be gone.)`)) {\r\n            const id = this.characterId();\r\n            this.characterId(0);\r\n            this.characters.remove(this.characters()[id]);\r\n            this.mode(\"list\");\r\n        }\r\n    }\r\n\r\n    public saveCharacters(): void {\r\n        window.localStorage.setItem(\"characters\", JSON.stringify(this.realCharacters().map(c => c.toJson())));\r\n        // swal(\"Characters saved successfully!\", {\r\n        //     buttons: [],\r\n        //     timer: 1000,\r\n        //     icon: \"success\"\r\n        // });\r\n        alert(\"Characters saved successfully!\");\r\n    }\r\n\r\n    public downloadCharacter(): void {\r\n        const json = JSON.stringify(this.character().toJson());\r\n\r\n        const dl = document.createElement(\"a\");\r\n        dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${encodeURIComponent(json)}`);\r\n        dl.setAttribute(\"download\", `${this.character().name()}.json`);\r\n\r\n        dl.style.display = \"none\";\r\n        document.body.appendChild(dl);\r\n\r\n        dl.click();\r\n\r\n        document.body.removeChild(dl);\r\n    }\r\n\r\n    public uploadCharacter(): void {\r\n        const ul = document.createElement(\"input\");\r\n        ul.type = \"file\";\r\n        ul.accept = \".json\";\r\n        ul.style.display = \"none\";\r\n\r\n        ul.addEventListener(\"change\", e => {\r\n            const file = ul.files[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const json = e.target.result;\r\n                this.characters.push(Character.fromJson(JSON.parse(json)));\r\n                this.characterId(this.characters().length - 1);\r\n                this.mode(\"sheet\");\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n\r\n        document.body.appendChild(ul);\r\n\r\n        ul.click();\r\n\r\n        document.body.removeChild(ul);\r\n    }\r\n\r\n    public toggleCharacterLock(): void {\r\n        const character = this.character();\r\n        character.locked(!character.locked());\r\n    }\r\n\r\n    public switchMode(mode: string): () => void {\r\n        return () => {\r\n            if (this.mode() !== \"list\" && document.getElementById(mode)) {\r\n                this._previousSection = mode;\r\n            }\r\n            else this._previousSection = null;\r\n\r\n            window.location.hash = \"\";\r\n            this.mode(mode);\r\n        }\r\n    }\r\n\r\n    public undo(): void {\r\n        if (!this.canUndo()) return;\r\n        CommandStack.instance.undo();\r\n    }\r\n\r\n    public redo(): void {\r\n        if (!this.canRedo()) return;\r\n        CommandStack.instance.redo();\r\n    }\r\n}","import Damage from \"./Damage\";\r\nimport Equipment from \"./Equipment\";\r\nimport InventoryItem from \"./InventoryItem\";\r\nimport Merit from \"./Merit\";\r\nimport Note from \"./Note\";\r\nimport { randomInteger } from \"../utils\";\r\nimport CommandStack from \"../Command/CommandStack\";\r\nimport CollectionAddCommand from \"../Command/CollectionAddCommand\";\r\nimport CollectionRemoveCommand from \"../Command/CollectionRemoveCommand\";\r\n\r\nexport default class Character {\r\n    public ghost: boolean = false;\r\n    public locked: KnockoutObservable<boolean> = ko.observable(true);\r\n\r\n    public name: KnockoutObservable<string>;\r\n    public player: KnockoutObservable<string>;\r\n    public age: KnockoutObservable<number>;\r\n    public vice: KnockoutObservable<string>;\r\n    public virtue: KnockoutObservable<string>;\r\n    public origins: KnockoutObservable<string>;\r\n    public gender: KnockoutObservable<string>;\r\n    public concept: KnockoutObservable<string>;\r\n    public chronicle: KnockoutObservable<string>;\r\n\r\n    public intelligence: KnockoutObservable<number>;\r\n    public strength: KnockoutObservable<number>;\r\n    public presence: KnockoutObservable<number>;\r\n    public wits: KnockoutObservable<number>;\r\n    public dexterity: KnockoutObservable<number>;\r\n    public manipulation: KnockoutObservable<number>;\r\n    public resolve: KnockoutObservable<number>;\r\n    public stamina: KnockoutObservable<number>;\r\n    public composure: KnockoutObservable<number>;\r\n\r\n    public academics: KnockoutObservable<number>;\r\n    public robotics: KnockoutObservable<number>;\r\n    public crafts: KnockoutObservable<number>;\r\n    public investigation: KnockoutObservable<number>;\r\n    public medicine: KnockoutObservable<number>;\r\n    public occult: KnockoutObservable<number>;\r\n    public politics: KnockoutObservable<number>;\r\n    public science: KnockoutObservable<number>;\r\n    \r\n    public athletics: KnockoutObservable<number>;\r\n    public brawl: KnockoutObservable<number>;\r\n    public drive: KnockoutObservable<number>;\r\n    public ranged: KnockoutObservable<number>;\r\n    public larceny: KnockoutObservable<number>;\r\n    public stealth: KnockoutObservable<number>;\r\n    public survival: KnockoutObservable<number>;\r\n    public weaponry: KnockoutObservable<number>;\r\n\r\n    public animalKen: KnockoutObservable<number>;\r\n    public empathy: KnockoutObservable<number>;\r\n    public expression: KnockoutObservable<number>;\r\n    public intimidation: KnockoutObservable<number>;\r\n    public persuasion: KnockoutObservable<number>;\r\n    public socialize: KnockoutObservable<number>;\r\n    public streetwise: KnockoutObservable<number>;\r\n    public subterfuge: KnockoutObservable<number>;\r\n\r\n    public merits: KnockoutObservableArray<Merit>;\r\n    public spells: KnockoutObservableArray<Merit>;\r\n    public flaws: KnockoutObservableArray<Merit>;\r\n\r\n    public size: KnockoutObservable<number>;\r\n    public speed: KnockoutComputed<number>;\r\n    public defense: KnockoutComputed<number>;\r\n    public armor: KnockoutObservable<number>;\r\n    public initiative: KnockoutComputed<number>;\r\n    public experience: KnockoutObservable<number>;\r\n    public morality: KnockoutObservable<number>;\r\n\r\n    public weapons: KnockoutObservableArray<Equipment>;\r\n    public equipment: KnockoutObservableArray<Equipment>;\r\n    public inventory: KnockoutObservableArray<InventoryItem>;\r\n\r\n    public notes: KnockoutObservableArray<Note>;\r\n\r\n    public health: KnockoutComputed<number>;\r\n    public damage: Damage;\r\n\r\n    public magic: KnockoutComputed<number>;\r\n    public usedMagic: KnockoutObservable<number>;\r\n\r\n    public willpower: KnockoutComputed<number>;\r\n    public usedWillpower: KnockoutObservable<number>;\r\n\r\n    public constructor(json: CharacterJson) {\r\n        this.name = ko.observable(json.name).extend({ lockable: this.locked });\r\n        this.player = ko.observable(json.player).extend({ lockable: this.locked });\r\n        this.age = ko.observable(json.age).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.vice = ko.observable(json.vice).extend({ lockable: this.locked });\r\n        this.virtue = ko.observable(json.virtue).extend({ lockable: this.locked });\r\n        this.origins = ko.observable(json.origins).extend({ lockable: this.locked });\r\n        this.gender = ko.observable(json.gender).extend({ lockable: this.locked });\r\n        this.concept = ko.observable(json.concept).extend({ lockable: this.locked });\r\n        this.chronicle = ko.observable(json.chronicle).extend({ lockable: this.locked });\r\n\r\n        this.intelligence = ko.observable(json.intelligence).extend({ lockable: this.locked });\r\n        this.strength = ko.observable(json.strength).extend({ lockable: this.locked });\r\n        this.presence = ko.observable(json.presence).extend({ lockable: this.locked });\r\n        this.wits = ko.observable(json.wits).extend({ lockable: this.locked });\r\n        this.dexterity = ko.observable(json.dexterity).extend({ lockable: this.locked });\r\n        this.manipulation = ko.observable(json.manipulation).extend({ lockable: this.locked });\r\n        this.resolve = ko.observable(json.resolve).extend({ lockable: this.locked });\r\n        this.stamina = ko.observable(json.stamina).extend({ lockable: this.locked });\r\n        this.composure = ko.observable(json.composure).extend({ lockable: this.locked });\r\n\r\n        this.academics = ko.observable(json.academics).extend({ lockable: this.locked });\r\n        this.robotics = ko.observable(json.robotics).extend({ lockable: this.locked });\r\n        this.crafts = ko.observable(json.crafts).extend({ lockable: this.locked });\r\n        this.investigation = ko.observable(json.investigation).extend({ lockable: this.locked });\r\n        this.medicine = ko.observable(json.medicine).extend({ lockable: this.locked });\r\n        this.occult = ko.observable(json.occult).extend({ lockable: this.locked });\r\n        this.politics = ko.observable(json.politics).extend({ lockable: this.locked });\r\n        this.science = ko.observable(json.science).extend({ lockable: this.locked });\r\n\r\n        this.athletics = ko.observable(json.athletics).extend({ lockable: this.locked });\r\n        this.brawl = ko.observable(json.brawl).extend({ lockable: this.locked });\r\n        this.drive = ko.observable(json.drive).extend({ lockable: this.locked });\r\n        this.ranged = ko.observable(json.ranged).extend({ lockable: this.locked });\r\n        this.larceny = ko.observable(json.larceny).extend({ lockable: this.locked });\r\n        this.stealth = ko.observable(json.stealth).extend({ lockable: this.locked });\r\n        this.survival = ko.observable(json.survival).extend({ lockable: this.locked });\r\n        this.weaponry = ko.observable(json.weaponry).extend({ lockable: this.locked });\r\n\r\n        this.animalKen = ko.observable(json.animalKen).extend({ lockable: this.locked });\r\n        this.empathy = ko.observable(json.empathy).extend({ lockable: this.locked });\r\n        this.expression = ko.observable(json.expression).extend({ lockable: this.locked });\r\n        this.intimidation = ko.observable(json.intimidation).extend({ lockable: this.locked });\r\n        this.persuasion = ko.observable(json.persuasion).extend({ lockable: this.locked });\r\n        this.socialize = ko.observable(json.socialize).extend({ lockable: this.locked });\r\n        this.streetwise = ko.observable(json.streetwise).extend({ lockable: this.locked });\r\n        this.subterfuge = ko.observable(json.subterfuge).extend({ lockable: this.locked });\r\n\r\n        this.merits = ko.observableArray(json.merits.map(m => new Merit(m.name, m.value, this.locked)));\r\n        this.spells = ko.observableArray(json.spells.map(s => new Merit(s.name, s.value, this.locked)));\r\n        this.flaws = ko.observableArray(json.flaws.map(f => new Merit(f.name, f.value, this.locked)));\r\n\r\n        this.size = ko.observable(json.size).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n        this.speed = ko.computed(() => this.strength() + this.dexterity() + 5, this);\r\n        this.defense = ko.computed(() => Math.min(this.dexterity(), this.wits()), this);\r\n        this.armor = ko.observable(json.armor).extend({ numeric: { precision: 0 } }).extend({ lockable: this.locked });\r\n        this.initiative = ko.computed(() => this.dexterity() + this.composure(), this);\r\n        this.experience = ko.observable(json.experience).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.morality = ko.observable(json.morality).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n\r\n        this.weapons = ko.observableArray(json.weapons.map(w => new Equipment(w.name, w.description, this.locked)));\r\n        this.equipment = ko.observableArray(json.equipment.map(e => new Equipment(e.name, e.description, this.locked)));\r\n        this.inventory = ko.observableArray(json.inventory.map(i => new InventoryItem(i.name, i.description, i.quantity, this.locked)));\r\n\r\n        this.notes = ko.observableArray(json.notes.map(n => new Note(n, this.locked)));\r\n\r\n        this.health = ko.computed(() => this.stamina() + this.size(), this);\r\n        this.damage = new Damage(this.health, json.bashing, json.lethal, json.aggravated, this.locked);\r\n\r\n        this.magic = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedMagic = ko.observable(json.usedMagic || 0).extend({ lockable: this.locked });\r\n        this.magic.subscribe(val => {\r\n            if (this.usedMagic() > val) this.usedMagic(val);\r\n        }, this);\r\n\r\n        this.willpower = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedWillpower = ko.observable(json.usedWillpower || 0).extend({ lockable: this.locked });\r\n        this.willpower.subscribe(val => {\r\n            if (this.usedWillpower() > val) this.usedWillpower(val);\r\n        }, this);\r\n    }\r\n\r\n    public static newCharacter(): Character {\r\n        return new Character({\r\n            name: randomName(),\r\n            player: \"\",\r\n            age: 0,\r\n            vice: \"\",\r\n            virtue: \"\",\r\n            origins: \"\",\r\n            gender: \"\",\r\n            concept: \"\",\r\n            chronicle: \"\",\r\n\r\n            intelligence: 1,\r\n            strength: 1,\r\n            presence: 1,\r\n            wits: 1,\r\n            dexterity: 1,\r\n            manipulation: 1,\r\n            resolve: 1,\r\n            stamina: 1,\r\n            composure: 1,\r\n\r\n            academics: 0,\r\n            robotics: 0,\r\n            crafts: 0,\r\n            investigation: 0,\r\n            medicine: 0,\r\n            occult: 0,\r\n            politics: 0,\r\n            science: 0,\r\n\r\n            athletics: 0,\r\n            brawl: 0,\r\n            drive: 0,\r\n            ranged: 0,\r\n            larceny: 0,\r\n            stealth: 0,\r\n            survival: 0,\r\n            weaponry: 0,\r\n\r\n            animalKen: 0,\r\n            empathy: 0,\r\n            expression: 0,\r\n            intimidation: 0,\r\n            persuasion: 0,\r\n            socialize: 0,\r\n            streetwise: 0,\r\n            subterfuge: 0,\r\n\r\n            merits: [],\r\n            spells: [],\r\n            flaws: [],\r\n\r\n            size: 5,\r\n            armor: 0,\r\n            experience: 0,\r\n            morality: 7,\r\n\r\n            weapons: [],\r\n            equipment: [],\r\n            inventory: [],\r\n\r\n            notes: []\r\n        });\r\n    }\r\n\r\n    public static fromJson(json: CharacterJson): Character {\r\n        return new Character(json);\r\n    }\r\n\r\n    public onComponentClick(_: any, e: Event): void {\r\n        const element = <HTMLElement>e.currentTarget;\r\n        element.getElementsByTagName(\"input\")[0].focus();\r\n    }\r\n\r\n    public newItem<T>(observableArray: KnockoutObservableArray<T>, constructor: { createLockable(locked: KnockoutObservable<boolean>): T}): () => void {\r\n        return () => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionAddCommand(observableArray, constructor.createLockable(this.locked)));\r\n        };\r\n    }\r\n\r\n    public removeItem<T>(observableArray: KnockoutObservableArray<T>): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            CommandStack.instance.execute(new CollectionRemoveCommand(observableArray, item));\r\n        };\r\n    }\r\n\r\n    public moveItem<T>(observableArray: KnockoutObservableArray<T>, direction: number): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            const index = observableArray.indexOf(item);\r\n            const newIndex = index + direction;\r\n\r\n            if (newIndex < 0 || newIndex >= observableArray().length) return;\r\n\r\n            observableArray.splice(index, 1);\r\n            observableArray.splice(newIndex, 0, item);\r\n        };\r\n    }\r\n\r\n    public clearUsed(usedObservable: KnockoutObservable<number>): () => void {\r\n        return () => {\r\n            usedObservable(0);\r\n        };\r\n    }\r\n\r\n    public toJson(): CharacterJson {\r\n        return {\r\n            name: this.name(),\r\n            player: this.player(),\r\n            age: this.age(),\r\n            vice: this.vice(),\r\n            virtue: this.virtue(),\r\n            origins: this.origins(),\r\n            gender: this.gender(),\r\n            concept: this.concept(),\r\n            chronicle: this.chronicle(),\r\n\r\n            intelligence: this.intelligence(),\r\n            wits: this.wits(),\r\n            resolve: this.resolve(),\r\n            strength: this.strength(),\r\n            dexterity: this.dexterity(),\r\n            stamina: this.stamina(),\r\n            presence: this.presence(),\r\n            manipulation: this.manipulation(),\r\n            composure: this.composure(),\r\n\r\n            bashing: this.damage.bashing(),\r\n            lethal: this.damage.lethal(),\r\n            aggravated: this.damage.aggravated(),\r\n            usedMagic: this.usedMagic(),\r\n            usedWillpower: this.usedWillpower(),\r\n\r\n            academics: this.academics(),\r\n            robotics: this.robotics(),\r\n            crafts: this.crafts(),\r\n            investigation: this.investigation(),\r\n            medicine: this.medicine(),\r\n            occult: this.occult(),\r\n            politics: this.politics(),\r\n            science: this.science(),\r\n\r\n            athletics: this.athletics(),\r\n            brawl: this.brawl(),\r\n            drive: this.drive(),\r\n            ranged: this.ranged(),\r\n            larceny: this.larceny(),\r\n            stealth: this.stealth(),\r\n            survival: this.survival(),\r\n            weaponry: this.weaponry(),\r\n\r\n            animalKen: this.animalKen(),\r\n            empathy: this.empathy(),\r\n            expression: this.expression(),\r\n            intimidation: this.intimidation(),\r\n            persuasion: this.persuasion(),\r\n            socialize: this.socialize(),\r\n            streetwise: this.streetwise(),\r\n            subterfuge: this.subterfuge(),\r\n\r\n            merits: this.merits().map(m => { return { name: m.name(), value: m.value() }; }),\r\n            spells: this.spells().map(s => { return { name: s.name(), value: s.value() }; }),\r\n            flaws: this.flaws().map(f => { return { name: f.name(), value: f.value() }; }),\r\n\r\n            size: this.size(),\r\n            armor: this.armor(),\r\n            experience: this.experience(),\r\n            morality: this.morality(),\r\n\r\n            weapons: this.weapons().map(w => { return { name: w.name(), description: w.description() }; }),\r\n            equipment: this.equipment().map(e => { return { name: e.name(), description: e.description() }; }),\r\n            inventory: this.inventory().map(i => { return { name: i.name(), description: i.description(), quantity: i.quantity() }; }),\r\n\r\n            notes: this.notes().map(n => n.value())\r\n        };\r\n    }\r\n}\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\nfunction randomName() {\r\n    const firstNameLength = randomInteger(5, 12);\r\n    const lastNameLength = randomInteger(5, 12);\r\n    let firstName = \"\";\r\n    let lastName = \"\";\r\n\r\n    for (let i = 0; i < firstNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        firstName += newLetter;\r\n    }\r\n\r\n    for (let i = 0; i < lastNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        lastName += newLetter;\r\n    }\r\n\r\n    return `${firstName} ${lastName}`;\r\n}\r\n\r\ntype CharacterJson = {\r\n    name: string,\r\n    player: string,\r\n    age: number,\r\n    vice: string,\r\n    virtue: string,\r\n    origins: string,\r\n    gender: string,\r\n    concept: string,\r\n    chronicle: string,\r\n\r\n    intelligence: number,\r\n    strength: number,\r\n    presence: number,\r\n    wits: number,\r\n    dexterity: number,\r\n    manipulation: number,\r\n    resolve: number,\r\n    stamina: number,\r\n    composure: number,\r\n\r\n    academics: number,\r\n    robotics: number,\r\n    crafts: number,\r\n    investigation: number,\r\n    medicine: number,\r\n    occult: number,\r\n    politics: number,\r\n    science: number,\r\n\r\n    athletics: number,\r\n    brawl: number,\r\n    drive: number,\r\n    ranged: number,\r\n    larceny: number,\r\n    stealth: number,\r\n    survival: number,\r\n    weaponry: number,\r\n\r\n    animalKen: number,\r\n    empathy: number,\r\n    expression: number,\r\n    intimidation: number,\r\n    persuasion: number,\r\n    socialize: number,\r\n    streetwise: number,\r\n    subterfuge: number,\r\n\r\n    merits: Array<{ name: string, value: number }>,\r\n    spells: Array<{ name: string, value: number }>,\r\n    flaws: Array<{ name: string, value: number }>,\r\n\r\n    size: number,\r\n    armor: number,\r\n    experience: number,\r\n    morality: number,\r\n\r\n    weapons: Array<{ name: string, description: string }>,\r\n    equipment: Array<{ name: string, description: string }>,\r\n    inventory: Array<{ name: string, description: string, quantity: number }>,\r\n\r\n    notes: Array<string>,\r\n\r\n    bashing?: number,\r\n    lethal?: number,\r\n    aggravated?: number,\r\n\r\n    usedMagic?: number,\r\n    usedWillpower?: number\r\n};","export default class Damage {\r\n    public totalHealth: KnockoutComputed<number>;\r\n    public bashing: KnockoutObservable<number>;\r\n    public lethal: KnockoutObservable<number>;\r\n    public aggravated: KnockoutObservable<number>;\r\n\r\n    public constructor(totalHealthObservable: KnockoutComputed<number>, bashing?: number, lethal?: number, aggravated?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.totalHealth = totalHealthObservable;\r\n        this.bashing = ko.observable(bashing || 0);\r\n        this.lethal = ko.observable(lethal || 0);\r\n        this.aggravated = ko.observable(aggravated || 0);\r\n\r\n        if (locked) {\r\n            this.bashing = this.bashing.extend({ lockable: locked });\r\n            this.lethal = this.lethal.extend({ lockable: locked });\r\n            this.aggravated = this.aggravated.extend({ lockable: locked });\r\n        }\r\n\r\n        totalHealthObservable.subscribe(val => {\r\n            while (this.bashing() + this.lethal() + this.aggravated() > val) {\r\n                if (this.bashing() > 0) {\r\n                    this.bashing(this.bashing() - 1);\r\n                }\r\n                else if (this.lethal() > 0) {\r\n                    this.lethal(this.lethal() - 1);\r\n                }\r\n                else {\r\n                    this.aggravated(this.aggravated() - 1);\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    public anyEmpty(): boolean {\r\n        return this.bashing() + this.lethal() + this.aggravated() < this.totalHealth();\r\n    }\r\n\r\n    public addBashing(): void {\r\n        if (this.anyEmpty()) {\r\n            this.bashing(this.bashing() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addLethal(): void {\r\n        if (this.anyEmpty()) {\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addAggravated(): void {\r\n        if (this.anyEmpty()) {\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public clearAll(): void {\r\n        this.bashing(0);\r\n        this.lethal(0);\r\n        this.aggravated(0);\r\n    }\r\n}","export default class Equipment {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n\r\n    public constructor(name?: string, description?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Equipment(null, null, locked);\r\n    }\r\n}","export default class InventoryItem {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n    public quantity: KnockoutObservable<number>;\r\n    public displayText: KnockoutComputed<string>;\r\n\r\n    public constructor(name?: string, description?: string, quantity?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n        this.quantity = ko.observable(quantity || 1);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n            this.quantity = this.quantity.extend({ lockable: locked });\r\n        }\r\n\r\n        this.displayText = ko.computed(this.getDisplayText, this);\r\n    }\r\n\r\n    public getDisplayText() : string {\r\n        return `${this.quantity()} ${this.name()}`;\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new InventoryItem(null, null, null, locked);\r\n    }\r\n}","export default class Merit {\r\n    public name: KnockoutObservable<string>;\r\n    public value: KnockoutObservable<number>;\r\n\r\n    public constructor(name?: string, value?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.value = ko.observable(value || 0);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Merit(null, null, locked);\r\n    }\r\n}","export default class Note {\r\n    public value: KnockoutObservable<string>;\r\n\r\n    public constructor(value?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.value = ko.observable(value || \"\");\r\n\r\n        if (locked) {\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Note(null, locked);\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class AttributeCommand implements ICommand {\r\n    private _observable: KnockoutObservable<number>;\r\n    private _newValue: number;\r\n    private _oldValue: number;\r\n\r\n    public constructor(observable: KnockoutObservable<number>, newValue: number, oldValue: number) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionAddCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _newItem: T;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, newItem: T) {\r\n        this._observable = observable;\r\n        this._newItem = newItem;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable.push(this._newItem);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.remove(this._newItem);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CollectionRemoveCommand<T> implements ICommand {\r\n    private _observable: KnockoutObservableArray<T>;\r\n    private _item: T;\r\n    private _itemIndex: number;\r\n\r\n    public constructor(observable: KnockoutObservableArray<T>, item: T) {\r\n        this._observable = observable;\r\n        this._item = item;\r\n        this._itemIndex = this._observable.indexOf(this._item);\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable.remove(this._item);\r\n    }\r\n\r\n    public undo(): void {\r\n        this._observable.splice(this._itemIndex, 0, this._item);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return false;\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class CommandStack {\r\n    private static _instance: CommandStack;\r\n    \r\n    private _undoStack: KnockoutObservableArray<ICommand>;\r\n    private _redoStack: KnockoutObservableArray<ICommand>;\r\n\r\n    public canUndo: KnockoutComputed<boolean>;\r\n    public canRedo: KnockoutComputed<boolean>;\r\n\r\n    private constructor() {\r\n        this._undoStack = ko.observableArray([]);\r\n        this._redoStack = ko.observableArray([]);\r\n\r\n        this.canUndo = ko.computed(() => this._undoStack().length > 0, this);\r\n        this.canRedo = ko.computed(() => this._redoStack().length > 0, this);\r\n    }\r\n\r\n    public static get instance(): CommandStack {\r\n        if (!CommandStack._instance) CommandStack._instance = new CommandStack();\r\n\r\n        return CommandStack._instance;\r\n    }\r\n\r\n    // TODO: Maybe don't have this as singleton...\r\n    // Could have an instance for each character\r\n    // to preserve the stack across character selection\r\n    public reset(): void {\r\n        this._undoStack.removeAll();\r\n        this._redoStack.removeAll();\r\n    }\r\n\r\n    public execute(command: ICommand): void {\r\n        if (command.doesNothing()) return;\r\n\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n        this._redoStack.removeAll();\r\n    }\r\n\r\n    public undo(): void {\r\n        if (this._undoStack().length === 0) return;\r\n        \r\n        const command = this._undoStack.pop();\r\n        command.undo();\r\n        this._redoStack.push(command);\r\n    }\r\n\r\n    public redo(): void {\r\n        if (this._redoStack().length === 0) return;\r\n\r\n        const command = this._redoStack.pop();\r\n        command.execute();\r\n        this._undoStack.push(command);\r\n    }\r\n}","import ICommand from \"./ICommand\";\r\n\r\nexport default class TextInputCommand implements ICommand {\r\n    private _observable: KnockoutObservable<string>;\r\n    private _newValue: string;\r\n    private _oldValue: string;\r\n\r\n    public constructor(observable: KnockoutObservable<string>, newValue: string, oldValue: string) {\r\n        this._observable = observable;\r\n        this._newValue = newValue;\r\n        this._oldValue = oldValue;\r\n    }\r\n\r\n    public execute(): void {\r\n        this._observable(this._newValue);\r\n    }\r\n\r\n    public undo(): void  {\r\n        this._observable(this._oldValue);\r\n    }\r\n\r\n    public doesNothing(): boolean {\r\n        return this._newValue === this._oldValue;\r\n    }\r\n}","import { randomFloat, randomInteger } from \"./utils\";\r\n\r\nexport default class Dice {\r\n    public dicePool: KnockoutObservable<number>;\r\n    public rollRounds: KnockoutObservableArray<Array<number>>;\r\n    public rollingInProgress: KnockoutObservable<boolean>;\r\n    public totalDiceSuccesses: KnockoutComputed<number>;\r\n    public totalDiceSuccessesDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        this.dicePool = ko.observable(1);\r\n        this.rollRounds = ko.observableArray([]);\r\n        this.rollingInProgress = ko.observable(false);\r\n        this.totalDiceSuccesses = ko.computed(() => {\r\n            if (this.rollingInProgress() || this.rollRounds().length === 0) return -1;\r\n\r\n            return this.rollRounds().reduce((total: number, r: Array<number>) => {\r\n                return total + r.reduce((total: number, d: number) => total + (d > 7 ? 1 : 0), 0);\r\n            }, 0);\r\n        }, this);\r\n        this.totalDiceSuccessesDisplay = ko.computed(() => {\r\n            return this.totalDiceSuccesses() >= 0 ? \"\" + this.totalDiceSuccesses() : \"???\";\r\n        }, this);\r\n    }\r\n\r\n    public incrementDicePool(amount: number): () => void {\r\n        return () => {\r\n            let newAmount = this.dicePool() + amount;\r\n            if (newAmount < 1) newAmount = 1;\r\n            this.dicePool(newAmount);\r\n        };\r\n    }\r\n\r\n    public rollDice(): void {\r\n        const roller = new RollState(this);\r\n        roller.beginRoll();\r\n    }\r\n}\r\n\r\nclass RollState {\r\n    private _diceObj: Dice;\r\n    private _currentRound: number;\r\n    private _currentDice: number;\r\n    private _currentRoundRolls: number;\r\n    private _currentRoundResults: Array<number>;\r\n    private _nextRoundRolls: number;\r\n    private _intervalHandle: number;\r\n\r\n    public constructor(diceObj: Dice) {\r\n        this._diceObj = diceObj;\r\n        this._currentRound = 0;\r\n        this._currentDice = 0;\r\n        this._currentRoundRolls = diceObj.dicePool();\r\n        this._currentRoundResults = [];\r\n        this._nextRoundRolls = 0;\r\n        this._intervalHandle = null;\r\n    }\r\n\r\n    public beginRoll(): void {\r\n        this._diceObj.rollingInProgress(true);\r\n        this._diceObj.rollRounds.removeAll();\r\n        for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n        this._diceObj.rollRounds.push(this._currentRoundResults);\r\n\r\n        this._intervalHandle = window.setInterval(() => {\r\n            const nextRoll = randomInteger(1, 11);\r\n            if (nextRoll === 10) {\r\n                this._nextRoundRolls++;\r\n                const diceContainer = document.getElementsByClassName(\"diceContainer\")[0];\r\n                const critMessage = document.createElement(\"div\");\r\n                critMessage.classList.add(\"crit-message\");\r\n                critMessage.innerText = \"Crit!\";\r\n                critMessage.id = \"critMessage\";\r\n                diceContainer.appendChild(critMessage);\r\n                window.setTimeout(() => diceContainer.removeChild(critMessage), 1010);\r\n            }\r\n            this._currentRoundResults[this._currentDice] = nextRoll;\r\n            this._diceObj.rollRounds.replace(this._diceObj.rollRounds()[this._currentRound], this._currentRoundResults);\r\n            this._currentDice++;\r\n\r\n            if (this._currentDice === this._currentRoundRolls) {\r\n                if (this._nextRoundRolls === 0) {\r\n                    window.clearInterval(this._intervalHandle);\r\n                    this._diceObj.rollingInProgress(false);\r\n                    const critMessage = document.getElementById(\"critMessage\");\r\n                    if (critMessage) {\r\n                        critMessage.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                else {\r\n                    this._currentRound++;\r\n                    this._currentRoundRolls = this._nextRoundRolls;\r\n                    this._nextRoundRolls = 0;\r\n                    this._currentDice = 0;\r\n                    this._currentRoundResults = [];\r\n                    for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n                    this._diceObj.rollRounds.push(this._currentRoundResults);\r\n                }\r\n            }\r\n        }, 100);\r\n    }\r\n}","import Application from \"./Application\";\r\nimport Equipment from \"./Character/Equipment\";\r\nimport InventoryItem from \"./Character/InventoryItem\";\r\nimport Merit from \"./Character/Merit\";\r\nimport Note from \"./Character/Note\";\r\nimport { applyCustomKnockoutCode } from \"./utils\";\r\n\r\napplyCustomKnockoutCode();\r\n\r\nconst constructors = {\r\n    Equipment: Equipment,\r\n    InventoryItem: InventoryItem,\r\n    Merit: Merit,\r\n    Note: Note\r\n};\r\nObject.defineProperty(window, \"constructors\", { value: constructors });\r\n\r\nconst app = new Application();\r\nko.applyBindings(app);\r\n\r\n// Exposing the view model to the global state in case manual changes need to be applied\r\nObject.defineProperty(window, \"app\", { value: app });\r\n\r\nfunction toggleTooltips(enable: boolean): void {\r\n    if (enable) $(\"[data-toggle='tooltip']\").tooltip();\r\n    else $(\"[data-toggle='tooltip']\").tooltip(\"dispose\");\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    toggleTooltips(window.outerWidth >= 992);\r\n});\r\ntoggleTooltips(window.outerWidth >= 992);","import Damage from \"./Character/Damage\";\r\nimport CommandStack from \"./Command/CommandStack\";\r\nimport AttributeCommand from \"./Command/AttributeCommand\";\r\nimport TextInputCommand from \"./Command/TextInputCommand\";\r\n\r\nexport function randomInteger(minInclusive = 0, maxExclusive = 10): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function randomFloat(minInclusive = 0, maxExclusive = 1): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.random() * (maxExclusive - minInclusive) + minInclusive;\r\n}\r\n\r\nexport function applyCustomKnockoutCode() {\r\n    ko.bindingHandlers.dice = {\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservableArray<Array<number>>) => {\r\n            const rollRounds = valueAccessor()();\r\n            if (rollRounds.length === 0) {\r\n                element.innerHTML = \"\";\r\n                return;\r\n            }\r\n    \r\n            let divs = element.getElementsByClassName(\"dice-round\");\r\n            if (divs.length !== rollRounds.length) {\r\n                const newRound = document.createElement(\"div\");\r\n                newRound.classList.add(\"dice-round\");\r\n                const rolls = rollRounds[rollRounds.length - 1];\r\n                for (let i = 0; i < rolls.length; i++) {\r\n                    const span = document.createElement(\"span\");\r\n                    const delay = randomFloat(0, 0.5);\r\n                    span.style.animation = `rollingDice 0.5s linear -${delay}s infinite alternate`;\r\n                    span.classList.add(\"dice\");\r\n                    newRound.appendChild(span);\r\n                }\r\n                element.appendChild(newRound);\r\n                divs = element.getElementsByClassName(\"dice-round\");\r\n            }\r\n    \r\n            for (let i = 0; i < rollRounds.length; i++) {\r\n                const rolls = rollRounds[i];\r\n                const spans = divs[i].getElementsByClassName(\"dice\");\r\n                for (let j = 0; j < rolls.length; j++) {\r\n                    const roll = rolls[j];\r\n                    const span = <HTMLSpanElement>spans[j];\r\n    \r\n                    if (roll !== -1) {\r\n                        span.style.animation = null;\r\n                        span.style.backgroundImage = `url('images/dice-${roll}.png')`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.damageDisplay = {\r\n        init: (element: HTMLElement) => {\r\n            for (let i = 0; i < 15; i++) {\r\n                const span = document.createElement(\"span\");\r\n                span.classList.add(\"damage\");\r\n                span.classList.add(\"none\");\r\n                element.appendChild(span);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => Damage) => {\r\n            const damageObj = valueAccessor();\r\n            const spans = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < spans.length; i++) {\r\n                if (i < damageObj.aggravated()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.add(\"aggravated\");\r\n                }\r\n                else if (i - damageObj.aggravated() < damageObj.lethal()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"lethal\");\r\n                }\r\n                else if (i - damageObj.aggravated() - damageObj.lethal() < damageObj.bashing()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"bashing\");\r\n                }\r\n                else {\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"none\");\r\n                }\r\n    \r\n                if (i < damageObj.totalHealth()) {\r\n                    spans[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else {\r\n                    spans[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.attribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, canClear?: boolean }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                dot.classList.add(\"pointer\");\r\n                dot.dataset.toggle = \"tooltip\";\r\n                dot.title = \"\" + (i + 1);\r\n                $(dot).tooltip();\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n    \r\n            const canClear = valueAccessor().canClear;\r\n            if (canClear === true || typeof canClear === \"undefined\") {\r\n                const clearDot = document.createElement(\"div\");\r\n                clearDot.classList.add(\"clear-dot\");\r\n                clearDot.innerHTML = \"&times;\";\r\n                clearDot.dataset.toggle = \"tooltip\";\r\n                clearDot.title = \"Clear\";\r\n                clearDot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, 0, valueAccessor().value()));\r\n                });\r\n                element.appendChild(clearDot);\r\n                $(clearDot).tooltip();\r\n            }\r\n    \r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                element.appendChild(dot);\r\n                dot.addEventListener(\"click\", () => {\r\n                    CommandStack.instance.execute(new AttributeCommand(valueAccessor().value, index + 1, valueAccessor().value()));\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByClassName(\"attribute-dot\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                const dot = <HTMLSpanElement>dots[i];\r\n                dot.style.backgroundColor = null;\r\n                dot.style.borderColor = null;\r\n                if (i < value) {\r\n                    dot.style.backgroundColor = \"var(--body-color)\";\r\n                    dot.style.borderColor = \"var(--body-color)\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.readOnlyAttribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, hideUnfilled?: boolean }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                dots[i].classList.remove(\"filled\");\r\n                if (i < value) {\r\n                    dots[i].classList.add(\"filled\");\r\n                    dots[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else if (valueAccessor().hideUnfilled) {\r\n                    dots[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.used = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < 12; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                dot.addEventListener(\"click\", () => {\r\n                    valueAccessor().value(index + 1);\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const used = valueAccessor().value();\r\n            const total = valueAccessor().total();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                if (i < used) dots[i].classList.add(\"filled-red\");\r\n                else dots[i].classList.remove(\"filled-red\");\r\n    \r\n                if (i < total) dots[i].classList.remove(\"HIDDEN\");\r\n                else dots[i].classList.add(\"HIDDEN\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.focusOnCreation = {\r\n        init: (element: HTMLInputElement | HTMLTextAreaElement) => {\r\n            window.setTimeout(() => {\r\n                if (element.value) return;\r\n                element.focus();\r\n            }, 1);\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.contextMenu = {\r\n        init: (element: HTMLElement, valueAccessor: () => () => void) => {\r\n            element.addEventListener(\"contextmenu\", e => {\r\n                e.preventDefault();\r\n                valueAccessor()();\r\n            });\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.undoableTextInput = {\r\n        init: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            const inputElement = <HTMLInputElement>element;\r\n            inputElement.addEventListener(\"change\", () => {\r\n                const oldValue = valueAccessor()();\r\n                const newValue = inputElement.value;\r\n                if (oldValue === newValue) return;\r\n\r\n                valueAccessor()(newValue);\r\n                if (valueAccessor()() === oldValue) return;\r\n                valueAccessor()(oldValue);\r\n\r\n                CommandStack.instance.execute(new TextInputCommand(valueAccessor(), newValue, oldValue));\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservable<string>) => {\r\n            (<HTMLInputElement>element).value = valueAccessor()();\r\n        }\r\n    };\r\n    \r\n    (<any>ko.extenders).lockable = (target: KnockoutObservable<any>, locked: KnockoutObservable<boolean>) => {\r\n        const result = ko.pureComputed({\r\n            read: target,\r\n            write: (newValue: any) => {\r\n                if (locked()) {\r\n                    target.notifySubscribers(target());\r\n                }\r\n                else {\r\n                    target(newValue);\r\n                    target.notifySubscribers(newValue);\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        return result;\r\n    };\r\n\r\n    // TODO: Make undoing an extender to not make it so I have to write special code\r\n    // for the various commands\r\n    // (<any>ko.extenders).undoable = (target: KnockoutObservable<any>) => {\r\n    //     const result = ko.pureComputed({\r\n    //         read: target,\r\n    //         write: (newValue: any) => {\r\n\r\n    //         }\r\n    //     }).extend({ notify: \"always\" });\r\n    // };\r\n    \r\n    (<any>ko.extenders).numeric = (target: any, args: { precision?: number, min?: number, max?: number }) => {\r\n        const precision = args.precision || 0;\r\n        const min = args.min || -Infinity;\r\n        const max = args.max || Infinity;\r\n    \r\n        // Create a writeable computed observable to intercept writes to our observable\r\n        const result = ko.pureComputed({\r\n            read: target, // Always return the original observable's value\r\n            write: (newValue: any) => {\r\n                const current = target();\r\n                const roundingMultiplier = Math.pow(10, precision);\r\n                const newValueAsNum = isNaN(newValue) ? 0 : +newValue;\r\n                let valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\r\n                if (valueToWrite < min) valueToWrite = min;\r\n                else if (valueToWrite > max) valueToWrite = max;\r\n    \r\n                // Only write if it changed\r\n                if (valueToWrite !== current) {\r\n                    target(valueToWrite);\r\n                }\r\n                else {\r\n                    // If the rounded value is the same, but a different value was written,\r\n                    // force a notification for the current field\r\n                    if (newValue !== current) {\r\n                        target.notifySubscribers(valueToWrite);\r\n                    }\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        // Initialize with current value to make sure it is rounded appropriately\r\n        result(target());\r\n    \r\n        // Return the new computed observable\r\n        return result;\r\n    };\r\n}"]}