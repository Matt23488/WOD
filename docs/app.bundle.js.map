{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/Application.ts","src/ts/Character/Character.ts","src/ts/Character/Damage.ts","src/ts/Character/Equipment.ts","src/ts/Character/InventoryItem.ts","src/ts/Character/Merit.ts","src/ts/Character/Note.ts","src/ts/Dice.ts","src/ts/main.ts","src/ts/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Character_1","Dice_1","Application","prototype","goBack","this","mode","_previousSection","window","location","hash","newCharacter","characters","push","default","characterId","selectCharacter","character","indexOf","deleteCharacter","confirm","name","id","remove","saveCharacters","localStorage","setItem","JSON","stringify","realCharacters","map","toJson","alert","downloadCharacter","json","dl","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","uploadCharacter","_this","ul","type","accept","addEventListener","file","files","reader","FileReader","onload","target","result","fromJson","parse","readAsText","switchMode","getElementById","savedCharacters","getItem","unshift","ghost","ko","observable","observableArray","computed","filter","dice","Damage_1","Equipment_1","InventoryItem_1","Merit_1","Note_1","utils_1","Character","firstNameLength","randomInteger","lastNameLength","firstName","lastName","newLetter","alphabet","charAt","toUpperCase","randomName","player","age","vice","virtue","origins","gender","concept","chronicle","intelligence","strength","presence","wits","dexterity","manipulation","resolve","stamina","composure","academics","robotics","crafts","investigation","medicine","occult","politics","science","athletics","brawl","drive","ranged","larceny","stealth","survival","weaponry","animalKen","empathy","expression","intimidation","persuasion","socialize","streetwise","subterfuge","merits","spells","flaws","size","armor","experience","morality","weapons","equipment","inventory","notes","onComponentClick","_","currentTarget","getElementsByTagName","focus","newItem","constructor","removeItem","item","moveItem","direction","index","newIndex","splice","clearUsed","usedObservable","bashing","damage","lethal","aggravated","usedMagic","usedWillpower","m","value","s","w","description","quantity","extend","numeric","precision","min","max","speed","defense","Math","initiative","health","magic","subscribe","val","willpower","bindingHandlers","attribute","init","element","valueAccessor","dots","dot","classList","add","dataset","toggle","title","$","tooltip","forEach","clearDot","innerHTML","update","getElementsByClassName","backgroundColor","borderColor","readOnlyAttribute","used","total","focusOnCreation","setTimeout","extenders","args","Infinity","pureComputed","read","write","newValue","current","roundingMultiplier","pow","newValueAsNum","isNaN","valueToWrite","round","notifySubscribers","notify","Damage","anyEmpty","totalHealth","addBashing","addLethal","addAggravated","clearAll","totalHealthObservable","damageDisplay","span","damageObj","spans","Equipment","InventoryItem","getDisplayText","displayText","Merit","Note","Dice","incrementDicePool","amount","dicePool","rollDice","RollState","beginRoll","rollRounds","rollingInProgress","totalDiceSuccesses","reduce","d","totalDiceSuccessesDisplay","divs","newRound","rolls","delay","randomFloat","animation","j","roll","backgroundImage","_diceObj","removeAll","_currentRoundRolls","_currentRoundResults","_intervalHandle","setInterval","nextRoll","_nextRoundRolls","_currentDice","replace","_currentRound","clearInterval","diceObj","Application_1","constructors","Object","defineProperty","app","toggleTooltips","enable","applyBindings","outerWidth","minInclusive","maxExclusive","_a","floor","random"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,iECAA,IAAAK,EAAAX,EAAA,yBACAY,EAAAZ,EAAA,UAGAa,GAuBWA,EAAAC,UAAAC,OAAP,WACwB,UAAhBC,KAAKC,OAAoBD,KAAKC,KAAK,SAEnCD,KAAKC,KAAK,SAEND,KAAKE,mBAAkBC,OAAOC,SAASC,KAAOL,KAAKE,oBAIxDL,EAAAC,UAAAQ,aAAP,WACIN,KAAKO,WAAWC,KAAKb,EAAAc,QAAUH,gBAC/BN,KAAKU,YAAYV,KAAKO,aAAaf,OAAS,GAC5CQ,KAAKC,KAAK,UAGPJ,EAAAC,UAAAa,gBAAP,SAAuBC,GACnBZ,KAAKU,YAAYV,KAAKO,WAAWM,QAAQD,IACzCZ,KAAKC,KAAK,UAGPJ,EAAAC,UAAAgB,gBAAP,SAAuBF,GAgBnB,GAAIG,QAAQ,mCAAmCf,KAAKY,YAAYI,OAAM,gEAAiE,CACnI,IAAMC,EAAKjB,KAAKU,cAChBV,KAAKU,YAAY,GACjBV,KAAKO,WAAWW,OAAOlB,KAAKO,aAAaU,IACzCjB,KAAKC,KAAK,UAIXJ,EAAAC,UAAAqB,eAAP,WACIhB,OAAOiB,aAAaC,QAAQ,aAAcC,KAAKC,UAAUvB,KAAKwB,iBAAiBC,IAAI,SAAA1C,GAAK,OAAAA,EAAE2C,aAM1FC,MAAM,mCAGH9B,EAAAC,UAAA8B,kBAAP,WACI,IAAMC,EAAOP,KAAKC,UAAUvB,KAAKY,YAAYc,UAEvCI,EAAKC,SAASC,cAAc,KAClCF,EAAGG,aAAa,OAAQ,iCAAiCC,mBAAmBL,IAC5EC,EAAGG,aAAa,WAAejC,KAAKY,YAAYI,OAAM,SAEtDc,EAAGK,MAAMC,QAAU,OACnBL,SAASM,KAAKC,YAAYR,GAE1BA,EAAGS,QAEHR,SAASM,KAAKG,YAAYV,IAGvBjC,EAAAC,UAAA2C,gBAAP,WAAA,IAAAC,EAAA1C,KACU2C,EAAKZ,SAASC,cAAc,SAClCW,EAAGC,KAAO,OACVD,EAAGE,OAAS,QACZF,EAAGR,MAAMC,QAAU,OAEnBO,EAAGG,iBAAiB,SAAU,SAAArE,GAC1B,IAAMsE,EAAOJ,EAAGK,MAAM,GACtB,GAAKD,EAAL,CAEA,IAAME,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAC1E,GACb,IAAMoD,EAAOpD,EAAE2E,OAAOC,OACtBX,EAAKnC,WAAWC,KAAKb,EAAAc,QAAU6C,SAAShC,KAAKiC,MAAM1B,KACnDa,EAAKhC,YAAYgC,EAAKnC,aAAaf,OAAS,GAC5CkD,EAAKzC,KAAK,UAEdgD,EAAOO,WAAWT,MAGtBhB,SAASM,KAAKC,YAAYK,GAE1BA,EAAGJ,QAEHR,SAASM,KAAKG,YAAYG,IAGvB9C,EAAAC,UAAA2D,WAAP,SAAkBxD,GAAlB,IAAAyC,EAAA1C,KACI,OAAO,WACiB,SAAhB0C,EAAKzC,QAAqB8B,SAAS2B,eAAezD,GAClDyC,EAAKxC,iBAAmBD,EAEvByC,EAAKxC,iBAAmB,KAE7BC,OAAOC,SAASC,KAAO,GACvBqC,EAAKzC,KAAKA,KAGtBJ,GAzHI,SAAAA,IAAA,IAAA6C,EAAA1C,KACU2D,GAAqCrC,KAAKiC,MAAMpD,OAAOiB,aAAawC,QAAQ,gBAAkB,IAAInC,IAAI9B,EAAAc,QAAU6C,UACtHK,EAAgBE,QAAQlE,EAAAc,QAAUH,gBAClCqD,EAAgB,GAAGG,OAAQ,EAE3B9D,KAAKC,KAAO8D,GAAGC,WAAW,QAC1BhE,KAAKU,YAAcqD,GAAGC,WAAW,GACjChE,KAAKO,WAAawD,GAAGE,gBAAgBN,GACrC3D,KAAKwB,eAAiBuC,GAAGG,SAAS,WAAM,OAAAxB,EAAKnC,aAAa4D,OAAO,SAAApF,GAAK,OAACA,EAAE+E,SAAQ9D,MACjFA,KAAKY,UAAYmD,GAAGG,SAAS,WAAM,OAAAxB,EAAKnC,aAAamC,EAAKhC,gBAAgBV,MAC1EA,KAAKoE,KAAO,IAAIxE,EAAAa,QAChBT,KAAKE,iBAAmB,2ICxBhC,IAAAmE,EAAArF,EAAA,YACAsF,EAAAtF,EAAA,eACAuF,EAAAvF,EAAA,mBACAwF,EAAAxF,EAAA,WACAyF,EAAAzF,EAAA,UACA0F,EAAA1F,EAAA,YAEA2F,GA+JkBA,EAAArE,aAAd,WACI,OAAO,IAAIqE,EAAU,CACjB3D,KAiLZ,WAMI,IALA,IAAM4D,EAAkBF,EAAAG,cAAc,EAAG,IACnCC,EAAiBJ,EAAAG,cAAc,EAAG,IACpCE,EAAY,GACZC,EAAW,GAENnG,EAAI,EAAGA,EAAI+F,EAAiB/F,IAAK,CACtC,IAAIoG,EAAYC,EAASC,OAAOT,EAAAG,cAAc,EAAGK,EAAS1F,SAChD,IAANX,IAASoG,EAAYA,EAAUG,eAEnCL,GAAaE,EAGjB,IAAK,IAAIpG,EAAI,EAAGA,EAAIiG,EAAgBjG,IAAK,CACrC,IAAIoG,EAAYC,EAASC,OAAOT,EAAAG,cAAc,EAAGK,EAAS1F,SAChD,IAANX,IAASoG,EAAYA,EAAUG,eAEnCJ,GAAYC,EAGhB,OAAUF,EAAS,IAAIC,EArMTK,GACNC,OAAQ,GACRC,IAAK,EACLC,KAAM,GACNC,OAAQ,GACRC,QAAS,GACTC,OAAQ,GACRC,QAAS,GACTC,UAAW,GAEXC,aAAc,EACdC,SAAU,EACVC,SAAU,EACVC,KAAM,EACNC,UAAW,EACXC,aAAc,EACdC,QAAS,EACTC,QAAS,EACTC,UAAW,EAEXC,UAAW,EACXC,SAAU,EACVC,OAAQ,EACRC,cAAe,EACfC,SAAU,EACVC,OAAQ,EACRC,SAAU,EACVC,QAAS,EAETC,UAAW,EACXC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,SAAU,EAEVC,UAAW,EACXC,QAAS,EACTC,WAAY,EACZC,aAAc,EACdC,WAAY,EACZC,UAAW,EACXC,WAAY,EACZC,WAAY,EAEZC,OAAQ,GACRC,OAAQ,GACRC,MAAO,GAEPC,KAAM,EACNC,MAAO,EACPC,WAAY,EACZC,SAAU,EAEVC,QAAS,GACTC,UAAW,GACXC,UAAW,GAEXC,MAAO,MAID9D,EAAArB,SAAd,SAAuBzB,GACnB,OAAO,IAAI8C,EAAU9C,IAGlB8C,EAAA7E,UAAA4I,iBAAP,SAAwBC,EAAQlK,GACCA,EAAEmK,cACvBC,qBAAqB,SAAS,GAAGC,SAGtCnE,EAAA7E,UAAAiJ,QAAP,SAAkB9E,EAA6C+E,GAC3D,OAAO,WACH/E,EAAgBzD,KAAK,IAAIwI,KAI1BrE,EAAA7E,UAAAmJ,WAAP,SAAqBhF,GACjB,OAAO,SAACiF,GACJjF,EAAgB/C,OAAOgI,KAIxBvE,EAAA7E,UAAAqJ,SAAP,SAAmBlF,EAA6CmF,GAC5D,OAAO,SAACF,GACJ,IAAMG,EAAQpF,EAAgBpD,QAAQqI,GAChCI,EAAWD,EAAQD,EAErBE,EAAW,GAAKA,GAAYrF,IAAkBzE,SAElDyE,EAAgBsF,OAAOF,EAAO,GAC9BpF,EAAgBsF,OAAOD,EAAU,EAAGJ,MAIrCvE,EAAA7E,UAAA0J,UAAP,SAAiBC,GACb,OAAO,WACHA,EAAe,KAIhB9E,EAAA7E,UAAA4B,OAAP,WACI,MAAO,CACHV,KAAMhB,KAAKgB,OACXsE,OAAQtF,KAAKsF,SACbC,IAAKvF,KAAKuF,MACVC,KAAMxF,KAAKwF,OACXC,OAAQzF,KAAKyF,SACbC,QAAS1F,KAAK0F,UACdC,OAAQ3F,KAAK2F,SACbC,QAAS5F,KAAK4F,UACdC,UAAW7F,KAAK6F,YAEhBC,aAAc9F,KAAK8F,eACnBG,KAAMjG,KAAKiG,OACXG,QAASpG,KAAKoG,UACdL,SAAU/F,KAAK+F,WACfG,UAAWlG,KAAKkG,YAChBG,QAASrG,KAAKqG,UACdL,SAAUhG,KAAKgG,WACfG,aAAcnG,KAAKmG,eACnBG,UAAWtG,KAAKsG,YAEhBoD,QAAS1J,KAAK2J,OAAOD,UACrBE,OAAQ5J,KAAK2J,OAAOC,SACpBC,WAAY7J,KAAK2J,OAAOE,aACxBC,UAAW9J,KAAK8J,YAChBC,cAAe/J,KAAK+J,gBAEpBxD,UAAWvG,KAAKuG,YAChBC,SAAUxG,KAAKwG,WACfC,OAAQzG,KAAKyG,SACbC,cAAe1G,KAAK0G,gBACpBC,SAAU3G,KAAK2G,WACfC,OAAQ5G,KAAK4G,SACbC,SAAU7G,KAAK6G,WACfC,QAAS9G,KAAK8G,UAEdC,UAAW/G,KAAK+G,YAChBC,MAAOhH,KAAKgH,QACZC,MAAOjH,KAAKiH,QACZC,OAAQlH,KAAKkH,SACbC,QAASnH,KAAKmH,UACdC,QAASpH,KAAKoH,UACdC,SAAUrH,KAAKqH,WACfC,SAAUtH,KAAKsH,WAEfC,UAAWvH,KAAKuH,YAChBC,QAASxH,KAAKwH,UACdC,WAAYzH,KAAKyH,aACjBC,aAAc1H,KAAK0H,eACnBC,WAAY3H,KAAK2H,aACjBC,UAAW5H,KAAK4H,YAChBC,WAAY7H,KAAK6H,aACjBC,WAAY9H,KAAK8H,aAEjBC,OAAQ/H,KAAK+H,SAAStG,IAAI,SAAAuI,GAAO,MAAO,CAAEhJ,KAAMgJ,EAAEhJ,OAAQiJ,MAAOD,EAAEC,WACnEjC,OAAQhI,KAAKgI,SAASvG,IAAI,SAAAyI,GAAO,MAAO,CAAElJ,KAAMkJ,EAAElJ,OAAQiJ,MAAOC,EAAED,WACnEhC,MAAOjI,KAAKiI,QAAQxG,IAAI,SAAA3C,GAAO,MAAO,CAAEkC,KAAMlC,EAAEkC,OAAQiJ,MAAOnL,EAAEmL,WAEjE/B,KAAMlI,KAAKkI,OACXC,MAAOnI,KAAKmI,QACZC,WAAYpI,KAAKoI,aACjBC,SAAUrI,KAAKqI,WAEfC,QAAStI,KAAKsI,UAAU7G,IAAI,SAAA0I,GAAO,MAAO,CAAEnJ,KAAMmJ,EAAEnJ,OAAQoJ,YAAaD,EAAEC,iBAC3E7B,UAAWvI,KAAKuI,YAAY9G,IAAI,SAAAhD,GAAO,MAAO,CAAEuC,KAAMvC,EAAEuC,OAAQoJ,YAAa3L,EAAE2L,iBAC/E5B,UAAWxI,KAAKwI,YAAY/G,IAAI,SAAA5C,GAAO,MAAO,CAAEmC,KAAMnC,EAAEmC,OAAQoJ,YAAavL,EAAEuL,cAAeC,SAAUxL,EAAEwL,cAE1G5B,MAAOzI,KAAKyI,QAAQhH,IAAI,SAAA/C,GAAK,OAAAA,EAAEuL,YAG3CtF,GAlQI,SAAAA,EAAmB9C,GAAnB,IAAAa,EAAA1C,KA5EOA,KAAA8D,OAAiB,EA6EpB9D,KAAKgB,KAAO+C,GAAGC,WAAWnC,EAAKb,MAC/BhB,KAAKsF,OAASvB,GAAGC,WAAWnC,EAAKyD,QACjCtF,KAAKuF,IAAMxB,GAAGC,WAAWnC,EAAK0D,KAAK+E,OAAO,CAAEC,QAAS,CAAEC,UAAW,KAClExK,KAAKwF,KAAOzB,GAAGC,WAAWnC,EAAK2D,MAC/BxF,KAAKyF,OAAS1B,GAAGC,WAAWnC,EAAK4D,QACjCzF,KAAK0F,QAAU3B,GAAGC,WAAWnC,EAAK6D,SAClC1F,KAAK2F,OAAS5B,GAAGC,WAAWnC,EAAK8D,QACjC3F,KAAK4F,QAAU7B,GAAGC,WAAWnC,EAAK+D,SAClC5F,KAAK6F,UAAY9B,GAAGC,WAAWnC,EAAKgE,WAEpC7F,KAAK8F,aAAe/B,GAAGC,WAAWnC,EAAKiE,cACvC9F,KAAK+F,SAAWhC,GAAGC,WAAWnC,EAAKkE,UACnC/F,KAAKgG,SAAWjC,GAAGC,WAAWnC,EAAKmE,UACnChG,KAAKiG,KAAOlC,GAAGC,WAAWnC,EAAKoE,MAC/BjG,KAAKkG,UAAYnC,GAAGC,WAAWnC,EAAKqE,WACpClG,KAAKmG,aAAepC,GAAGC,WAAWnC,EAAKsE,cACvCnG,KAAKoG,QAAUrC,GAAGC,WAAWnC,EAAKuE,SAClCpG,KAAKqG,QAAUtC,GAAGC,WAAWnC,EAAKwE,SAClCrG,KAAKsG,UAAYvC,GAAGC,WAAWnC,EAAKyE,WAEpCtG,KAAKuG,UAAYxC,GAAGC,WAAWnC,EAAK0E,WACpCvG,KAAKwG,SAAWzC,GAAGC,WAAWnC,EAAK2E,UACnCxG,KAAKyG,OAAS1C,GAAGC,WAAWnC,EAAK4E,QACjCzG,KAAK0G,cAAgB3C,GAAGC,WAAWnC,EAAK6E,eACxC1G,KAAK2G,SAAW5C,GAAGC,WAAWnC,EAAK8E,UACnC3G,KAAK4G,OAAS7C,GAAGC,WAAWnC,EAAK+E,QACjC5G,KAAK6G,SAAW9C,GAAGC,WAAWnC,EAAKgF,UACnC7G,KAAK8G,QAAU/C,GAAGC,WAAWnC,EAAKiF,SAElC9G,KAAK+G,UAAYhD,GAAGC,WAAWnC,EAAKkF,WACpC/G,KAAKgH,MAAQjD,GAAGC,WAAWnC,EAAKmF,OAChChH,KAAKiH,MAAQlD,GAAGC,WAAWnC,EAAKoF,OAChCjH,KAAKkH,OAASnD,GAAGC,WAAWnC,EAAKqF,QACjClH,KAAKmH,QAAUpD,GAAGC,WAAWnC,EAAKsF,SAClCnH,KAAKoH,QAAUrD,GAAGC,WAAWnC,EAAKuF,SAClCpH,KAAKqH,SAAWtD,GAAGC,WAAWnC,EAAKwF,UACnCrH,KAAKsH,SAAWvD,GAAGC,WAAWnC,EAAKyF,UAEnCtH,KAAKuH,UAAYxD,GAAGC,WAAWnC,EAAK0F,WACpCvH,KAAKwH,QAAUzD,GAAGC,WAAWnC,EAAK2F,SAClCxH,KAAKyH,WAAa1D,GAAGC,WAAWnC,EAAK4F,YACrCzH,KAAK0H,aAAe3D,GAAGC,WAAWnC,EAAK6F,cACvC1H,KAAK2H,WAAa5D,GAAGC,WAAWnC,EAAK8F,YACrC3H,KAAK4H,UAAY7D,GAAGC,WAAWnC,EAAK+F,WACpC5H,KAAK6H,WAAa9D,GAAGC,WAAWnC,EAAKgG,YACrC7H,KAAK8H,WAAa/D,GAAGC,WAAWnC,EAAKiG,YAErC9H,KAAK+H,OAAShE,GAAGE,gBAAgBpC,EAAKkG,OAAOtG,IAAI,SAAAuI,GAAK,OAAA,IAAIxF,EAAA/D,QAAMuJ,EAAEhJ,KAAMgJ,EAAEC,UAC1EjK,KAAKgI,OAASjE,GAAGE,gBAAgBpC,EAAKmG,OAAOvG,IAAI,SAAAyI,GAAK,OAAA,IAAI1F,EAAA/D,QAAMyJ,EAAElJ,KAAMkJ,EAAED,UAC1EjK,KAAKiI,MAAQlE,GAAGE,gBAAgBpC,EAAKoG,MAAMxG,IAAI,SAAA3C,GAAK,OAAA,IAAI0F,EAAA/D,QAAM3B,EAAEkC,KAAMlC,EAAEmL,UAExEjK,KAAKkI,KAAOnE,GAAGC,WAAWnC,EAAKqG,MAAMoC,OAAO,CAAEC,QAAS,CAAEC,UAAW,EAAGC,IAAK,EAAGC,IAAK,MACpF1K,KAAK2K,MAAQ5G,GAAGG,SAAS,WAAM,OAAAxB,EAAKqD,WAAarD,EAAKwD,YAAc,GAAGlG,MACvEA,KAAK4K,QAAU7G,GAAGG,SAAS,WAAM,OAAA2G,KAAKJ,IAAI/H,EAAKwD,YAAaxD,EAAKuD,SAASjG,MAC1EA,KAAKmI,MAAQpE,GAAGC,WAAWnC,EAAKsG,OAAOmC,OAAO,CAAEC,QAAS,CAAEC,UAAW,KACtExK,KAAK8K,WAAa/G,GAAGG,SAAS,WAAM,OAAAxB,EAAKwD,YAAcxD,EAAK4D,aAAatG,MACzEA,KAAKoI,WAAarE,GAAGC,WAAWnC,EAAKuG,YAAYkC,OAAO,CAAEC,QAAS,CAAEC,UAAW,KAChFxK,KAAKqI,SAAWtE,GAAGC,WAAWnC,EAAKwG,UAAUiC,OAAO,CAAEC,QAAS,CAAEC,UAAW,EAAGC,IAAK,EAAGC,IAAK,MAE5F1K,KAAKsI,QAAUvE,GAAGE,gBAAgBpC,EAAKyG,QAAQ7G,IAAI,SAAA0I,GAAK,OAAA,IAAI7F,EAAA7D,QAAU0J,EAAEnJ,KAAMmJ,EAAEC,gBAChFpK,KAAKuI,UAAYxE,GAAGE,gBAAgBpC,EAAK0G,UAAU9G,IAAI,SAAAhD,GAAK,OAAA,IAAI6F,EAAA7D,QAAUhC,EAAEuC,KAAMvC,EAAE2L,gBACpFpK,KAAKwI,UAAYzE,GAAGE,gBAAgBpC,EAAK2G,UAAU/G,IAAI,SAAA5C,GAAK,OAAA,IAAI0F,EAAA9D,QAAc5B,EAAEmC,KAAMnC,EAAEuL,YAAavL,EAAEwL,aAEvGrK,KAAKyI,MAAQ1E,GAAGE,gBAAgBpC,EAAK4G,MAAMhH,IAAI,SAAA/C,GAAK,OAAA,IAAI+F,EAAAhE,QAAK/B,MAE7DsB,KAAK+K,OAAShH,GAAGG,SAAS,WAAM,OAAAxB,EAAK2D,UAAY3D,EAAKwF,QAAQlI,MAC9DA,KAAK2J,OAAS,IAAItF,EAAA5D,QAAOT,KAAK+K,OAAQlJ,EAAK6H,QAAS7H,EAAK+H,OAAQ/H,EAAKgI,YAEtE7J,KAAKgL,MAAQjH,GAAGG,SAAS,WAAM,OAAAxB,EAAK0D,UAAY1D,EAAK4D,aAAatG,MAClEA,KAAK8J,UAAY/F,GAAGC,WAAWnC,EAAKiI,WAAa,GACjD9J,KAAKgL,MAAMC,UAAU,SAAAC,GACbxI,EAAKoH,YAAcoB,GAAKxI,EAAKoH,UAAUoB,IAC5ClL,MAEHA,KAAKmL,UAAYpH,GAAGG,SAAS,WAAM,OAAAxB,EAAK0D,UAAY1D,EAAK4D,aAAatG,MACtEA,KAAK+J,cAAgBhG,GAAGC,WAAWnC,EAAKkI,eAAiB,GACzD/J,KAAKmL,UAAUF,UAAU,SAAAC,GACjBxI,EAAKqH,gBAAkBmB,GAAKxI,EAAKqH,cAAcmB,IACpDlL,kBAqLX,IAAMkF,EAAW,6BAwBjBnB,GAAGqH,gBAAgBC,UAAY,CAC3BC,KAAM,SAACC,EAAsBC,GAEzB,IADA,IAAMC,EAA+B,cAC5B5M,GACL,IAAM6M,EAAM3J,SAASC,cAAc,QACnC0J,EAAIC,UAAUC,IAAI,iBAElBF,EAAIG,QAAQC,OAAS,UACrBJ,EAAIK,MAAQ,IAAMlN,EAAI,GACtBmN,EAAEN,GAAKO,UAEPR,EAAKjL,KAAKkL,GAEVA,EAAI5I,iBAAiB,eAAgB,WAEjC2I,EAAKS,QAAQ,SAACR,EAAsBrC,GAC5BA,GAASxK,GAAG6M,EAAIC,UAAUC,IAAI,mBAG1CF,EAAI5I,iBAAiB,eAAgB,WACjC2I,EAAKS,QAAQ,SAACR,GACVA,EAAIC,UAAUzK,OAAO,oBAlBxBrC,EAAI,EAAGA,EAAI2M,IAAgBd,IAAK7L,MAAhCA,GAuBT,IAAMsN,EAAWpK,SAASC,cAAc,OACxCmK,EAASR,UAAUC,IAAI,aACvBO,EAASC,UAAY,UACrBD,EAASN,QAAQC,OAAS,UAC1BK,EAASJ,MAAQ,QACjBI,EAASrJ,iBAAiB,QAAS,WAC/B0I,IAAgBvB,MAAM,KAE1BsB,EAAQjJ,YAAY6J,GACpBH,EAAEG,GAAUF,UAEZR,EAAKS,QAAQ,SAACR,EAAsBrC,GAChCkC,EAAQjJ,YAAYoJ,GACpBA,EAAI5I,iBAAiB,QAAS,WAC1B0I,IAAgBvB,MAAMZ,EAAQ,QAI1CgD,OAAQ,SAACd,EAAsBC,GAG3B,IAFA,IAAMvB,EAAQuB,IAAgBvB,QACxBwB,EAAOF,EAAQe,uBAAuB,iBACnCzN,EAAI,EAAGA,EAAI4M,EAAKjM,OAAQX,IAAK,CAClC,IAAM6M,EAAuBD,EAAK5M,GAClC6M,EAAIvJ,MAAMoK,gBAAkB,KAC5Bb,EAAIvJ,MAAMqK,YAAc,KACpB3N,EAAIoL,IACJyB,EAAIvJ,MAAMoK,gBAAkB,oBAC5Bb,EAAIvJ,MAAMqK,YAAc,wBAMxCzI,GAAGqH,gBAAgBqB,kBAAoB,CACnCnB,KAAM,SAACC,EAAsBC,GACzB,IAAK,IAAI3M,EAAI,EAAGA,EAAI2M,IAAgBd,IAAK7L,IAAK,CAC1C,IAAM6M,EAAM3J,SAASC,cAAc,QACnC0J,EAAIC,UAAUC,IAAI,iBAClBL,EAAQjJ,YAAYoJ,KAG5BW,OAAQ,SAACd,EAAsBC,GAG3B,IAFA,IAAMvB,EAAQuB,IAAgBvB,QACxBwB,EAAOF,EAAQ1C,qBAAqB,QACjChK,EAAI,EAAGA,EAAI4M,EAAKjM,OAAQX,IAC7B4M,EAAK5M,GAAG8M,UAAUzK,OAAO,UACrBrC,EAAIoL,GACJwB,EAAK5M,GAAG8M,UAAUC,IAAI,YAMtC7H,GAAGqH,gBAAgBsB,KAAO,CACtBpB,KAAM,SAACC,EAAsBC,GAEzB,IADA,IAAMC,EAA+B,cAC5B5M,GACL,IAAM6M,EAAM3J,SAASC,cAAc,QACnC0J,EAAIC,UAAUC,IAAI,iBAElBL,EAAQjJ,YAAYoJ,GAEpBD,EAAKjL,KAAKkL,GAEVA,EAAI5I,iBAAiB,eAAgB,WAEjC2I,EAAKS,QAAQ,SAACR,EAAsBrC,GAC5BA,GAASxK,GAAG6M,EAAIC,UAAUC,IAAI,mBAG1CF,EAAI5I,iBAAiB,eAAgB,WACjC2I,EAAKS,QAAQ,SAACR,GACVA,EAAIC,UAAUzK,OAAO,oBAhBxBrC,EAAI,EAAGA,EAAI,GAAIA,MAAfA,GAoBT4M,EAAKS,QAAQ,SAACR,EAAsBrC,GAChCqC,EAAI5I,iBAAiB,QAAS,WAC1B0I,IAAgBvB,MAAMZ,EAAQ,QAI1CgD,OAAQ,SAACd,EAAsBC,GAI3B,IAHA,IAAMkB,EAAOlB,IAAgBvB,QACvB0C,EAAQnB,IAAgBmB,QACxBlB,EAAOF,EAAQ1C,qBAAqB,QACjChK,EAAI,EAAGA,EAAI4M,EAAKjM,OAAQX,IACzBA,EAAI6N,EAAMjB,EAAK5M,GAAG8M,UAAUC,IAAI,cAC/BH,EAAK5M,GAAG8M,UAAUzK,OAAO,cAE1BrC,EAAI8N,EAAOlB,EAAK5M,GAAG8M,UAAUzK,OAAO,UACnCuK,EAAK5M,GAAG8M,UAAUC,IAAI,YAKvC7H,GAAGqH,gBAAgBwB,gBAAkB,CACjCtB,KAAM,SAACC,GACHpL,OAAO0M,WAAW,WACVtB,EAAQtB,OACZsB,EAAQzC,SACT,KAUL/E,GAAG+I,UAAWvC,QAAU,SAACnH,EAAa2J,GAIxC,IAAMvC,EAAYuC,EAAKvC,WAAa,EAC9BC,EAAMsC,EAAKtC,MAAQuC,EAAAA,EACnBtC,EAAMqC,EAAKrC,KAAOsC,EAAAA,EAGlB3J,EAASU,GAAGkJ,aAAa,CAC3BC,KAAM9J,EACN+J,MAAO,SAACC,GACJ,IAAMC,EAAUjK,IACVkK,EAAqBzC,KAAK0C,IAAI,GAAI/C,GAClCgD,EAAgBC,MAAML,GAAY,GAAKA,EACzCM,EAAe7C,KAAK8C,MAAMH,EAAgBF,GAAsBA,EAChEI,EAAejD,EAAKiD,EAAejD,EACfC,EAAfgD,IAAoBA,EAAehD,GAGxCgD,IAAiBL,EACjBjK,EAAOsK,GAKHN,IAAaC,GACbjK,EAAOwK,kBAAkBF,MAItCpD,OAAO,CAAEuD,OAAQ,WAMpB,OAHAxK,EAAOD,KAGAC,8KC9hBX,IAAAyK,GA2BWA,EAAAhO,UAAAiO,SAAP,WACI,OAAO/N,KAAK0J,UAAY1J,KAAK4J,SAAW5J,KAAK6J,aAAe7J,KAAKgO,eAG9DF,EAAAhO,UAAAmO,WAAP,WACQjO,KAAK+N,WACL/N,KAAK0J,QAAQ1J,KAAK0J,UAAY,GAER,EAAjB1J,KAAK0J,WACV1J,KAAK0J,QAAQ1J,KAAK0J,UAAY,GAC9B1J,KAAK4J,OAAO5J,KAAK4J,SAAW,IAEP,EAAhB5J,KAAK4J,UACV5J,KAAK4J,OAAO5J,KAAK4J,SAAW,GAC5B5J,KAAK6J,WAAW7J,KAAK6J,aAAe,IAGpClI,MAAM,YAIPmM,EAAAhO,UAAAoO,UAAP,WACQlO,KAAK+N,WACL/N,KAAK4J,OAAO5J,KAAK4J,SAAW,GAEN,EAAjB5J,KAAK0J,WACV1J,KAAK0J,QAAQ1J,KAAK0J,UAAY,GAC9B1J,KAAK4J,OAAO5J,KAAK4J,SAAW,IAEP,EAAhB5J,KAAK4J,UACV5J,KAAK4J,OAAO5J,KAAK4J,SAAW,GAC5B5J,KAAK6J,WAAW7J,KAAK6J,aAAe,IAGpClI,MAAM,YAIPmM,EAAAhO,UAAAqO,cAAP,WACQnO,KAAK+N,WACL/N,KAAK6J,WAAW7J,KAAK6J,aAAe,GAEd,EAAjB7J,KAAK0J,WACV1J,KAAK0J,QAAQ1J,KAAK0J,UAAY,GAC9B1J,KAAK6J,WAAW7J,KAAK6J,aAAe,IAEf,EAAhB7J,KAAK4J,UACV5J,KAAK4J,OAAO5J,KAAK4J,SAAW,GAC5B5J,KAAK6J,WAAW7J,KAAK6J,aAAe,IAGpClI,MAAM,YAIPmM,EAAAhO,UAAAsO,SAAP,WACIpO,KAAK0J,QAAQ,GACb1J,KAAK4J,OAAO,GACZ5J,KAAK6J,WAAW,IAExBiE,GAjFI,SAAAA,EAAmBO,EAAiD3E,EAAkBE,EAAiBC,GAAvG,IAAAnH,EAAA1C,KACIA,KAAKgO,YAAcK,EACnBrO,KAAK0J,QAAU3F,GAAGC,WAAW0F,GAAW,GACxC1J,KAAK4J,OAAS7F,GAAGC,WAAW4F,GAAU,GACtC5J,KAAK6J,WAAa9F,GAAGC,WAAW6F,GAAc,GAE9CwE,EAAsBpD,UAAU,SAAAC,GAC5B,KAAOxI,EAAKgH,UAAYhH,EAAKkH,SAAWlH,EAAKmH,aAAeqB,GACnC,EAAjBxI,EAAKgH,UACLhH,EAAKgH,QAAQhH,EAAKgH,UAAY,GAET,EAAhBhH,EAAKkH,SACVlH,EAAKkH,OAAOlH,EAAKkH,SAAW,GAG5BlH,EAAKmH,WAAWnH,EAAKmH,aAAe,IAG7C7J,kBAiEX+D,GAAGqH,gBAAgBkD,cAAgB,CAC/BhD,KAAM,SAACC,GACH,IAAK,IAAI1M,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAM0P,EAAOxM,SAASC,cAAc,QACpCuM,EAAK5C,UAAUC,IAAI,UACnB2C,EAAK5C,UAAUC,IAAI,QACnBL,EAAQjJ,YAAYiM,KAG5BlC,OAAQ,SAACd,EAAsBC,GAG3B,IAFA,IAAMgD,EAAYhD,IACZiD,EAAQlD,EAAQ1C,qBAAqB,QAClChK,EAAI,EAAGA,EAAI4P,EAAMjP,OAAQX,IAC1BA,EAAI2P,EAAU3E,cACd4E,EAAM5P,GAAG8M,UAAUzK,OAAO,QAC1BuN,EAAM5P,GAAG8M,UAAUzK,OAAO,WAC1BuN,EAAM5P,GAAG8M,UAAUzK,OAAO,UAC1BuN,EAAM5P,GAAG8M,UAAUC,IAAI,eAElB/M,EAAI2P,EAAU3E,aAAe2E,EAAU5E,UAC5C6E,EAAM5P,GAAG8M,UAAUzK,OAAO,QAC1BuN,EAAM5P,GAAG8M,UAAUzK,OAAO,WAC1BuN,EAAM5P,GAAG8M,UAAUzK,OAAO,cAC1BuN,EAAM5P,GAAG8M,UAAUC,IAAI,WAElB/M,EAAI2P,EAAU3E,aAAe2E,EAAU5E,SAAW4E,EAAU9E,WACjE+E,EAAM5P,GAAG8M,UAAUzK,OAAO,QAC1BuN,EAAM5P,GAAG8M,UAAUzK,OAAO,UAC1BuN,EAAM5P,GAAG8M,UAAUzK,OAAO,cAC1BuN,EAAM5P,GAAG8M,UAAUC,IAAI,aAGvB6C,EAAM5P,GAAG8M,UAAUzK,OAAO,WAC1BuN,EAAM5P,GAAG8M,UAAUzK,OAAO,UAC1BuN,EAAM5P,GAAG8M,UAAUzK,OAAO,cAC1BuN,EAAM5P,GAAG8M,UAAUC,IAAI,SAGvB/M,EAAI2P,EAAUR,cACdS,EAAM5P,GAAG8M,UAAUzK,OAAO,UAG1BuN,EAAM5P,GAAG8M,UAAUC,IAAI,kGC/HnC,SAJJ8C,EAIuB1N,EAAeoJ,GAC9BpK,KAAKgB,KAAO+C,GAAGC,WAAWhD,GAAQ,IAClChB,KAAKoK,YAAcrG,GAAGC,WAAWoG,GAAe,sGCNxD,IAAAuE,GAaWA,EAAA7O,UAAA8O,eAAP,WACI,OAAU5O,KAAKqK,WAAU,IAAIrK,KAAKgB,QAE1C2N,GAVI,SAAAA,EAAmB3N,EAAeoJ,EAAsBC,GACpDrK,KAAKgB,KAAO+C,GAAGC,WAAWhD,GAAQ,IAClChB,KAAKoK,YAAcrG,GAAGC,WAAWoG,GAAe,IAChDpK,KAAKqK,SAAWtG,GAAGC,WAAWqG,GAAY,GAC1CrK,KAAK6O,YAAc9K,GAAGG,SAASlE,KAAK4O,eAAgB5O,wGCNxD,SAJJ8O,EAIuB9N,EAAeiJ,GAC9BjK,KAAKgB,KAAO+C,GAAGC,WAAWhD,GAAQ,IAClChB,KAAKiK,MAAQlG,GAAGC,WAAWiG,GAAS,qGCHxC,SAHJ8E,EAGuB9E,GACfjK,KAAKiK,MAAQlG,GAAGC,WAAWiG,GAAS,sGCJ5C,IAAAvF,EAAA1F,EAAA,WAEAgQ,GAuBWA,EAAAlP,UAAAmP,kBAAP,SAAyBC,GAAzB,IAAAxM,EAAA1C,KACI,OAAO,WACH0C,EAAKyM,SAASzM,EAAKyM,WAAaD,KAIjCF,EAAAlP,UAAAsP,SAAP,WACmB,IAAIC,EAAUrP,MACtBsP,aAEfN,GA1BI,SAAAA,IAAA,IAAAtM,EAAA1C,KACIA,KAAKmP,SAAWpL,GAAGC,WAAW,GAC9BhE,KAAKuP,WAAaxL,GAAGE,gBAAgB,IACrCjE,KAAKwP,kBAAoBzL,GAAGC,YAAW,GACvChE,KAAKyP,mBAAqB1L,GAAGG,SAAS,WAClC,OAAIxB,EAAK8M,qBAAoD,IAA7B9M,EAAK6M,aAAa/P,QAAsB,EAEjEkD,EAAK6M,aAAaG,OAAO,SAAC/C,EAAenO,GAC5C,OAAOmO,EAAQnO,EAAEkR,OAAO,SAAC/C,EAAegD,GAAc,OAAAhD,GAAa,EAAJgD,EAAQ,EAAI,IAAI,IAChF,IACJ3P,MACHA,KAAK4P,0BAA4B7L,GAAGG,SAAS,WACzC,OAAoC,GAA7BxB,EAAK+M,qBAA4B,GAAK/M,EAAK+M,qBAAuB,OAC1EzP,kBAeX+D,GAAGqH,gBAAgBhH,KAAO,CACtBiI,OAAQ,SAACd,EAAsBC,GAC3B,IAAM+D,EAAa/D,GAAAA,GACnB,GAA0B,IAAtB+D,EAAW/P,OAAf,CAKA,IAAIqQ,EAAOtE,EAAQe,uBAAuB,cAC1C,GAAIuD,EAAKrQ,SAAW+P,EAAW/P,OAAQ,CACnC,IAAMsQ,EAAW/N,SAASC,cAAc,OACxC8N,EAASnE,UAAUC,IAAI,cAEvB,IADA,IAAMmE,EAAQR,EAAWA,EAAW/P,OAAS,GACpCX,EAAI,EAAGA,EAAIkR,EAAMvQ,OAAQX,IAAK,CACnC,IAAM0P,EAAOxM,SAASC,cAAc,QAC9BgO,EAAQtL,EAAAuL,YAAY,EAAG,IAC7B1B,EAAKpM,MAAM+N,UAAY,4BAA4BF,EAAK,uBACxDzB,EAAK5C,UAAUC,IAAI,QACnBkE,EAASxN,YAAYiM,GAEzBhD,EAAQjJ,YAAYwN,GACpBD,EAAOtE,EAAQe,uBAAuB,cAG1C,IAASzN,EAAI,EAAGA,EAAI0Q,EAAW/P,OAAQX,IACnC,CAAMkR,EAAQR,EAAW1Q,GAEzB,IAFA,IACM4P,EAAQoB,EAAKhR,GAAGyN,uBAAuB,QACpC6D,EAAI,EAAGA,EAAIJ,EAAMvQ,OAAQ2Q,IAAK,CACnC,IAAMC,EAAOL,EAAMI,GACb5B,EAAwBE,EAAM0B,IAEtB,IAAVC,IACA7B,EAAKpM,MAAM+N,UAAY,KACvB3B,EAAKpM,MAAMkO,gBAAkB,oBAAoBD,EAAI,iBA7B7D7E,EAAQa,UAAY,KAoChC,IAAAiD,GAmBWA,EAAAvP,UAAAwP,UAAP,WAAA,IAAA5M,EAAA1C,KACIA,KAAKsQ,SAASd,mBAAkB,GAChCxP,KAAKsQ,SAASf,WAAWgB,YACzB,IAAK,IAAI1R,EAAI,EAAGA,EAAImB,KAAKwQ,mBAAoB3R,IAAKmB,KAAKyQ,qBAAqBjQ,MAAM,GAClFR,KAAKsQ,SAASf,WAAW/O,KAAKR,KAAKyQ,sBAEnCzQ,KAAK0Q,gBAAkBvQ,OAAOwQ,YAAY,WACtC,IAAMC,EAAWlM,EAAAG,cAAc,EAAG,IAMlC,GALiB,KAAb+L,GAAiBlO,EAAKmO,kBAC1BnO,EAAK+N,qBAAqB/N,EAAKoO,cAAgBF,EAC/ClO,EAAK4N,SAASf,WAAWwB,QAAQrO,EAAK4N,SAASf,aAAa7M,EAAKsO,eAAgBtO,EAAK+N,sBACtF/N,EAAKoO,eAEDpO,EAAKoO,eAAiBpO,EAAK8N,mBAAoB,CAC/C,GAA6B,IAAzB9N,EAAKmO,gBAGL,OAFA1Q,OAAO8Q,cAAcvO,EAAKgO,sBAC1BhO,EAAK4N,SAASd,mBAAkB,GAIhC9M,EAAKsO,gBACLtO,EAAK8N,mBAAqB9N,EAAKmO,gBAC/BnO,EAAKmO,gBAAkB,EACvBnO,EAAKoO,aAAe,EACpBpO,EAAK+N,qBAAuB,GAC5B,IAAK,IAAI5R,EAAI,EAAGA,EAAI6D,EAAK8N,mBAAoB3R,IAAK6D,EAAK+N,qBAAqBjQ,MAAM,GAClFkC,EAAK4N,SAASf,WAAW/O,KAAKkC,EAAK+N,wBAG5C,MAEXpB,GAzCI,SAAAA,EAAmB6B,GACflR,KAAKsQ,SAAWY,EAChBlR,KAAKgR,cAAgB,EACrBhR,KAAK8Q,aAAe,EACpB9Q,KAAKwQ,mBAAqBU,EAAQ/B,WAClCnP,KAAKyQ,qBAAuB,GAC5BzQ,KAAK6Q,gBAAkB,EACvB7Q,KAAK0Q,gBAAkB,wGC7F/B,IAAAS,EAAAnS,EAAA,iBACAsF,EAAAtF,EAAA,yBACAuF,EAAAvF,EAAA,6BACAwF,EAAAxF,EAAA,qBACAyF,EAAAzF,EAAA,oBAEMoS,EAAe,CACjB1C,UAAWpK,EAAA7D,QACXkO,cAAepK,EAAA9D,QACfqO,MAAOtK,EAAA/D,QACPsO,KAAMtK,EAAAhE,SAEV4Q,OAAOC,eAAenR,OAAQ,eAAgB,CAAE8J,MAAOmH,IAEvD,IAAMG,EAAM,IAAIJ,EAAA1Q,QAMhB,SAAS+Q,EAAeC,GAChBA,EAAQzF,EAAE,2BAA2BC,UACpCD,EAAE,2BAA2BC,QAAQ,WAP9ClI,GAAG2N,cAAcH,GAGjBF,OAAOC,eAAenR,OAAQ,MAAO,CAAE8J,MAAOsH,IAO9CpR,OAAO2C,iBAAiB,SAAU,WAC9B0O,EAAoC,KAArBrR,OAAOwR,cAE1BH,EAAoC,KAArBrR,OAAOwR,uNC5BtBrS,EAAAuF,cAAA,SAA8B+M,EAAkBC,SAK5C,YAL0B,IAAAD,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,IACxCA,EAAeD,IACdA,GAADE,EAAA,CAAAD,EAAAD,IAAC,GAAcC,EAAAC,EAAA,IAGZjH,KAAKkH,MAAMlH,KAAKmH,UAAYH,EAAeD,IAAiBA,GAGvEtS,EAAA2Q,YAAA,SAA4B2B,EAAkBC,SAK1C,YALwB,IAAAD,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,GACtCA,EAAeD,IACdA,GAADE,EAAA,CAAAD,EAAAD,IAAC,GAAcC,EAAAC,EAAA,IAGZjH,KAAKmH,UAAYH,EAAeD,GAAgBA","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Character, { CharacterJson } from \"./Character/Character\";\r\nimport Dice from \"./Dice\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport default class Application {\r\n    public mode: KnockoutObservable<string>;\r\n    public characterId: KnockoutObservable<number>;\r\n    public characters: KnockoutObservableArray<Character>;\r\n    public realCharacters: KnockoutComputed<Array<Character>>;\r\n    public character: KnockoutComputed<Character>;\r\n    public dice: Dice;\r\n    private _previousSection: string;\r\n\r\n    public constructor() {\r\n        const savedCharacters: Array<Character> = (JSON.parse(window.localStorage.getItem(\"characters\")) || []).map(Character.fromJson);\r\n        savedCharacters.unshift(Character.newCharacter());\r\n        savedCharacters[0].ghost = true;\r\n\r\n        this.mode = ko.observable(\"list\");\r\n        this.characterId = ko.observable(0);\r\n        this.characters = ko.observableArray(savedCharacters);\r\n        this.realCharacters = ko.computed(() => this.characters().filter(c => !c.ghost), this);\r\n        this.character = ko.computed(() => this.characters()[this.characterId()], this);\r\n        this.dice = new Dice();\r\n        this._previousSection = null;\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.mode() === \"sheet\") this.mode(\"list\");\r\n        else {\r\n            this.mode(\"sheet\");\r\n\r\n            if (this._previousSection) window.location.hash = this._previousSection;\r\n        }\r\n    }\r\n\r\n    public newCharacter(): void {\r\n        this.characters.push(Character.newCharacter());\r\n        this.characterId(this.characters().length - 1);\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public selectCharacter(character: Character): void {\r\n        this.characterId(this.characters.indexOf(character));\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public deleteCharacter(character: Character): void {\r\n        // swal({\r\n        //     title: `Delete ${this.character().name()}`,\r\n        //     text: \"Are you sure? (As long as you don't save, your character won't be gone.)\",\r\n        //     icon: \"warning\",\r\n        //     buttons: [\"Cancel\", \"Delete\"],\r\n        //     dangerMode: true\r\n        // })\r\n        // .then((willDelete: boolean) => {\r\n        //     if (willDelete) {\r\n        //         const id = this.characterId();\r\n        //         this.characterId(0);\r\n        //         this.characters.remove(this.characters()[id]);\r\n        //         this.mode(\"list\");\r\n        //     }\r\n        // });\r\n        if (confirm(`Are you sure you want to delete ${this.character().name()}? (As long as you don't save, your character won't be gone.)`)) {\r\n            const id = this.characterId();\r\n            this.characterId(0);\r\n            this.characters.remove(this.characters()[id]);\r\n            this.mode(\"list\");\r\n        }\r\n    }\r\n\r\n    public saveCharacters(): void {\r\n        window.localStorage.setItem(\"characters\", JSON.stringify(this.realCharacters().map(c => c.toJson())));\r\n        // swal(\"Characters saved successfully!\", {\r\n        //     buttons: [],\r\n        //     timer: 1000,\r\n        //     icon: \"success\"\r\n        // });\r\n        alert(\"Characters saved successfully!\");\r\n    }\r\n\r\n    public downloadCharacter(): void {\r\n        const json = JSON.stringify(this.character().toJson());\r\n\r\n        const dl = document.createElement(\"a\");\r\n        dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${encodeURIComponent(json)}`);\r\n        dl.setAttribute(\"download\", `${this.character().name()}.json`);\r\n\r\n        dl.style.display = \"none\";\r\n        document.body.appendChild(dl);\r\n\r\n        dl.click();\r\n\r\n        document.body.removeChild(dl);\r\n    }\r\n\r\n    public uploadCharacter(): void {\r\n        const ul = document.createElement(\"input\");\r\n        ul.type = \"file\";\r\n        ul.accept = \".json\";\r\n        ul.style.display = \"none\";\r\n\r\n        ul.addEventListener(\"change\", e => {\r\n            const file = ul.files[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const json = e.target.result;\r\n                this.characters.push(Character.fromJson(JSON.parse(json)));\r\n                this.characterId(this.characters().length - 1);\r\n                this.mode(\"sheet\");\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n\r\n        document.body.appendChild(ul);\r\n\r\n        ul.click();\r\n\r\n        document.body.removeChild(ul);\r\n    }\r\n\r\n    public switchMode(mode: string): () => void {\r\n        return () => {\r\n            if (this.mode() !== \"list\" && document.getElementById(mode)) {\r\n                this._previousSection = mode;\r\n            }\r\n            else this._previousSection = null;\r\n\r\n            window.location.hash = \"\";\r\n            this.mode(mode);\r\n        }\r\n    }\r\n}","import Damage from \"./Damage\";\r\nimport Equipment from \"./Equipment\";\r\nimport InventoryItem from \"./InventoryItem\";\r\nimport Merit from \"./Merit\";\r\nimport Note from \"./Note\";\r\nimport { randomInteger } from \"../utils\";\r\n\r\nexport default class Character {\r\n    public ghost: boolean = false;\r\n\r\n    public name: KnockoutObservable<string>;\r\n    public player: KnockoutObservable<string>;\r\n    public age: KnockoutObservable<number>;\r\n    public vice: KnockoutObservable<string>;\r\n    public virtue: KnockoutObservable<string>;\r\n    public origins: KnockoutObservable<string>;\r\n    public gender: KnockoutObservable<string>;\r\n    public concept: KnockoutObservable<string>;\r\n    public chronicle: KnockoutObservable<string>;\r\n\r\n    public intelligence: KnockoutObservable<number>;\r\n    public strength: KnockoutObservable<number>;\r\n    public presence: KnockoutObservable<number>;\r\n    public wits: KnockoutObservable<number>;\r\n    public dexterity: KnockoutObservable<number>;\r\n    public manipulation: KnockoutObservable<number>;\r\n    public resolve: KnockoutObservable<number>;\r\n    public stamina: KnockoutObservable<number>;\r\n    public composure: KnockoutObservable<number>;\r\n\r\n    public academics: KnockoutObservable<number>;\r\n    public robotics: KnockoutObservable<number>;\r\n    public crafts: KnockoutObservable<number>;\r\n    public investigation: KnockoutObservable<number>;\r\n    public medicine: KnockoutObservable<number>;\r\n    public occult: KnockoutObservable<number>;\r\n    public politics: KnockoutObservable<number>;\r\n    public science: KnockoutObservable<number>;\r\n    \r\n    public athletics: KnockoutObservable<number>;\r\n    public brawl: KnockoutObservable<number>;\r\n    public drive: KnockoutObservable<number>;\r\n    public ranged: KnockoutObservable<number>;\r\n    public larceny: KnockoutObservable<number>;\r\n    public stealth: KnockoutObservable<number>;\r\n    public survival: KnockoutObservable<number>;\r\n    public weaponry: KnockoutObservable<number>;\r\n\r\n    public animalKen: KnockoutObservable<number>;\r\n    public empathy: KnockoutObservable<number>;\r\n    public expression: KnockoutObservable<number>;\r\n    public intimidation: KnockoutObservable<number>;\r\n    public persuasion: KnockoutObservable<number>;\r\n    public socialize: KnockoutObservable<number>;\r\n    public streetwise: KnockoutObservable<number>;\r\n    public subterfuge: KnockoutObservable<number>;\r\n\r\n    public merits: KnockoutObservableArray<Merit>;\r\n    public spells: KnockoutObservableArray<Merit>;\r\n    public flaws: KnockoutObservableArray<Merit>;\r\n\r\n    public size: KnockoutObservable<number>;\r\n    public speed: KnockoutComputed<number>;\r\n    public defense: KnockoutComputed<number>;\r\n    public armor: KnockoutObservable<number>;\r\n    public initiative: KnockoutComputed<number>;\r\n    public experience: KnockoutObservable<number>;\r\n    public morality: KnockoutObservable<number>;\r\n\r\n    public weapons: KnockoutObservableArray<Equipment>;\r\n    public equipment: KnockoutObservableArray<Equipment>;\r\n    public inventory: KnockoutObservableArray<InventoryItem>;\r\n\r\n    public notes: KnockoutObservableArray<Note>;\r\n\r\n    public health: KnockoutComputed<number>;\r\n    public damage: Damage;\r\n\r\n    public magic: KnockoutComputed<number>;\r\n    public usedMagic: KnockoutObservable<number>;\r\n\r\n    public willpower: KnockoutComputed<number>;\r\n    public usedWillpower: KnockoutObservable<number>;\r\n\r\n    public constructor(json: CharacterJson) {\r\n        this.name = ko.observable(json.name);\r\n        this.player = ko.observable(json.player);\r\n        this.age = ko.observable(json.age).extend({ numeric: { precision: 0 } });\r\n        this.vice = ko.observable(json.vice);\r\n        this.virtue = ko.observable(json.virtue);\r\n        this.origins = ko.observable(json.origins);\r\n        this.gender = ko.observable(json.gender);\r\n        this.concept = ko.observable(json.concept);\r\n        this.chronicle = ko.observable(json.chronicle);\r\n\r\n        this.intelligence = ko.observable(json.intelligence);\r\n        this.strength = ko.observable(json.strength);\r\n        this.presence = ko.observable(json.presence);\r\n        this.wits = ko.observable(json.wits);\r\n        this.dexterity = ko.observable(json.dexterity);\r\n        this.manipulation = ko.observable(json.manipulation);\r\n        this.resolve = ko.observable(json.resolve);\r\n        this.stamina = ko.observable(json.stamina);\r\n        this.composure = ko.observable(json.composure);\r\n\r\n        this.academics = ko.observable(json.academics);\r\n        this.robotics = ko.observable(json.robotics);\r\n        this.crafts = ko.observable(json.crafts);\r\n        this.investigation = ko.observable(json.investigation);\r\n        this.medicine = ko.observable(json.medicine);\r\n        this.occult = ko.observable(json.occult);\r\n        this.politics = ko.observable(json.politics);\r\n        this.science = ko.observable(json.science);\r\n\r\n        this.athletics = ko.observable(json.athletics);\r\n        this.brawl = ko.observable(json.brawl);\r\n        this.drive = ko.observable(json.drive);\r\n        this.ranged = ko.observable(json.ranged);\r\n        this.larceny = ko.observable(json.larceny);\r\n        this.stealth = ko.observable(json.stealth);\r\n        this.survival = ko.observable(json.survival);\r\n        this.weaponry = ko.observable(json.weaponry);\r\n\r\n        this.animalKen = ko.observable(json.animalKen);\r\n        this.empathy = ko.observable(json.empathy);\r\n        this.expression = ko.observable(json.expression);\r\n        this.intimidation = ko.observable(json.intimidation);\r\n        this.persuasion = ko.observable(json.persuasion);\r\n        this.socialize = ko.observable(json.socialize);\r\n        this.streetwise = ko.observable(json.streetwise);\r\n        this.subterfuge = ko.observable(json.subterfuge);\r\n\r\n        this.merits = ko.observableArray(json.merits.map(m => new Merit(m.name, m.value)));\r\n        this.spells = ko.observableArray(json.spells.map(s => new Merit(s.name, s.value)));\r\n        this.flaws = ko.observableArray(json.flaws.map(f => new Merit(f.name, f.value)));\r\n\r\n        this.size = ko.observable(json.size).extend({ numeric: { precision: 0, min: 1, max: 10 } });\r\n        this.speed = ko.computed(() => this.strength() + this.dexterity() + 5, this);\r\n        this.defense = ko.computed(() => Math.min(this.dexterity(), this.wits()), this);\r\n        this.armor = ko.observable(json.armor).extend({ numeric: { precision: 0 } });\r\n        this.initiative = ko.computed(() => this.dexterity() + this.composure(), this);\r\n        this.experience = ko.observable(json.experience).extend({ numeric: { precision: 0 } });\r\n        this.morality = ko.observable(json.morality).extend({ numeric: { precision: 0, min: 1, max: 10 } });\r\n\r\n        this.weapons = ko.observableArray(json.weapons.map(w => new Equipment(w.name, w.description)));\r\n        this.equipment = ko.observableArray(json.equipment.map(e => new Equipment(e.name, e.description)));\r\n        this.inventory = ko.observableArray(json.inventory.map(i => new InventoryItem(i.name, i.description, i.quantity)));\r\n\r\n        this.notes = ko.observableArray(json.notes.map(n => new Note(n)));\r\n\r\n        this.health = ko.computed(() => this.stamina() + this.size(), this);\r\n        this.damage = new Damage(this.health, json.bashing, json.lethal, json.aggravated);\r\n\r\n        this.magic = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedMagic = ko.observable(json.usedMagic || 0);\r\n        this.magic.subscribe(val => {\r\n            if (this.usedMagic() > val) this.usedMagic(val);\r\n        }, this);\r\n\r\n        this.willpower = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedWillpower = ko.observable(json.usedWillpower || 0);\r\n        this.willpower.subscribe(val => {\r\n            if (this.usedWillpower() > val) this.usedWillpower(val);\r\n        }, this);\r\n    }\r\n\r\n    public static newCharacter(): Character {\r\n        return new Character({\r\n            name: randomName(),\r\n            player: \"\",\r\n            age: 0,\r\n            vice: \"\",\r\n            virtue: \"\",\r\n            origins: \"\",\r\n            gender: \"\",\r\n            concept: \"\",\r\n            chronicle: \"\",\r\n\r\n            intelligence: 1,\r\n            strength: 1,\r\n            presence: 1,\r\n            wits: 1,\r\n            dexterity: 1,\r\n            manipulation: 1,\r\n            resolve: 1,\r\n            stamina: 1,\r\n            composure: 1,\r\n\r\n            academics: 0,\r\n            robotics: 0,\r\n            crafts: 0,\r\n            investigation: 0,\r\n            medicine: 0,\r\n            occult: 0,\r\n            politics: 0,\r\n            science: 0,\r\n\r\n            athletics: 0,\r\n            brawl: 0,\r\n            drive: 0,\r\n            ranged: 0,\r\n            larceny: 0,\r\n            stealth: 0,\r\n            survival: 0,\r\n            weaponry: 0,\r\n\r\n            animalKen: 0,\r\n            empathy: 0,\r\n            expression: 0,\r\n            intimidation: 0,\r\n            persuasion: 0,\r\n            socialize: 0,\r\n            streetwise: 0,\r\n            subterfuge: 0,\r\n\r\n            merits: [],\r\n            spells: [],\r\n            flaws: [],\r\n\r\n            size: 5,\r\n            armor: 0,\r\n            experience: 0,\r\n            morality: 7,\r\n\r\n            weapons: [],\r\n            equipment: [],\r\n            inventory: [],\r\n\r\n            notes: []\r\n        });\r\n    }\r\n\r\n    public static fromJson(json: CharacterJson): Character {\r\n        return new Character(json);\r\n    }\r\n\r\n    public onComponentClick(_: any, e: Event): void {\r\n        const element = <HTMLElement>e.currentTarget;\r\n        element.getElementsByTagName(\"input\")[0].focus();\r\n    }\r\n\r\n    public newItem<T>(observableArray: KnockoutObservableArray<T>, constructor: new () => T): () => void {\r\n        return () => {\r\n            observableArray.push(new constructor());\r\n        };\r\n    }\r\n\r\n    public removeItem<T>(observableArray: KnockoutObservableArray<T>): (item: T) => void {\r\n        return (item: T) => {\r\n            observableArray.remove(item);\r\n        };\r\n    }\r\n\r\n    public moveItem<T>(observableArray: KnockoutObservableArray<T>, direction: number): (item: T) => void {\r\n        return (item: T) => {\r\n            const index = observableArray.indexOf(item);\r\n            const newIndex = index + direction;\r\n\r\n            if (newIndex < 0 || newIndex >= observableArray().length) return;\r\n\r\n            observableArray.splice(index, 1);\r\n            observableArray.splice(newIndex, 0, item);\r\n        };\r\n    }\r\n\r\n    public clearUsed(usedObservable: KnockoutObservable<number>): () => void {\r\n        return () => {\r\n            usedObservable(0);\r\n        };\r\n    }\r\n\r\n    public toJson(): CharacterJson {\r\n        return {\r\n            name: this.name(),\r\n            player: this.player(),\r\n            age: this.age(),\r\n            vice: this.vice(),\r\n            virtue: this.virtue(),\r\n            origins: this.origins(),\r\n            gender: this.gender(),\r\n            concept: this.concept(),\r\n            chronicle: this.chronicle(),\r\n\r\n            intelligence: this.intelligence(),\r\n            wits: this.wits(),\r\n            resolve: this.resolve(),\r\n            strength: this.strength(),\r\n            dexterity: this.dexterity(),\r\n            stamina: this.stamina(),\r\n            presence: this.presence(),\r\n            manipulation: this.manipulation(),\r\n            composure: this.composure(),\r\n\r\n            bashing: this.damage.bashing(),\r\n            lethal: this.damage.lethal(),\r\n            aggravated: this.damage.aggravated(),\r\n            usedMagic: this.usedMagic(),\r\n            usedWillpower: this.usedWillpower(),\r\n\r\n            academics: this.academics(),\r\n            robotics: this.robotics(),\r\n            crafts: this.crafts(),\r\n            investigation: this.investigation(),\r\n            medicine: this.medicine(),\r\n            occult: this.occult(),\r\n            politics: this.politics(),\r\n            science: this.science(),\r\n\r\n            athletics: this.athletics(),\r\n            brawl: this.brawl(),\r\n            drive: this.drive(),\r\n            ranged: this.ranged(),\r\n            larceny: this.larceny(),\r\n            stealth: this.stealth(),\r\n            survival: this.survival(),\r\n            weaponry: this.weaponry(),\r\n\r\n            animalKen: this.animalKen(),\r\n            empathy: this.empathy(),\r\n            expression: this.expression(),\r\n            intimidation: this.intimidation(),\r\n            persuasion: this.persuasion(),\r\n            socialize: this.socialize(),\r\n            streetwise: this.streetwise(),\r\n            subterfuge: this.subterfuge(),\r\n\r\n            merits: this.merits().map(m => { return { name: m.name(), value: m.value() }; }),\r\n            spells: this.spells().map(s => { return { name: s.name(), value: s.value() }; }),\r\n            flaws: this.flaws().map(f => { return { name: f.name(), value: f.value() }; }),\r\n\r\n            size: this.size(),\r\n            armor: this.armor(),\r\n            experience: this.experience(),\r\n            morality: this.morality(),\r\n\r\n            weapons: this.weapons().map(w => { return { name: w.name(), description: w.description() }; }),\r\n            equipment: this.equipment().map(e => { return { name: e.name(), description: e.description() }; }),\r\n            inventory: this.inventory().map(i => { return { name: i.name(), description: i.description(), quantity: i.quantity() }; }),\r\n\r\n            notes: this.notes().map(n => n.value())\r\n        };\r\n    }\r\n}\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\nfunction randomName() {\r\n    const firstNameLength = randomInteger(5, 12);\r\n    const lastNameLength = randomInteger(5, 12);\r\n    let firstName = \"\";\r\n    let lastName = \"\";\r\n\r\n    for (let i = 0; i < firstNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        firstName += newLetter;\r\n    }\r\n\r\n    for (let i = 0; i < lastNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        lastName += newLetter;\r\n    }\r\n\r\n    return `${firstName} ${lastName}`;\r\n}\r\n\r\nko.bindingHandlers.attribute = {\r\n    init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n        const dots: Array<HTMLSpanElement> = [];\r\n        for (let i = 0; i < valueAccessor().max; i++) {\r\n            const dot = document.createElement(\"span\");\r\n            dot.classList.add(\"attribute-dot\");\r\n            //dot.dataset.index = \"\" + i;\r\n            dot.dataset.toggle = \"tooltip\";\r\n            dot.title = \"\" + (i + 1);\r\n            $(dot).tooltip();\r\n\r\n            dots.push(dot);\r\n\r\n            dot.addEventListener(\"pointerenter\", () => {\r\n                //const dotIndex = parseInt(spanElement.dataset.index);\r\n                dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                    if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                });\r\n            });\r\n            dot.addEventListener(\"pointerleave\", () => {\r\n                dots.forEach((dot: HTMLSpanElement) => {\r\n                    dot.classList.remove(\"hoverFilled\");\r\n                });\r\n            });\r\n        }\r\n\r\n        const clearDot = document.createElement(\"div\");\r\n        clearDot.classList.add(\"clear-dot\");\r\n        clearDot.innerHTML = \"&times;\";\r\n        clearDot.dataset.toggle = \"tooltip\";\r\n        clearDot.title = \"Clear\";\r\n        clearDot.addEventListener(\"click\", () => {\r\n            valueAccessor().value(0);\r\n        });\r\n        element.appendChild(clearDot);\r\n        $(clearDot).tooltip();\r\n\r\n        dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n            element.appendChild(dot);\r\n            dot.addEventListener(\"click\", () => {\r\n                valueAccessor().value(index + 1);\r\n            });\r\n        });\r\n    },\r\n    update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n        const value = valueAccessor().value();\r\n        const dots = element.getElementsByClassName(\"attribute-dot\");\r\n        for (let i = 0; i < dots.length; i++) {\r\n            const dot = <HTMLSpanElement>dots[i];\r\n            dot.style.backgroundColor = null;\r\n            dot.style.borderColor = null;\r\n            if (i < value) {\r\n                dot.style.backgroundColor = \"var(--body-color)\";\r\n                dot.style.borderColor = \"var(--body-color)\";\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nko.bindingHandlers.readOnlyAttribute = {\r\n    init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n        for (let i = 0; i < valueAccessor().max; i++) {\r\n            const dot = document.createElement(\"span\");\r\n            dot.classList.add(\"attribute-dot\");\r\n            element.appendChild(dot);\r\n        }\r\n    },\r\n    update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n        const value = valueAccessor().value();\r\n        const dots = element.getElementsByTagName(\"span\");\r\n        for (let i = 0; i < dots.length; i++) {\r\n            dots[i].classList.remove(\"filled\");\r\n            if (i < value) {\r\n                dots[i].classList.add(\"filled\");\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nko.bindingHandlers.used = {\r\n    init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n        const dots: Array<HTMLSpanElement> = [];\r\n        for (let i = 0; i < 12; i++) {\r\n            const dot = document.createElement(\"span\");\r\n            dot.classList.add(\"attribute-dot\");\r\n            // dot.dataset.index = \"\" + i;\r\n            element.appendChild(dot);\r\n\r\n            dots.push(dot);\r\n\r\n            dot.addEventListener(\"pointerenter\", () => {\r\n                //var dotIndex = parseInt(this.dataset.index);\r\n                dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                    if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                });\r\n            });\r\n            dot.addEventListener(\"pointerleave\", () => {\r\n                dots.forEach((dot: HTMLSpanElement) => {\r\n                    dot.classList.remove(\"hoverFilled\");\r\n                });\r\n            });\r\n        }\r\n        dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n            dot.addEventListener(\"click\", () => {\r\n                valueAccessor().value(index + 1);\r\n            });\r\n        });\r\n    },\r\n    update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n        const used = valueAccessor().value();\r\n        const total = valueAccessor().total();\r\n        const dots = element.getElementsByTagName(\"span\");\r\n        for (let i = 0; i < dots.length; i++) {\r\n            if (i < used) dots[i].classList.add(\"filled-red\");\r\n            else dots[i].classList.remove(\"filled-red\");\r\n\r\n            if (i < total) dots[i].classList.remove(\"HIDDEN\");\r\n            else dots[i].classList.add(\"HIDDEN\");\r\n        }\r\n    }\r\n};\r\n\r\nko.bindingHandlers.focusOnCreation = {\r\n    init: (element: HTMLInputElement | HTMLTextAreaElement) => {\r\n        window.setTimeout(() => {\r\n            if (element.value) return;\r\n            element.focus();\r\n        }, 1);\r\n    }\r\n};\r\n\r\n// Hmm, this isn't working\r\n// interface KnockoutExtenders {\r\n//     numeric(target: any, args: any): KnockoutObservable<number>;\r\n// }\r\n\r\n// TODO: figure this one out\r\n(<any>ko.extenders).numeric = (target: any, args: { precision?: number, min?: number, max?: number }) => {\r\n    // if (!args.precision) args.precision = 0;\r\n    // if (!args.min) args.min = -Infinity;\r\n    // if (!args.max) args.max = Infinity;\r\n    const precision = args.precision || 0;\r\n    const min = args.min || -Infinity;\r\n    const max = args.max || Infinity;\r\n\r\n    // Create a writeable computed observable to intercept writes to our observable\r\n    const result = ko.pureComputed({\r\n        read: target, // Always return the original observable's value\r\n        write: (newValue: any) => {\r\n            const current = target();\r\n            const roundingMultiplier = Math.pow(10, precision);\r\n            const newValueAsNum = isNaN(newValue) ? 0 : +newValue;\r\n            let valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\r\n            if (valueToWrite < min) valueToWrite = min;\r\n            else if (valueToWrite > max) valueToWrite = max;\r\n\r\n            // Only write if it changed\r\n            if (valueToWrite !== current) {\r\n                target(valueToWrite);\r\n            }\r\n            else {\r\n                // If the rounded value is the same, but a different value was written,\r\n                // force a notification for the current field\r\n                if (newValue !== current) {\r\n                    target.notifySubscribers(valueToWrite);\r\n                }\r\n            }\r\n        }\r\n    }).extend({ notify: \"always\" });\r\n\r\n    // Initialize with current value to make sure it is rounded appropriately\r\n    result(target());\r\n\r\n    // Return the new computed observable\r\n    return result;\r\n};\r\n\r\nexport type CharacterJson = {\r\n    name: string,\r\n    player: string,\r\n    age: number,\r\n    vice: string,\r\n    virtue: string,\r\n    origins: string,\r\n    gender: string,\r\n    concept: string,\r\n    chronicle: string,\r\n\r\n    intelligence: number,\r\n    strength: number,\r\n    presence: number,\r\n    wits: number,\r\n    dexterity: number,\r\n    manipulation: number,\r\n    resolve: number,\r\n    stamina: number,\r\n    composure: number,\r\n\r\n    academics: number,\r\n    robotics: number,\r\n    crafts: number,\r\n    investigation: number,\r\n    medicine: number,\r\n    occult: number,\r\n    politics: number,\r\n    science: number,\r\n\r\n    athletics: number,\r\n    brawl: number,\r\n    drive: number,\r\n    ranged: number,\r\n    larceny: number,\r\n    stealth: number,\r\n    survival: number,\r\n    weaponry: number,\r\n\r\n    animalKen: number,\r\n    empathy: number,\r\n    expression: number,\r\n    intimidation: number,\r\n    persuasion: number,\r\n    socialize: number,\r\n    streetwise: number,\r\n    subterfuge: number,\r\n\r\n    merits: Array<{ name: string, value: number }>,\r\n    spells: Array<{ name: string, value: number }>,\r\n    flaws: Array<{ name: string, value: number }>,\r\n\r\n    size: number,\r\n    armor: number,\r\n    experience: number,\r\n    morality: number,\r\n\r\n    weapons: Array<{ name: string, description: string }>,\r\n    equipment: Array<{ name: string, description: string }>,\r\n    inventory: Array<{ name: string, description: string, quantity: number }>,\r\n\r\n    notes: Array<string>,\r\n\r\n    bashing?: number,\r\n    lethal?: number,\r\n    aggravated?: number,\r\n\r\n    usedMagic?: number,\r\n    usedWillpower?: number\r\n};","export default class Damage {\r\n    public totalHealth: KnockoutComputed<number>;\r\n    public bashing: KnockoutObservable<number>;\r\n    public lethal: KnockoutObservable<number>;\r\n    public aggravated: KnockoutObservable<number>;\r\n\r\n    public constructor(totalHealthObservable: KnockoutComputed<number>, bashing?: number, lethal?: number, aggravated?: number) {\r\n        this.totalHealth = totalHealthObservable;\r\n        this.bashing = ko.observable(bashing || 0);\r\n        this.lethal = ko.observable(lethal || 0);\r\n        this.aggravated = ko.observable(aggravated || 0);\r\n\r\n        totalHealthObservable.subscribe(val => {\r\n            while (this.bashing() + this.lethal() + this.aggravated() > val) {\r\n                if (this.bashing() > 0) {\r\n                    this.bashing(this.bashing() - 1);\r\n                }\r\n                else if (this.lethal() > 0) {\r\n                    this.lethal(this.lethal() - 1);\r\n                }\r\n                else {\r\n                    this.aggravated(this.aggravated() - 1);\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    public anyEmpty(): boolean {\r\n        return this.bashing() + this.lethal() + this.aggravated() < this.totalHealth();\r\n    }\r\n\r\n    public addBashing(): void {\r\n        if (this.anyEmpty()) {\r\n            this.bashing(this.bashing() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addLethal(): void {\r\n        if (this.anyEmpty()) {\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addAggravated(): void {\r\n        if (this.anyEmpty()) {\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public clearAll(): void {\r\n        this.bashing(0);\r\n        this.lethal(0);\r\n        this.aggravated(0);\r\n    }\r\n}\r\n\r\nko.bindingHandlers.damageDisplay = {\r\n    init: (element: HTMLElement) => {\r\n        for (let i = 0; i < 12; i++) {\r\n            const span = document.createElement(\"span\");\r\n            span.classList.add(\"damage\");\r\n            span.classList.add(\"none\");\r\n            element.appendChild(span);\r\n        }\r\n    },\r\n    update: (element: HTMLElement, valueAccessor: () => Damage) => {\r\n        const damageObj = valueAccessor();\r\n        const spans = element.getElementsByTagName(\"span\");\r\n        for (let i = 0; i < spans.length; i++) {\r\n            if (i < damageObj.aggravated()) {\r\n                spans[i].classList.remove(\"none\");\r\n                spans[i].classList.remove(\"bashing\");\r\n                spans[i].classList.remove(\"lethal\");\r\n                spans[i].classList.add(\"aggravated\");\r\n            }\r\n            else if (i - damageObj.aggravated() < damageObj.lethal()) {\r\n                spans[i].classList.remove(\"none\");\r\n                spans[i].classList.remove(\"bashing\");\r\n                spans[i].classList.remove(\"aggravated\");\r\n                spans[i].classList.add(\"lethal\");\r\n            }\r\n            else if (i - damageObj.aggravated() - damageObj.lethal() < damageObj.bashing()) {\r\n                spans[i].classList.remove(\"none\");\r\n                spans[i].classList.remove(\"lethal\");\r\n                spans[i].classList.remove(\"aggravated\");\r\n                spans[i].classList.add(\"bashing\");\r\n            }\r\n            else {\r\n                spans[i].classList.remove(\"bashing\");\r\n                spans[i].classList.remove(\"lethal\");\r\n                spans[i].classList.remove(\"aggravated\");\r\n                spans[i].classList.add(\"none\");\r\n            }\r\n\r\n            if (i < damageObj.totalHealth()) {\r\n                spans[i].classList.remove(\"HIDDEN\");\r\n            }\r\n            else {\r\n                spans[i].classList.add(\"HIDDEN\");\r\n            }\r\n        }\r\n    }\r\n};","export default class Equipment {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n\r\n    public constructor(name?: string, description?: string) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n    }\r\n}","export default class InventoryItem {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n    public quantity: KnockoutObservable<number>;\r\n    public displayText: KnockoutComputed<string>;\r\n\r\n    public constructor(name?: string, description?: string, quantity?: number) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n        this.quantity = ko.observable(quantity || 1);\r\n        this.displayText = ko.computed(this.getDisplayText, this);\r\n    }\r\n\r\n    public getDisplayText() : string {\r\n        return `${this.quantity()} ${this.name()}`;\r\n    }\r\n}","export default class Merit {\r\n    public name: KnockoutObservable<string>;\r\n    public value: KnockoutObservable<number>;\r\n\r\n    public constructor(name?: string, value?: number) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.value = ko.observable(value || 0);\r\n    }\r\n}","export default class Note {\r\n    public value: KnockoutObservable<string>;\r\n\r\n    public constructor(value?: string) {\r\n        this.value = ko.observable(value || \"\");\r\n    }\r\n}","import { randomFloat, randomInteger } from \"./utils\";\r\n\r\nexport default class Dice {\r\n    public dicePool: KnockoutObservable<number>;\r\n    public rollRounds: KnockoutObservableArray<Array<number>>;\r\n    public rollingInProgress: KnockoutObservable<boolean>;\r\n    public totalDiceSuccesses: KnockoutComputed<number>;\r\n    public totalDiceSuccessesDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        this.dicePool = ko.observable(1);\r\n        this.rollRounds = ko.observableArray([]);\r\n        this.rollingInProgress = ko.observable(false);\r\n        this.totalDiceSuccesses = ko.computed(() => {\r\n            if (this.rollingInProgress() || this.rollRounds().length === 0) return -1;\r\n\r\n            return this.rollRounds().reduce((total: number, r: Array<number>) => {\r\n                return total + r.reduce((total: number, d: number) => total + (d > 7 ? 1 : 0), 0);\r\n            }, 0);\r\n        }, this);\r\n        this.totalDiceSuccessesDisplay = ko.computed(() => {\r\n            return this.totalDiceSuccesses() >= 0 ? \"\" + this.totalDiceSuccesses() : \"???\";\r\n        }, this);\r\n    }\r\n\r\n    public incrementDicePool(amount: number): () => void {\r\n        return () => {\r\n            this.dicePool(this.dicePool() + amount);\r\n        };\r\n    }\r\n\r\n    public rollDice(): void {\r\n        const roller = new RollState(this);\r\n        roller.beginRoll();\r\n    }\r\n}\r\n\r\nko.bindingHandlers.dice = {\r\n    update: (element: HTMLElement, valueAccessor: () => KnockoutObservableArray<Array<number>>) => {\r\n        const rollRounds = valueAccessor()();\r\n        if (rollRounds.length === 0) {\r\n            element.innerHTML = \"\";\r\n            return;\r\n        }\r\n\r\n        let divs = element.getElementsByClassName(\"dice-round\");\r\n        if (divs.length !== rollRounds.length) {\r\n            const newRound = document.createElement(\"div\");\r\n            newRound.classList.add(\"dice-round\");\r\n            const rolls = rollRounds[rollRounds.length - 1];\r\n            for (let i = 0; i < rolls.length; i++) {\r\n                const span = document.createElement(\"span\");\r\n                const delay = randomFloat(0, 0.5);\r\n                span.style.animation = `rollingDice 0.5s linear -${delay}s infinite alternate`;\r\n                span.classList.add(\"dice\");\r\n                newRound.appendChild(span);\r\n            }\r\n            element.appendChild(newRound);\r\n            divs = element.getElementsByClassName(\"dice-round\");\r\n        }\r\n\r\n        for (let i = 0; i < rollRounds.length; i++) {\r\n            const rolls = rollRounds[i];\r\n            const spans = divs[i].getElementsByClassName(\"dice\");\r\n            for (let j = 0; j < rolls.length; j++) {\r\n                const roll = rolls[j];\r\n                const span = <HTMLSpanElement>spans[j];\r\n\r\n                if (roll !== -1) {\r\n                    span.style.animation = null;\r\n                    span.style.backgroundImage = `url('images/dice-${roll}.png')`;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nclass RollState {\r\n    private _diceObj: Dice;\r\n    private _currentRound: number;\r\n    private _currentDice: number;\r\n    private _currentRoundRolls: number;\r\n    private _currentRoundResults: Array<number>;\r\n    private _nextRoundRolls: number;\r\n    private _intervalHandle: number;\r\n\r\n    public constructor(diceObj: Dice) {\r\n        this._diceObj = diceObj;\r\n        this._currentRound = 0;\r\n        this._currentDice = 0;\r\n        this._currentRoundRolls = diceObj.dicePool();\r\n        this._currentRoundResults = [];\r\n        this._nextRoundRolls = 0;\r\n        this._intervalHandle = null;\r\n    }\r\n\r\n    public beginRoll(): void {\r\n        this._diceObj.rollingInProgress(true);\r\n        this._diceObj.rollRounds.removeAll();\r\n        for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n        this._diceObj.rollRounds.push(this._currentRoundResults);\r\n\r\n        this._intervalHandle = window.setInterval(() => {\r\n            const nextRoll = randomInteger(1, 11);\r\n            if (nextRoll === 10) this._nextRoundRolls++;\r\n            this._currentRoundResults[this._currentDice] = nextRoll;\r\n            this._diceObj.rollRounds.replace(this._diceObj.rollRounds()[this._currentRound], this._currentRoundResults);\r\n            this._currentDice++;\r\n\r\n            if (this._currentDice === this._currentRoundRolls) {\r\n                if (this._nextRoundRolls === 0) {\r\n                    window.clearInterval(this._intervalHandle);\r\n                    this._diceObj.rollingInProgress(false);\r\n                    return;\r\n                }\r\n                else {\r\n                    this._currentRound++;\r\n                    this._currentRoundRolls = this._nextRoundRolls;\r\n                    this._nextRoundRolls = 0;\r\n                    this._currentDice = 0;\r\n                    this._currentRoundResults = [];\r\n                    for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n                    this._diceObj.rollRounds.push(this._currentRoundResults);\r\n                }\r\n            }\r\n        }, 250);\r\n    }\r\n}","import Application from \"./Application\";\r\nimport Equipment from \"./Character/Equipment\";\r\nimport InventoryItem from \"./Character/InventoryItem\";\r\nimport Merit from \"./Character/Merit\";\r\nimport Note from \"./Character/Note\";\r\n\r\nconst constructors = {\r\n    Equipment: Equipment,\r\n    InventoryItem: InventoryItem,\r\n    Merit: Merit,\r\n    Note: Note\r\n};\r\nObject.defineProperty(window, \"constructors\", { value: constructors });\r\n\r\nconst app = new Application();\r\nko.applyBindings(app);\r\n\r\n// Exposing the view model to the global state in case manual changes need to be applied\r\nObject.defineProperty(window, \"app\", { value: app });\r\n\r\nfunction toggleTooltips(enable: boolean): void {\r\n    if (enable) $(\"[data-toggle='tooltip']\").tooltip();\r\n    else $(\"[data-toggle='tooltip']\").tooltip(\"dispose\");\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    toggleTooltips(window.outerWidth >= 992);\r\n});\r\ntoggleTooltips(window.outerWidth >= 992);","export function randomInteger(minInclusive = 0, maxExclusive = 10): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function randomFloat(minInclusive = 0, maxExclusive = 1): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.random() * (maxExclusive - minInclusive) + minInclusive;\r\n}"]}