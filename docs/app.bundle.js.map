{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/Application.ts","src/ts/Character/Character.ts","src/ts/Character/Damage.ts","src/ts/Character/Equipment.ts","src/ts/Character/InventoryItem.ts","src/ts/Character/Merit.ts","src/ts/Character/Note.ts","src/ts/Dice.ts","src/ts/main.ts","src/ts/utils.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Character_1","Dice_1","Application","prototype","goBack","this","mode","_previousSection","window","location","hash","newCharacter","characters","push","default","characterId","selectCharacter","character","indexOf","deleteCharacter","confirm","name","id","remove","saveCharacters","localStorage","setItem","JSON","stringify","realCharacters","map","toJson","alert","downloadCharacter","json","dl","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","uploadCharacter","_this","ul","type","accept","addEventListener","file","files","reader","FileReader","onload","target","result","fromJson","parse","readAsText","toggleCharacterLock","locked","switchMode","getElementById","savedCharacters","getItem","unshift","ghost","ko","observable","observableArray","computed","filter","dice","lockButtonClass","lockButtonIcon","Damage_1","Equipment_1","InventoryItem_1","Merit_1","Note_1","utils_1","Character","firstNameLength","randomInteger","lastNameLength","firstName","lastName","newLetter","alphabet","charAt","toUpperCase","randomName","player","age","vice","virtue","origins","gender","concept","chronicle","intelligence","strength","presence","wits","dexterity","manipulation","resolve","stamina","composure","academics","robotics","crafts","investigation","medicine","occult","politics","science","athletics","brawl","drive","ranged","larceny","stealth","survival","weaponry","animalKen","empathy","expression","intimidation","persuasion","socialize","streetwise","subterfuge","merits","spells","flaws","size","armor","experience","morality","weapons","equipment","inventory","notes","onComponentClick","_","currentTarget","getElementsByTagName","focus","newItem","constructor","createLockable","removeItem","item","moveItem","direction","index","newIndex","splice","clearUsed","usedObservable","bashing","damage","lethal","aggravated","usedMagic","usedWillpower","m","value","s","w","description","quantity","extend","lockable","numeric","precision","min","max","speed","defense","Math","initiative","health","magic","subscribe","val","willpower","Damage","anyEmpty","totalHealth","addBashing","addLethal","addAggravated","clearAll","totalHealthObservable","Equipment","InventoryItem","getDisplayText","displayText","Merit","Note","Dice","incrementDicePool","amount","dicePool","rollDice","RollState","beginRoll","rollRounds","rollingInProgress","totalDiceSuccesses","reduce","total","d","totalDiceSuccessesDisplay","_diceObj","removeAll","_currentRoundRolls","_currentRoundResults","_intervalHandle","setInterval","nextRoll","_nextRoundRolls","critMessage","classList","add","innerText","getElementsByClassName","_currentDice","replace","_currentRound","clearInterval","diceObj","Application_1","applyCustomKnockoutCode","constructors","Object","defineProperty","app","toggleTooltips","enable","$","tooltip","applyBindings","outerWidth","randomFloat","minInclusive","maxExclusive","_a","random","floor","bindingHandlers","update","element","valueAccessor","divs","newRound","rolls","span","delay","animation","spans","j","roll","backgroundImage","innerHTML","damageDisplay","init","damageObj","attribute","dots","dot","dataset","toggle","title","forEach","clearDot","backgroundColor","borderColor","readOnlyAttribute","hideUnfilled","used","focusOnCreation","setTimeout","extenders","pureComputed","read","write","newValue","notifySubscribers","notify","args","Infinity","current","roundingMultiplier","pow","newValueAsNum","isNaN","valueToWrite","round"],"mappings":"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","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Character, { CharacterJson } from \"./Character/Character\";\r\nimport Dice from \"./Dice\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport default class Application {\r\n    public mode: KnockoutObservable<string>;\r\n    public characterId: KnockoutObservable<number>;\r\n    public characters: KnockoutObservableArray<Character>;\r\n    public realCharacters: KnockoutComputed<Array<Character>>;\r\n    public character: KnockoutComputed<Character>;\r\n    public dice: Dice;\r\n    public lockButtonClass: KnockoutComputed<string>;\r\n    public lockButtonIcon: KnockoutComputed<string>;\r\n    private _previousSection: string;\r\n\r\n    public constructor() {\r\n        const savedCharacters: Array<Character> = (JSON.parse(window.localStorage.getItem(\"characters\")) || []).map(Character.fromJson);\r\n        savedCharacters.unshift(Character.newCharacter());\r\n        savedCharacters[0].ghost = true;\r\n\r\n        this.mode = ko.observable(\"list\");\r\n        this.characterId = ko.observable(0);\r\n        this.characters = ko.observableArray(savedCharacters);\r\n        this.realCharacters = ko.computed(() => this.characters().filter(c => !c.ghost), this);\r\n        this.character = ko.computed(() => this.characters()[this.characterId()], this);\r\n        this.dice = new Dice();\r\n        this.lockButtonClass = ko.computed(() => this.character().locked() ? \"btn-danger\" : \"btn-outline-success\", this);\r\n        this.lockButtonIcon = ko.computed(() => this.character().locked() ? \"fas fa-lock\" : \"fas fa-lock-open\", this);\r\n        this._previousSection = null;\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.mode() === \"sheet\") this.mode(\"list\");\r\n        else {\r\n            this.mode(\"sheet\");\r\n\r\n            if (this._previousSection) window.location.hash = this._previousSection;\r\n        }\r\n    }\r\n\r\n    public newCharacter(): void {\r\n        this.characters.push(Character.newCharacter());\r\n        this.characterId(this.characters().length - 1);\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public selectCharacter(character: Character): void {\r\n        this.characterId(this.characters.indexOf(character));\r\n        this.mode(\"sheet\");\r\n    }\r\n\r\n    public deleteCharacter(character: Character): void {\r\n        // swal({\r\n        //     title: `Delete ${this.character().name()}`,\r\n        //     text: \"Are you sure? (As long as you don't save, your character won't be gone.)\",\r\n        //     icon: \"warning\",\r\n        //     buttons: [\"Cancel\", \"Delete\"],\r\n        //     dangerMode: true\r\n        // })\r\n        // .then((willDelete: boolean) => {\r\n        //     if (willDelete) {\r\n        //         const id = this.characterId();\r\n        //         this.characterId(0);\r\n        //         this.characters.remove(this.characters()[id]);\r\n        //         this.mode(\"list\");\r\n        //     }\r\n        // });\r\n        if (confirm(`Are you sure you want to delete ${this.character().name()}? (As long as you don't save, your character won't be gone.)`)) {\r\n            const id = this.characterId();\r\n            this.characterId(0);\r\n            this.characters.remove(this.characters()[id]);\r\n            this.mode(\"list\");\r\n        }\r\n    }\r\n\r\n    public saveCharacters(): void {\r\n        window.localStorage.setItem(\"characters\", JSON.stringify(this.realCharacters().map(c => c.toJson())));\r\n        // swal(\"Characters saved successfully!\", {\r\n        //     buttons: [],\r\n        //     timer: 1000,\r\n        //     icon: \"success\"\r\n        // });\r\n        alert(\"Characters saved successfully!\");\r\n    }\r\n\r\n    public downloadCharacter(): void {\r\n        const json = JSON.stringify(this.character().toJson());\r\n\r\n        const dl = document.createElement(\"a\");\r\n        dl.setAttribute(\"href\", `data:text/plain;charset=utf-8,${encodeURIComponent(json)}`);\r\n        dl.setAttribute(\"download\", `${this.character().name()}.json`);\r\n\r\n        dl.style.display = \"none\";\r\n        document.body.appendChild(dl);\r\n\r\n        dl.click();\r\n\r\n        document.body.removeChild(dl);\r\n    }\r\n\r\n    public uploadCharacter(): void {\r\n        const ul = document.createElement(\"input\");\r\n        ul.type = \"file\";\r\n        ul.accept = \".json\";\r\n        ul.style.display = \"none\";\r\n\r\n        ul.addEventListener(\"change\", e => {\r\n            const file = ul.files[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: any) => {\r\n                const json = e.target.result;\r\n                this.characters.push(Character.fromJson(JSON.parse(json)));\r\n                this.characterId(this.characters().length - 1);\r\n                this.mode(\"sheet\");\r\n            };\r\n            reader.readAsText(file);\r\n        });\r\n\r\n        document.body.appendChild(ul);\r\n\r\n        ul.click();\r\n\r\n        document.body.removeChild(ul);\r\n    }\r\n\r\n    public toggleCharacterLock(): void {\r\n        const character = this.character();\r\n        character.locked(!character.locked());\r\n    }\r\n\r\n    public switchMode(mode: string): () => void {\r\n        return () => {\r\n            if (this.mode() !== \"list\" && document.getElementById(mode)) {\r\n                this._previousSection = mode;\r\n            }\r\n            else this._previousSection = null;\r\n\r\n            window.location.hash = \"\";\r\n            this.mode(mode);\r\n        }\r\n    }\r\n}","import Damage from \"./Damage\";\r\nimport Equipment from \"./Equipment\";\r\nimport InventoryItem from \"./InventoryItem\";\r\nimport Merit from \"./Merit\";\r\nimport Note from \"./Note\";\r\nimport { randomInteger } from \"../utils\";\r\n\r\nexport default class Character {\r\n    public ghost: boolean = false;\r\n    public locked: KnockoutObservable<boolean> = ko.observable(true);\r\n\r\n    public name: KnockoutObservable<string>;\r\n    public player: KnockoutObservable<string>;\r\n    public age: KnockoutObservable<number>;\r\n    public vice: KnockoutObservable<string>;\r\n    public virtue: KnockoutObservable<string>;\r\n    public origins: KnockoutObservable<string>;\r\n    public gender: KnockoutObservable<string>;\r\n    public concept: KnockoutObservable<string>;\r\n    public chronicle: KnockoutObservable<string>;\r\n\r\n    public intelligence: KnockoutObservable<number>;\r\n    public strength: KnockoutObservable<number>;\r\n    public presence: KnockoutObservable<number>;\r\n    public wits: KnockoutObservable<number>;\r\n    public dexterity: KnockoutObservable<number>;\r\n    public manipulation: KnockoutObservable<number>;\r\n    public resolve: KnockoutObservable<number>;\r\n    public stamina: KnockoutObservable<number>;\r\n    public composure: KnockoutObservable<number>;\r\n\r\n    public academics: KnockoutObservable<number>;\r\n    public robotics: KnockoutObservable<number>;\r\n    public crafts: KnockoutObservable<number>;\r\n    public investigation: KnockoutObservable<number>;\r\n    public medicine: KnockoutObservable<number>;\r\n    public occult: KnockoutObservable<number>;\r\n    public politics: KnockoutObservable<number>;\r\n    public science: KnockoutObservable<number>;\r\n    \r\n    public athletics: KnockoutObservable<number>;\r\n    public brawl: KnockoutObservable<number>;\r\n    public drive: KnockoutObservable<number>;\r\n    public ranged: KnockoutObservable<number>;\r\n    public larceny: KnockoutObservable<number>;\r\n    public stealth: KnockoutObservable<number>;\r\n    public survival: KnockoutObservable<number>;\r\n    public weaponry: KnockoutObservable<number>;\r\n\r\n    public animalKen: KnockoutObservable<number>;\r\n    public empathy: KnockoutObservable<number>;\r\n    public expression: KnockoutObservable<number>;\r\n    public intimidation: KnockoutObservable<number>;\r\n    public persuasion: KnockoutObservable<number>;\r\n    public socialize: KnockoutObservable<number>;\r\n    public streetwise: KnockoutObservable<number>;\r\n    public subterfuge: KnockoutObservable<number>;\r\n\r\n    public merits: KnockoutObservableArray<Merit>;\r\n    public spells: KnockoutObservableArray<Merit>;\r\n    public flaws: KnockoutObservableArray<Merit>;\r\n\r\n    public size: KnockoutObservable<number>;\r\n    public speed: KnockoutComputed<number>;\r\n    public defense: KnockoutComputed<number>;\r\n    public armor: KnockoutObservable<number>;\r\n    public initiative: KnockoutComputed<number>;\r\n    public experience: KnockoutObservable<number>;\r\n    public morality: KnockoutObservable<number>;\r\n\r\n    public weapons: KnockoutObservableArray<Equipment>;\r\n    public equipment: KnockoutObservableArray<Equipment>;\r\n    public inventory: KnockoutObservableArray<InventoryItem>;\r\n\r\n    public notes: KnockoutObservableArray<Note>;\r\n\r\n    public health: KnockoutComputed<number>;\r\n    public damage: Damage;\r\n\r\n    public magic: KnockoutComputed<number>;\r\n    public usedMagic: KnockoutObservable<number>;\r\n\r\n    public willpower: KnockoutComputed<number>;\r\n    public usedWillpower: KnockoutObservable<number>;\r\n\r\n    public constructor(json: CharacterJson) {\r\n        this.name = ko.observable(json.name).extend({ lockable: this.locked });\r\n        this.player = ko.observable(json.player).extend({ lockable: this.locked });\r\n        this.age = ko.observable(json.age).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.vice = ko.observable(json.vice).extend({ lockable: this.locked });\r\n        this.virtue = ko.observable(json.virtue).extend({ lockable: this.locked });\r\n        this.origins = ko.observable(json.origins).extend({ lockable: this.locked });\r\n        this.gender = ko.observable(json.gender).extend({ lockable: this.locked });\r\n        this.concept = ko.observable(json.concept).extend({ lockable: this.locked });\r\n        this.chronicle = ko.observable(json.chronicle).extend({ lockable: this.locked });\r\n\r\n        this.intelligence = ko.observable(json.intelligence).extend({ lockable: this.locked });\r\n        this.strength = ko.observable(json.strength).extend({ lockable: this.locked });\r\n        this.presence = ko.observable(json.presence).extend({ lockable: this.locked });\r\n        this.wits = ko.observable(json.wits).extend({ lockable: this.locked });\r\n        this.dexterity = ko.observable(json.dexterity).extend({ lockable: this.locked });\r\n        this.manipulation = ko.observable(json.manipulation).extend({ lockable: this.locked });\r\n        this.resolve = ko.observable(json.resolve).extend({ lockable: this.locked });\r\n        this.stamina = ko.observable(json.stamina).extend({ lockable: this.locked });\r\n        this.composure = ko.observable(json.composure).extend({ lockable: this.locked });\r\n\r\n        this.academics = ko.observable(json.academics).extend({ lockable: this.locked });\r\n        this.robotics = ko.observable(json.robotics).extend({ lockable: this.locked });\r\n        this.crafts = ko.observable(json.crafts).extend({ lockable: this.locked });\r\n        this.investigation = ko.observable(json.investigation).extend({ lockable: this.locked });\r\n        this.medicine = ko.observable(json.medicine).extend({ lockable: this.locked });\r\n        this.occult = ko.observable(json.occult).extend({ lockable: this.locked });\r\n        this.politics = ko.observable(json.politics).extend({ lockable: this.locked });\r\n        this.science = ko.observable(json.science).extend({ lockable: this.locked });\r\n\r\n        this.athletics = ko.observable(json.athletics).extend({ lockable: this.locked });\r\n        this.brawl = ko.observable(json.brawl).extend({ lockable: this.locked });\r\n        this.drive = ko.observable(json.drive).extend({ lockable: this.locked });\r\n        this.ranged = ko.observable(json.ranged).extend({ lockable: this.locked });\r\n        this.larceny = ko.observable(json.larceny).extend({ lockable: this.locked });\r\n        this.stealth = ko.observable(json.stealth).extend({ lockable: this.locked });\r\n        this.survival = ko.observable(json.survival).extend({ lockable: this.locked });\r\n        this.weaponry = ko.observable(json.weaponry).extend({ lockable: this.locked });\r\n\r\n        this.animalKen = ko.observable(json.animalKen).extend({ lockable: this.locked });\r\n        this.empathy = ko.observable(json.empathy).extend({ lockable: this.locked });\r\n        this.expression = ko.observable(json.expression).extend({ lockable: this.locked });\r\n        this.intimidation = ko.observable(json.intimidation).extend({ lockable: this.locked });\r\n        this.persuasion = ko.observable(json.persuasion).extend({ lockable: this.locked });\r\n        this.socialize = ko.observable(json.socialize).extend({ lockable: this.locked });\r\n        this.streetwise = ko.observable(json.streetwise).extend({ lockable: this.locked });\r\n        this.subterfuge = ko.observable(json.subterfuge).extend({ lockable: this.locked });\r\n\r\n        this.merits = ko.observableArray(json.merits.map(m => new Merit(m.name, m.value, this.locked)));\r\n        this.spells = ko.observableArray(json.spells.map(s => new Merit(s.name, s.value, this.locked)));\r\n        this.flaws = ko.observableArray(json.flaws.map(f => new Merit(f.name, f.value, this.locked)));\r\n\r\n        this.size = ko.observable(json.size).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n        this.speed = ko.computed(() => this.strength() + this.dexterity() + 5, this);\r\n        this.defense = ko.computed(() => Math.min(this.dexterity(), this.wits()), this);\r\n        this.armor = ko.observable(json.armor).extend({ numeric: { precision: 0 } }).extend({ lockable: this.locked });\r\n        this.initiative = ko.computed(() => this.dexterity() + this.composure(), this);\r\n        this.experience = ko.observable(json.experience).extend({ numeric: { precision: 0 }, lockable: this.locked });\r\n        this.morality = ko.observable(json.morality).extend({ numeric: { precision: 0, min: 1, max: 10 }, lockable: this.locked });\r\n\r\n        this.weapons = ko.observableArray(json.weapons.map(w => new Equipment(w.name, w.description, this.locked)));\r\n        this.equipment = ko.observableArray(json.equipment.map(e => new Equipment(e.name, e.description, this.locked)));\r\n        this.inventory = ko.observableArray(json.inventory.map(i => new InventoryItem(i.name, i.description, i.quantity, this.locked)));\r\n\r\n        this.notes = ko.observableArray(json.notes.map(n => new Note(n, this.locked)));\r\n\r\n        this.health = ko.computed(() => this.stamina() + this.size(), this);\r\n        this.damage = new Damage(this.health, json.bashing, json.lethal, json.aggravated, this.locked);\r\n\r\n        this.magic = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedMagic = ko.observable(json.usedMagic || 0).extend({ lockable: this.locked });\r\n        this.magic.subscribe(val => {\r\n            if (this.usedMagic() > val) this.usedMagic(val);\r\n        }, this);\r\n\r\n        this.willpower = ko.computed(() => this.resolve() + this.composure(), this);\r\n        this.usedWillpower = ko.observable(json.usedWillpower || 0).extend({ lockable: this.locked });\r\n        this.willpower.subscribe(val => {\r\n            if (this.usedWillpower() > val) this.usedWillpower(val);\r\n        }, this);\r\n    }\r\n\r\n    public static newCharacter(): Character {\r\n        return new Character({\r\n            name: randomName(),\r\n            player: \"\",\r\n            age: 0,\r\n            vice: \"\",\r\n            virtue: \"\",\r\n            origins: \"\",\r\n            gender: \"\",\r\n            concept: \"\",\r\n            chronicle: \"\",\r\n\r\n            intelligence: 1,\r\n            strength: 1,\r\n            presence: 1,\r\n            wits: 1,\r\n            dexterity: 1,\r\n            manipulation: 1,\r\n            resolve: 1,\r\n            stamina: 1,\r\n            composure: 1,\r\n\r\n            academics: 0,\r\n            robotics: 0,\r\n            crafts: 0,\r\n            investigation: 0,\r\n            medicine: 0,\r\n            occult: 0,\r\n            politics: 0,\r\n            science: 0,\r\n\r\n            athletics: 0,\r\n            brawl: 0,\r\n            drive: 0,\r\n            ranged: 0,\r\n            larceny: 0,\r\n            stealth: 0,\r\n            survival: 0,\r\n            weaponry: 0,\r\n\r\n            animalKen: 0,\r\n            empathy: 0,\r\n            expression: 0,\r\n            intimidation: 0,\r\n            persuasion: 0,\r\n            socialize: 0,\r\n            streetwise: 0,\r\n            subterfuge: 0,\r\n\r\n            merits: [],\r\n            spells: [],\r\n            flaws: [],\r\n\r\n            size: 5,\r\n            armor: 0,\r\n            experience: 0,\r\n            morality: 7,\r\n\r\n            weapons: [],\r\n            equipment: [],\r\n            inventory: [],\r\n\r\n            notes: []\r\n        });\r\n    }\r\n\r\n    public static fromJson(json: CharacterJson): Character {\r\n        return new Character(json);\r\n    }\r\n\r\n    public onComponentClick(_: any, e: Event): void {\r\n        const element = <HTMLElement>e.currentTarget;\r\n        element.getElementsByTagName(\"input\")[0].focus();\r\n    }\r\n\r\n    public newItem<T>(observableArray: KnockoutObservableArray<T>, constructor: { createLockable(locked: KnockoutObservable<boolean>): T}): () => void {\r\n        return () => {\r\n            if (this.locked()) return;\r\n            observableArray.push(constructor.createLockable(this.locked));\r\n        };\r\n    }\r\n\r\n    public removeItem<T>(observableArray: KnockoutObservableArray<T>): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            observableArray.remove(item);\r\n        };\r\n    }\r\n\r\n    public moveItem<T>(observableArray: KnockoutObservableArray<T>, direction: number): (item: T) => void {\r\n        return (item: T) => {\r\n            if (this.locked()) return;\r\n            const index = observableArray.indexOf(item);\r\n            const newIndex = index + direction;\r\n\r\n            if (newIndex < 0 || newIndex >= observableArray().length) return;\r\n\r\n            observableArray.splice(index, 1);\r\n            observableArray.splice(newIndex, 0, item);\r\n        };\r\n    }\r\n\r\n    public clearUsed(usedObservable: KnockoutObservable<number>): () => void {\r\n        return () => {\r\n            usedObservable(0);\r\n        };\r\n    }\r\n\r\n    public toJson(): CharacterJson {\r\n        return {\r\n            name: this.name(),\r\n            player: this.player(),\r\n            age: this.age(),\r\n            vice: this.vice(),\r\n            virtue: this.virtue(),\r\n            origins: this.origins(),\r\n            gender: this.gender(),\r\n            concept: this.concept(),\r\n            chronicle: this.chronicle(),\r\n\r\n            intelligence: this.intelligence(),\r\n            wits: this.wits(),\r\n            resolve: this.resolve(),\r\n            strength: this.strength(),\r\n            dexterity: this.dexterity(),\r\n            stamina: this.stamina(),\r\n            presence: this.presence(),\r\n            manipulation: this.manipulation(),\r\n            composure: this.composure(),\r\n\r\n            bashing: this.damage.bashing(),\r\n            lethal: this.damage.lethal(),\r\n            aggravated: this.damage.aggravated(),\r\n            usedMagic: this.usedMagic(),\r\n            usedWillpower: this.usedWillpower(),\r\n\r\n            academics: this.academics(),\r\n            robotics: this.robotics(),\r\n            crafts: this.crafts(),\r\n            investigation: this.investigation(),\r\n            medicine: this.medicine(),\r\n            occult: this.occult(),\r\n            politics: this.politics(),\r\n            science: this.science(),\r\n\r\n            athletics: this.athletics(),\r\n            brawl: this.brawl(),\r\n            drive: this.drive(),\r\n            ranged: this.ranged(),\r\n            larceny: this.larceny(),\r\n            stealth: this.stealth(),\r\n            survival: this.survival(),\r\n            weaponry: this.weaponry(),\r\n\r\n            animalKen: this.animalKen(),\r\n            empathy: this.empathy(),\r\n            expression: this.expression(),\r\n            intimidation: this.intimidation(),\r\n            persuasion: this.persuasion(),\r\n            socialize: this.socialize(),\r\n            streetwise: this.streetwise(),\r\n            subterfuge: this.subterfuge(),\r\n\r\n            merits: this.merits().map(m => { return { name: m.name(), value: m.value() }; }),\r\n            spells: this.spells().map(s => { return { name: s.name(), value: s.value() }; }),\r\n            flaws: this.flaws().map(f => { return { name: f.name(), value: f.value() }; }),\r\n\r\n            size: this.size(),\r\n            armor: this.armor(),\r\n            experience: this.experience(),\r\n            morality: this.morality(),\r\n\r\n            weapons: this.weapons().map(w => { return { name: w.name(), description: w.description() }; }),\r\n            equipment: this.equipment().map(e => { return { name: e.name(), description: e.description() }; }),\r\n            inventory: this.inventory().map(i => { return { name: i.name(), description: i.description(), quantity: i.quantity() }; }),\r\n\r\n            notes: this.notes().map(n => n.value())\r\n        };\r\n    }\r\n}\r\n\r\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\nfunction randomName() {\r\n    const firstNameLength = randomInteger(5, 12);\r\n    const lastNameLength = randomInteger(5, 12);\r\n    let firstName = \"\";\r\n    let lastName = \"\";\r\n\r\n    for (let i = 0; i < firstNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        firstName += newLetter;\r\n    }\r\n\r\n    for (let i = 0; i < lastNameLength; i++) {\r\n        let newLetter = alphabet.charAt(randomInteger(0, alphabet.length));\r\n        if (i === 0) newLetter = newLetter.toUpperCase();\r\n\r\n        lastName += newLetter;\r\n    }\r\n\r\n    return `${firstName} ${lastName}`;\r\n}\r\n\r\ntype CharacterJson = {\r\n    name: string,\r\n    player: string,\r\n    age: number,\r\n    vice: string,\r\n    virtue: string,\r\n    origins: string,\r\n    gender: string,\r\n    concept: string,\r\n    chronicle: string,\r\n\r\n    intelligence: number,\r\n    strength: number,\r\n    presence: number,\r\n    wits: number,\r\n    dexterity: number,\r\n    manipulation: number,\r\n    resolve: number,\r\n    stamina: number,\r\n    composure: number,\r\n\r\n    academics: number,\r\n    robotics: number,\r\n    crafts: number,\r\n    investigation: number,\r\n    medicine: number,\r\n    occult: number,\r\n    politics: number,\r\n    science: number,\r\n\r\n    athletics: number,\r\n    brawl: number,\r\n    drive: number,\r\n    ranged: number,\r\n    larceny: number,\r\n    stealth: number,\r\n    survival: number,\r\n    weaponry: number,\r\n\r\n    animalKen: number,\r\n    empathy: number,\r\n    expression: number,\r\n    intimidation: number,\r\n    persuasion: number,\r\n    socialize: number,\r\n    streetwise: number,\r\n    subterfuge: number,\r\n\r\n    merits: Array<{ name: string, value: number }>,\r\n    spells: Array<{ name: string, value: number }>,\r\n    flaws: Array<{ name: string, value: number }>,\r\n\r\n    size: number,\r\n    armor: number,\r\n    experience: number,\r\n    morality: number,\r\n\r\n    weapons: Array<{ name: string, description: string }>,\r\n    equipment: Array<{ name: string, description: string }>,\r\n    inventory: Array<{ name: string, description: string, quantity: number }>,\r\n\r\n    notes: Array<string>,\r\n\r\n    bashing?: number,\r\n    lethal?: number,\r\n    aggravated?: number,\r\n\r\n    usedMagic?: number,\r\n    usedWillpower?: number\r\n};","export default class Damage {\r\n    public totalHealth: KnockoutComputed<number>;\r\n    public bashing: KnockoutObservable<number>;\r\n    public lethal: KnockoutObservable<number>;\r\n    public aggravated: KnockoutObservable<number>;\r\n\r\n    public constructor(totalHealthObservable: KnockoutComputed<number>, bashing?: number, lethal?: number, aggravated?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.totalHealth = totalHealthObservable;\r\n        this.bashing = ko.observable(bashing || 0);\r\n        this.lethal = ko.observable(lethal || 0);\r\n        this.aggravated = ko.observable(aggravated || 0);\r\n\r\n        if (locked) {\r\n            this.bashing = this.bashing.extend({ lockable: locked });\r\n            this.lethal = this.lethal.extend({ lockable: locked });\r\n            this.aggravated = this.aggravated.extend({ lockable: locked });\r\n        }\r\n\r\n        totalHealthObservable.subscribe(val => {\r\n            while (this.bashing() + this.lethal() + this.aggravated() > val) {\r\n                if (this.bashing() > 0) {\r\n                    this.bashing(this.bashing() - 1);\r\n                }\r\n                else if (this.lethal() > 0) {\r\n                    this.lethal(this.lethal() - 1);\r\n                }\r\n                else {\r\n                    this.aggravated(this.aggravated() - 1);\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    public anyEmpty(): boolean {\r\n        return this.bashing() + this.lethal() + this.aggravated() < this.totalHealth();\r\n    }\r\n\r\n    public addBashing(): void {\r\n        if (this.anyEmpty()) {\r\n            this.bashing(this.bashing() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addLethal(): void {\r\n        if (this.anyEmpty()) {\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.lethal(this.lethal() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public addAggravated(): void {\r\n        if (this.anyEmpty()) {\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.bashing() > 0) {\r\n            this.bashing(this.bashing() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else if (this.lethal() > 0) {\r\n            this.lethal(this.lethal() - 1);\r\n            this.aggravated(this.aggravated() + 1);\r\n        }\r\n        else {\r\n            alert(\"you ded\");\r\n        }\r\n    }\r\n\r\n    public clearAll(): void {\r\n        this.bashing(0);\r\n        this.lethal(0);\r\n        this.aggravated(0);\r\n    }\r\n}","export default class Equipment {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n\r\n    public constructor(name?: string, description?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Equipment(null, null, locked);\r\n    }\r\n}","export default class InventoryItem {\r\n    public name: KnockoutObservable<string>;\r\n    public description: KnockoutObservable<string>;\r\n    public quantity: KnockoutObservable<number>;\r\n    public displayText: KnockoutComputed<string>;\r\n\r\n    public constructor(name?: string, description?: string, quantity?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.description = ko.observable(description || \"\");\r\n        this.quantity = ko.observable(quantity || 1);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.description = this.description.extend({ lockable: locked });\r\n            this.quantity = this.quantity.extend({ lockable: locked });\r\n        }\r\n\r\n        this.displayText = ko.computed(this.getDisplayText, this);\r\n    }\r\n\r\n    public getDisplayText() : string {\r\n        return `${this.quantity()} ${this.name()}`;\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new InventoryItem(null, null, null, locked);\r\n    }\r\n}","export default class Merit {\r\n    public name: KnockoutObservable<string>;\r\n    public value: KnockoutObservable<number>;\r\n\r\n    public constructor(name?: string, value?: number, locked?: KnockoutObservable<boolean>) {\r\n        this.name = ko.observable(name || \"\");\r\n        this.value = ko.observable(value || 0);\r\n\r\n        if (locked) {\r\n            this.name = this.name.extend({ lockable: locked });\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Merit(null, null, locked);\r\n    }\r\n}","export default class Note {\r\n    public value: KnockoutObservable<string>;\r\n\r\n    public constructor(value?: string, locked?: KnockoutObservable<boolean>) {\r\n        this.value = ko.observable(value || \"\");\r\n\r\n        if (locked) {\r\n            this.value = this.value.extend({ lockable: locked });\r\n        }\r\n    }\r\n\r\n    public static createLockable(locked: KnockoutObservable<boolean>) {\r\n        return new Note(null, locked);\r\n    }\r\n}","import { randomFloat, randomInteger } from \"./utils\";\r\n\r\nexport default class Dice {\r\n    public dicePool: KnockoutObservable<number>;\r\n    public rollRounds: KnockoutObservableArray<Array<number>>;\r\n    public rollingInProgress: KnockoutObservable<boolean>;\r\n    public totalDiceSuccesses: KnockoutComputed<number>;\r\n    public totalDiceSuccessesDisplay: KnockoutComputed<string>;\r\n\r\n    public constructor() {\r\n        this.dicePool = ko.observable(1);\r\n        this.rollRounds = ko.observableArray([]);\r\n        this.rollingInProgress = ko.observable(false);\r\n        this.totalDiceSuccesses = ko.computed(() => {\r\n            if (this.rollingInProgress() || this.rollRounds().length === 0) return -1;\r\n\r\n            return this.rollRounds().reduce((total: number, r: Array<number>) => {\r\n                return total + r.reduce((total: number, d: number) => total + (d > 7 ? 1 : 0), 0);\r\n            }, 0);\r\n        }, this);\r\n        this.totalDiceSuccessesDisplay = ko.computed(() => {\r\n            return this.totalDiceSuccesses() >= 0 ? \"\" + this.totalDiceSuccesses() : \"???\";\r\n        }, this);\r\n    }\r\n\r\n    public incrementDicePool(amount: number): () => void {\r\n        return () => {\r\n            this.dicePool(this.dicePool() + amount);\r\n        };\r\n    }\r\n\r\n    public rollDice(): void {\r\n        const roller = new RollState(this);\r\n        roller.beginRoll();\r\n    }\r\n}\r\n\r\nclass RollState {\r\n    private _diceObj: Dice;\r\n    private _currentRound: number;\r\n    private _currentDice: number;\r\n    private _currentRoundRolls: number;\r\n    private _currentRoundResults: Array<number>;\r\n    private _nextRoundRolls: number;\r\n    private _intervalHandle: number;\r\n\r\n    public constructor(diceObj: Dice) {\r\n        this._diceObj = diceObj;\r\n        this._currentRound = 0;\r\n        this._currentDice = 0;\r\n        this._currentRoundRolls = diceObj.dicePool();\r\n        this._currentRoundResults = [];\r\n        this._nextRoundRolls = 0;\r\n        this._intervalHandle = null;\r\n    }\r\n\r\n    public beginRoll(): void {\r\n        this._diceObj.rollingInProgress(true);\r\n        this._diceObj.rollRounds.removeAll();\r\n        for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n        this._diceObj.rollRounds.push(this._currentRoundResults);\r\n\r\n        this._intervalHandle = window.setInterval(() => {\r\n            const nextRoll = randomInteger(1, 11);\r\n            if (nextRoll === 10) {\r\n                this._nextRoundRolls++;\r\n                let critMessage = document.getElementById(\"critMessage\");\r\n                if (critMessage) {\r\n                    critMessage.remove();\r\n                }\r\n                critMessage = document.createElement(\"div\");\r\n                critMessage.classList.add(\"crit-message\");\r\n                critMessage.innerText = \"Crit!\";\r\n                critMessage.id = \"critMessage\";\r\n                document.getElementsByClassName(\"diceContainer\")[0].appendChild(critMessage);\r\n            }\r\n            this._currentRoundResults[this._currentDice] = nextRoll;\r\n            this._diceObj.rollRounds.replace(this._diceObj.rollRounds()[this._currentRound], this._currentRoundResults);\r\n            this._currentDice++;\r\n\r\n            if (this._currentDice === this._currentRoundRolls) {\r\n                if (this._nextRoundRolls === 0) {\r\n                    window.clearInterval(this._intervalHandle);\r\n                    this._diceObj.rollingInProgress(false);\r\n                    const critMessage = document.getElementById(\"critMessage\");\r\n                    if (critMessage) {\r\n                        critMessage.remove();\r\n                    }\r\n                    return;\r\n                }\r\n                else {\r\n                    this._currentRound++;\r\n                    this._currentRoundRolls = this._nextRoundRolls;\r\n                    this._nextRoundRolls = 0;\r\n                    this._currentDice = 0;\r\n                    this._currentRoundResults = [];\r\n                    for (let i = 0; i < this._currentRoundRolls; i++) this._currentRoundResults.push(-1);\r\n                    this._diceObj.rollRounds.push(this._currentRoundResults);\r\n                }\r\n            }\r\n        }, 250);\r\n    }\r\n}","import Application from \"./Application\";\r\nimport Equipment from \"./Character/Equipment\";\r\nimport InventoryItem from \"./Character/InventoryItem\";\r\nimport Merit from \"./Character/Merit\";\r\nimport Note from \"./Character/Note\";\r\nimport { applyCustomKnockoutCode } from \"./utils\";\r\n\r\napplyCustomKnockoutCode();\r\n\r\nconst constructors = {\r\n    Equipment: Equipment,\r\n    InventoryItem: InventoryItem,\r\n    Merit: Merit,\r\n    Note: Note\r\n};\r\nObject.defineProperty(window, \"constructors\", { value: constructors });\r\n\r\nconst app = new Application();\r\nko.applyBindings(app);\r\n\r\n// Exposing the view model to the global state in case manual changes need to be applied\r\nObject.defineProperty(window, \"app\", { value: app });\r\n\r\nfunction toggleTooltips(enable: boolean): void {\r\n    if (enable) $(\"[data-toggle='tooltip']\").tooltip();\r\n    else $(\"[data-toggle='tooltip']\").tooltip(\"dispose\");\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    toggleTooltips(window.outerWidth >= 992);\r\n});\r\ntoggleTooltips(window.outerWidth >= 992);","import Damage from \"./Character/Damage\";\r\n\r\nexport function randomInteger(minInclusive = 0, maxExclusive = 10): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.floor(Math.random() * (maxExclusive - minInclusive)) + minInclusive;\r\n}\r\n\r\nexport function randomFloat(minInclusive = 0, maxExclusive = 1): number {\r\n    if (maxExclusive < minInclusive) {\r\n        [minInclusive, maxExclusive] = [maxExclusive, minInclusive];\r\n    }\r\n\r\n    return Math.random() * (maxExclusive - minInclusive) + minInclusive;\r\n}\r\n\r\nexport function applyCustomKnockoutCode() {\r\n    ko.bindingHandlers.dice = {\r\n        update: (element: HTMLElement, valueAccessor: () => KnockoutObservableArray<Array<number>>) => {\r\n            const rollRounds = valueAccessor()();\r\n            if (rollRounds.length === 0) {\r\n                element.innerHTML = \"\";\r\n                return;\r\n            }\r\n    \r\n            let divs = element.getElementsByClassName(\"dice-round\");\r\n            if (divs.length !== rollRounds.length) {\r\n                const newRound = document.createElement(\"div\");\r\n                newRound.classList.add(\"dice-round\");\r\n                const rolls = rollRounds[rollRounds.length - 1];\r\n                for (let i = 0; i < rolls.length; i++) {\r\n                    const span = document.createElement(\"span\");\r\n                    const delay = randomFloat(0, 0.5);\r\n                    span.style.animation = `rollingDice 0.5s linear -${delay}s infinite alternate`;\r\n                    span.classList.add(\"dice\");\r\n                    newRound.appendChild(span);\r\n                }\r\n                element.appendChild(newRound);\r\n                divs = element.getElementsByClassName(\"dice-round\");\r\n            }\r\n    \r\n            for (let i = 0; i < rollRounds.length; i++) {\r\n                const rolls = rollRounds[i];\r\n                const spans = divs[i].getElementsByClassName(\"dice\");\r\n                for (let j = 0; j < rolls.length; j++) {\r\n                    const roll = rolls[j];\r\n                    const span = <HTMLSpanElement>spans[j];\r\n    \r\n                    if (roll !== -1) {\r\n                        span.style.animation = null;\r\n                        span.style.backgroundImage = `url('images/dice-${roll}.png')`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.damageDisplay = {\r\n        init: (element: HTMLElement) => {\r\n            for (let i = 0; i < 15; i++) {\r\n                const span = document.createElement(\"span\");\r\n                span.classList.add(\"damage\");\r\n                span.classList.add(\"none\");\r\n                element.appendChild(span);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => Damage) => {\r\n            const damageObj = valueAccessor();\r\n            const spans = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < spans.length; i++) {\r\n                if (i < damageObj.aggravated()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.add(\"aggravated\");\r\n                }\r\n                else if (i - damageObj.aggravated() < damageObj.lethal()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"lethal\");\r\n                }\r\n                else if (i - damageObj.aggravated() - damageObj.lethal() < damageObj.bashing()) {\r\n                    spans[i].classList.remove(\"none\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"bashing\");\r\n                }\r\n                else {\r\n                    spans[i].classList.remove(\"bashing\");\r\n                    spans[i].classList.remove(\"lethal\");\r\n                    spans[i].classList.remove(\"aggravated\");\r\n                    spans[i].classList.add(\"none\");\r\n                }\r\n    \r\n                if (i < damageObj.totalHealth()) {\r\n                    spans[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else {\r\n                    spans[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ko.bindingHandlers.attribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                dot.classList.add(\"pointer\");\r\n                dot.dataset.toggle = \"tooltip\";\r\n                dot.title = \"\" + (i + 1);\r\n                $(dot).tooltip();\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n    \r\n            const clearDot = document.createElement(\"div\");\r\n            clearDot.classList.add(\"clear-dot\");\r\n            clearDot.innerHTML = \"&times;\";\r\n            clearDot.dataset.toggle = \"tooltip\";\r\n            clearDot.title = \"Clear\";\r\n            clearDot.addEventListener(\"click\", () => {\r\n                valueAccessor().value(0);\r\n            });\r\n            element.appendChild(clearDot);\r\n            $(clearDot).tooltip();\r\n    \r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                element.appendChild(dot);\r\n                dot.addEventListener(\"click\", () => {\r\n                    valueAccessor().value(index + 1);\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByClassName(\"attribute-dot\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                const dot = <HTMLSpanElement>dots[i];\r\n                dot.style.backgroundColor = null;\r\n                dot.style.borderColor = null;\r\n                if (i < value) {\r\n                    dot.style.backgroundColor = \"var(--body-color)\";\r\n                    dot.style.borderColor = \"var(--body-color)\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.readOnlyAttribute = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number }) => {\r\n            for (let i = 0; i < valueAccessor().max; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n            }\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, max: number, hideUnfilled?: boolean }) => {\r\n            const value = valueAccessor().value();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                dots[i].classList.remove(\"filled\");\r\n                if (i < value) {\r\n                    dots[i].classList.add(\"filled\");\r\n                    dots[i].classList.remove(\"HIDDEN\");\r\n                }\r\n                else if (valueAccessor().hideUnfilled) {\r\n                    dots[i].classList.add(\"HIDDEN\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.used = {\r\n        init: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const dots: Array<HTMLSpanElement> = [];\r\n            for (let i = 0; i < 12; i++) {\r\n                const dot = document.createElement(\"span\");\r\n                dot.classList.add(\"attribute-dot\");\r\n                element.appendChild(dot);\r\n    \r\n                dots.push(dot);\r\n    \r\n                dot.addEventListener(\"pointerenter\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                        if (index <= i) dot.classList.add(\"hoverFilled\");\r\n                    });\r\n                });\r\n                dot.addEventListener(\"pointerleave\", () => {\r\n                    dots.forEach((dot: HTMLSpanElement) => {\r\n                        dot.classList.remove(\"hoverFilled\");\r\n                    });\r\n                });\r\n            }\r\n            dots.forEach((dot: HTMLSpanElement, index: number) => {\r\n                dot.addEventListener(\"click\", () => {\r\n                    valueAccessor().value(index + 1);\r\n                });\r\n            });\r\n        },\r\n        update: (element: HTMLElement, valueAccessor: () => { value: KnockoutObservable<number>, total: KnockoutComputed<number> }) => {\r\n            const used = valueAccessor().value();\r\n            const total = valueAccessor().total();\r\n            const dots = element.getElementsByTagName(\"span\");\r\n            for (let i = 0; i < dots.length; i++) {\r\n                if (i < used) dots[i].classList.add(\"filled-red\");\r\n                else dots[i].classList.remove(\"filled-red\");\r\n    \r\n                if (i < total) dots[i].classList.remove(\"HIDDEN\");\r\n                else dots[i].classList.add(\"HIDDEN\");\r\n            }\r\n        }\r\n    };\r\n    \r\n    ko.bindingHandlers.focusOnCreation = {\r\n        init: (element: HTMLInputElement | HTMLTextAreaElement) => {\r\n            window.setTimeout(() => {\r\n                if (element.value) return;\r\n                element.focus();\r\n            }, 1);\r\n        }\r\n    };\r\n    \r\n    (<any>ko.extenders).lockable = (target: any, locked: KnockoutObservable<boolean>) => {\r\n        const result = ko.pureComputed({\r\n            read: target,\r\n            write: (newValue: any) => {\r\n                if (locked()) {\r\n                    target.notifySubscribers(target());\r\n                }\r\n                else {\r\n                    target(newValue);\r\n                    target.notifySubscribers(newValue);\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        return result;\r\n    };\r\n    \r\n    (<any>ko.extenders).numeric = (target: any, args: { precision?: number, min?: number, max?: number }) => {\r\n        const precision = args.precision || 0;\r\n        const min = args.min || -Infinity;\r\n        const max = args.max || Infinity;\r\n    \r\n        // Create a writeable computed observable to intercept writes to our observable\r\n        const result = ko.pureComputed({\r\n            read: target, // Always return the original observable's value\r\n            write: (newValue: any) => {\r\n                const current = target();\r\n                const roundingMultiplier = Math.pow(10, precision);\r\n                const newValueAsNum = isNaN(newValue) ? 0 : +newValue;\r\n                let valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\r\n                if (valueToWrite < min) valueToWrite = min;\r\n                else if (valueToWrite > max) valueToWrite = max;\r\n    \r\n                // Only write if it changed\r\n                if (valueToWrite !== current) {\r\n                    target(valueToWrite);\r\n                }\r\n                else {\r\n                    // If the rounded value is the same, but a different value was written,\r\n                    // force a notification for the current field\r\n                    if (newValue !== current) {\r\n                        target.notifySubscribers(valueToWrite);\r\n                    }\r\n                }\r\n            }\r\n        }).extend({ notify: \"always\" });\r\n    \r\n        // Initialize with current value to make sure it is rounded appropriately\r\n        result(target());\r\n    \r\n        // Return the new computed observable\r\n        return result;\r\n    };\r\n}"]}